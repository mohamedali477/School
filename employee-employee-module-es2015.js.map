{"version":3,"sources":["./src/app/post-login/employee/employee-list/employee-list.component.ts","./src/app/post-login/employee/employee-list/employee-list.component.html","./src/app/post-login/employee/employee-management/employee-management.component.ts","./src/app/post-login/employee/employee-management/employee-management.component.html","./src/app/post-login/employee/employee-routing.module.ts","./src/app/post-login/employee/employee.module.ts","./src/app/post-login/employee/my-profile/my-profile.component.ts","./src/app/post-login/employee/my-profile/my-profile.component.html","./src/app/post-login/employee/new-employee/new-employee.component.ts","./src/app/post-login/employee/new-employee/new-employee.component.html","./src/app/post-login/employee/services/employee.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6G;AAC9E;AAC4B;AAGhB;;;;;;;;;;;;;;;;;;;;;;;ICwC/B,6EAEE;IADA,scAAmC;IACnC,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B,4DAAS;;;;IACT,6EAGE;IADA,wcAAqC;IACrC,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IACrC,4DAAS;;;;IAvBb,yEACE;IAAA,yEAAmB;IAAA,uDAAkD;IAAA,4DAAK;IAC1E,qEACE;IAAA,gFAAyD;IAC3D,4DAAK;IACL,qEAAI;IAAA,uDAAgC;IAAA,4DAAK;IACzC,qEAAI;IAAA,uDAA+B;IAAA,4DAAK;IACxC,qEAAI;IAAA,wDAAkC;IAAA,4DAAK;IAC3C,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IACvC,sEAAI;IAAA,wDAAiC;;IAAA,4DAAK;IAC1C,sEAAI;IAAA,wDAAuD;;IAAA,4DAAK;IAChE,0EACE;IAAA,8EACE;IADqE,mYAAmC;IACxG,gFAA0B;IAAA,sEAAU;IAAA,4DAAW;IACjD,4DAAS;IACT,gIAEE;IAEF,gIAGE;IAEJ,4DAAK;IACP,4DAAK;;;;;IAxBgB,0DAAkD;IAAlD,uIAAkD;IAEnD,0DAAuB;IAAvB,sFAAuB;IAErC,0DAAgC;IAAhC,mGAAgC;IAChC,0DAA+B;IAA/B,kGAA+B;IAC/B,0DAAkC;IAAlC,qGAAkC;IAClC,0DAA8B;IAA9B,iGAA8B;IAC9B,0DAAiC;IAAjC,gKAAiC;IACjC,0DAAuD;IAAvD,+KAAuD;IAKjD,0DAAuB;IAAvB,2FAAuB;IAIvB,0DAA+E;IAA/E,mKAA+E;;;;IAuBvF,6EAEE;IADA,gdAAmC;IACnC,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B,4DAAS;;;;IACT,6EAEE;IADA,kdAAqC;IACrC,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IACrC,4DAAS;;;;IAlBjB,wEACE;IAAA,2EACE;IAAA,0EACE;IAAA,0EACE;IAAA,oEAAG;IAAA,uDAAmD;IAAA,4DAAI;IAC5D,4DAAM;IACN,0EACE;IAAA,6EAEE;IADA,4YAAmC;IACnC,+EAA0B;IAAA,qEAAU;IAAA,4DAAW;IACjD,4DAAS;IACT,0IAEE;IAEF,0IAEE;IAEJ,4DAAM;IACR,4DAAM;IACN,4EAGY;IACd,4DAAO;IACP,iEACF;IAAA,qEAAe;;;;;IA1BP,0DAAkB;IAAlB,2EAAkB;IAGf,0DAAmD;IAAnD,kJAAmD;IAO9C,0DAAuB;IAAvB,2FAAuB;IAIvB,0DAA+E;IAA/E,mKAA+E;IAMhF,0DAAuB;IAAvB,sFAAuB;;;IAQxC,6EAAgE;;AD3E3D,MAAM,qBAAqB;IAgChC,YACU,eAAgC,EAChC,cAAiC,EAClC,aAA4B,EAC5B,SAA2B;QAH1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAmB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAkB;QAlC5B,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;QAE3B,oBAAe,GAAG,IAAI,0DAAY,EAAE;QACpC,oBAAe,GAAG,IAAI,0DAAY,EAAE;QACpC,sBAAiB,GAAG,IAAI,0DAAY,EAAE;QAEvC,cAAS,GAAU,EAAE;QAG9B,cAAS,GAAG,KAAK,CAAC;QAElB,gBAAW,GAAG,4DAAW;QACzB,eAAU,GAAG,2DAAU,CAAC;QACxB,cAAS,GAAG,EAAE,CAAC;QAGf,aAAQ,GAAG,KAAK;QACT,oBAAe,GAAG,KAAK;QAE9B,iBAAY,GAAG,IAAI;QACnB,WAAM,GAAG;YACP,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS;YAC3C,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ;YACzC,MAAM,EAAE,CAAC;SACV;QACD,eAAU,GAAG;YACX,SAAS,EAAG,qBAAqB;YACjC,KAAK,EAAG,IAAI;SACb;QAQG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC;IACxE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE;IAChB,CAAC;IAED,OAAO;QAEL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,YAAY,GAAG;YACjB,gBAAgB,EAAG,IAAI,CAAC,YAAY;YACpC,MAAM,EAAG;gBACP,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;gBAClC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;aACjC;YACD,OAAO,EAAC;gBACN,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;gBACtC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;aAC/B;SACF;QAED,IAAI,CAAC,eAAe;aACnB,eAAe,CAAC,YAAY,CAAC;aAC7B,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC,SAAS,CACR,CAAC,MAAW,EAAE,EAAE;YACd,IAAI,CAAC,SAAS,GAAE,KAAK;YACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI;YAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK;QACnC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,SAAS,GAAE,KAAK;YACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CACA,CAAC;IACN,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/B,CAAC;IAED,aAAa,CAAC,EAAE;QACd,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC;IACjC,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK;IACvB,CAAC;IAED,WAAW,CAAC,IAAU;QACpB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM;QACvC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK;QAChD,IAAI,CAAC,OAAO,EAAE;QACd,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAED,aAAa,CAAC,SAAoB;QAChC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS;QAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ;QACzC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;;0FA/GU,qBAAqB;qGAArB,qBAAqB;QCflC,0EAEE;QADA,qJAAW,aAAS,IAAC;QACrB,+EACE;QAAA,2EACE;QAD2B,kKAAiB,uBAAmB,IAAC;QAChE,2EACE;QAAA,qEACE;QAAA,wEAA2B;QAAA,4DAAC;QAAA,4DAAK;QACjC,wEACE;QAAA,uEACA;QAAA,2EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC3B,4DAAK;QACL,yEACE;QAAA,uEACA;QAAA,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC3B,4DAAK;QACL,yEACE;QAAA,mEAAM;QAAA,4EAAU;QAAA,wEAAY;QAAA,4DAAW;QACzC,4DAAK;QACL,yEACE;QAAA,qEAAQ;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QACpC,4DAAK;QACL,yEACE;QAAA,gEAAG;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC/B,4DAAK;QACL,yEAAmD;QAAA,kEAAM;QAAA,4DAAK;QAC9D,qEACK;QACP,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,oHACE;QAyBJ,4DAAQ;QACV,4DAAQ;QACV,4DAAe;QAEf,gFACE;QAAA,wIACE;QA2BJ,4DAAe;QACf,4IAA8C;QAC9C,qFAEgB;QADqE,yJAAQ,yBAAqB,IAAC;QACnH,4DAAgB;QAElB,4DAAO;;QA/FD,kFAAqB;QA8BJ,2DAAmD;QAAnD,kFAAmD;QA+BxD,0DAAkE;QAAlE,kFAAkE;QA6BjE,0DAA4B;QAA5B,2FAA4B;QAC9B,0DAAwB;QAAxB,qFAAwB;;6FD5E5B,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAKE,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;kBAEN,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AExBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACS;AACnC;AACf;AAKY;;;;;;;;;;;;;;;;;;;;;ICNnC,6EAEI;IAF0D,mVAAuB;IAEjF,2EAAU;IAAA,qEAAU;IAAA,4DAAW;IAAC,6EACpC;IAAA,4DAAS;;;;IAgBT,6EAGI;IAH4D,wVAA2B;IAGvF,2EAAU;IAAA,0EAAe;IAAA,4DAAW;IAAC,kFACzC;IAAA,4DAAS;;;;IAKjB,uFAC+D;IAA3D,gYAAuC;IAAC,4DAAmB;;;IADH,sFAAmB;;;;IAM3E,6EAEI;IADA,kWAAqC;IACrC,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IAAC,4EACxC;IAAA,4DAAS;;ADtBN,MAAM,2BAA2B;IAiEtC,YACU,EAAe,EACf,aAA4B,EAC5B,eAAgC,EAChC,SAA2B;QAH3B,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAkB;QAnE7B,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;QAK9B,oBAAe,GAAG,KAAK;QACvB,iBAAY,GAAG,KAAK;QACpB,sBAAiB,GAAG,KAAK;QACzB,iBAAY,GAAG,IAAI;QACnB,qBAAgB,GAAG,KAAK;QAE/B,cAAS,GAAG,KAAK;QACjB,OAAE,GAAG,IAAI;QACT,eAAU,GAAG,2DAAU;QAGvB,iBAAY,GAAkB;YAC5B;gBACE,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,YAAY;gBACnB,SAAS,EAAE,MAAM;gBACjB,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,mBAAmB;aAC1B;YACD;gBACE,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,WAAW;gBAClB,SAAS,EAAE,MAAM;gBACjB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,eAAe;aACtB;YACD;gBACE,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,UAAU;gBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;aACjC;YACD;gBACE,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,YAAY;gBAClB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;aACnC;YACD;gBACE,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,MAAM;gBACb,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;aAC/B;SACF,CAAC;QASA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC;QACnE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;IACrC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;QACnD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IACxB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,EAAE,GAAG,IAAI;QACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,KAAK;IAC/C,CAAC;IACD,eAAe;QACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,GAAG,KAAK;IACpD,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,eAAe,EAAE;QACtB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;SACzB;IACH,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,GAAG,KAAK;IACpD,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,KAAK;IAC/C,CAAC;IAED,iBAAiB,CAAC,KAAK;QACrB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI;IAC9B,CAAC;IAED,yBAAyB;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,qCAAqC,CAAC;QAE3F,SAAS,CAAC,WAAW,EAAE;aACpB,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC,SAAS,CACR,CAAC,SAAkB,EAAE,EAAE;YACrB,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,IAAI;gBACrB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;qBACzC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBAClC,SAAS,CACR,CAAC,MAAM,EAAE,EAAE;oBACT,IAAI,CAAC,eAAe,EAAE;oBACtB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;oBACxB,IAAI,CAAC,SAAS,GAAG,KAAK;gBACxB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;oBACR,IAAI,CAAC,SAAS,GAAG,KAAK;gBACxB,CAAC,CACF;aACJ;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,SAAS,GAAG,KAAK;QACxB,CAAC,CACF,CAAC;IACN,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;;sGAvJU,2BAA2B;2GAA3B,2BAA2B;kEAI3B,4FAAqB;;;;;;;QCrBlC,gFACI;QAAA,yEACI;QAAA,6HAEI;QAER,4DAAM;QACN,yEACI;QAAA,oFACI;QAAA,0EACI;QAAA,0EACI;QAD2B,6JAAY,mBAAe,IAAC;QACvD,6EAAyE;QACzE,kFAAmG;QAA3C,mKAAW,mBAAe,IAAC;QAAC,4DAAe;QACvG,4DAAO;QACX,4DAAO;QACX,4DAAc;QAClB,4DAAM;QACV,4DAAa;QAEb,8EACI;QAAA,uEACI;QAAA,gIAGI;QAER,4DAAM;QACV,4DAAa;QACb,iEAAI;QAAA,iEAEJ;QAAA,oJAC4C;QAC5C,yFACoH;QADxE,yLAAmB,2BAAuB,IAAC,qIAC9D,6BAAyB,IADqC,iIAChB,2BAAuB,IADP;QACS,4DAAoB;QAEpH,qEACI;QAAA,gIAEI;QAER,4DAAI;;QAtC0B,0DAAuC;QAAvC,yGAAuC;QAMhD,0DAAmB;QAAnB,gFAAmB;QACtB,0DAAgB;QAAhB,yEAAgB;QACZ,0DAAwB;QAAxB,qFAAwB;QACZ,0DAAmB;QAAnB,gFAAmB;QACnB,0DAAmB;QAAnB,gFAAmB;QASvB,0DAAyC;QAAzC,2GAAyC;QASrD,0DAAyC;QAAzC,2GAAyC;QAExC,0DAAwB;QAAxB,qFAAwB;QAI/B,0DAAwC;QAAxC,0GAAwC;;6FDnBvC,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;kBAKE,uDAAS;mBAAC,4FAAqB;;kBAC/B,uDAAS;mBAAC,YAAY;;;;;;;;;;;;;;AEtBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC2C;AAC3B;;;AAEvE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,8GAA2B;QACtC,MAAM,EAAC,iBAAiB;KACzB;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mFAAkB;QAC7B,MAAM,EAAC,iBAAiB;KACzB;CACF,CAAC;AAMK,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,qBAAqB,uFAFtB,4DAAY;6FAEX,qBAAqB;cAJjC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGyB;AACW;AACG;AACkB;AACpC;AACL;AACc;;AAYhE,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,mBAJf;QACR,0EAAe;KAChB,YANQ;YACP,8EAAqB;YACrB,sEAAY;SACb;mIAKU,cAAc,mBATV,yFAAoB,EAAE,4FAAqB,EAAE,8GAA2B,EAAE,mFAAkB,aAEzG,8EAAqB;QACrB,sEAAY;6FAMH,cAAc;cAV1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,yFAAoB,EAAE,4FAAqB,EAAE,8GAA2B,EAAE,mFAAkB,CAAC;gBAC5G,OAAO,EAAE;oBACP,8EAAqB;oBACrB,sEAAY;iBACb;gBACD,SAAS,EAAC;oBACR,0EAAe;iBAChB;aACF;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEJ;;;;AAOvC,MAAM,kBAAkB;IAM7B,YACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAL/B,OAAE,GAAG,IAAI;QACT,eAAU,GAAG,IAAI;QACjB,WAAM,GAAG,gBAAgB;IAI5B,CAAC;IAEL,QAAQ;QACN,IAAI,SAAS,GAAG,2DAAU,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC;QACnG,IAAI,UAAU,GAAG,2DAAU,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC;QAErG,IAAG,CAAC,UAAU,IAAI,CAAC,SAAS,EAAC;YAC3B,IAAI,IAAI,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;YACzD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjE;IACH,CAAC;;oFAlBU,kBAAkB;kGAAlB,kBAAkB;QCT/B,iFAC4C;;QAD1B,gFAAmB;;6FDSxB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+H;AAChG;AAC0C;AAC3B;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;ICmBjC,yFACE;IAAA,6FACE;IAAA,kFACE;IAAA,+EACE;IAAA,+EACF;IAAA,4DAAY;IACd,4DAAkB;IACpB,4DAA6B;IAC7B,uFAEwB;IAC1B,4DAAsB;;;IARL,0DAA4C;IAA5C,+GAA4C;IAKpC,0DAA4C;IAA5C,+GAA4C;;;IA/B3E,6EACE;IAAA,iFACmB;IAEnB,yEACE;IAAA,+EAEiB;IACjB,mFACE;IAAA,yFACE;IAAA,6FACE;IAAA,kFACE;IAAA,+EACE;IAAA,0EACF;IAAA,4DAAY;IACd,4DAAkB;IACpB,4DAA6B;IAC7B,uFAEuB;IACvB,+EACyD;IAC3D,4DAAsB;IACtB,gKACE;IAYF,0FACE;IAAA,8FACE;IAAA,mFACE;IAAA,gFACE;IAAA,+EACF;IAAA,4DAAY;IACd,4DAAkB;IACpB,4DAA6B;IAC7B,gFAEgB;IAClB,4DAAsB;IACtB,0FACE;IAAA,8FACE;IAAA,mFACE;IAAA,gFACE;IAAA,6EACF;IAAA,4DAAY;IACd,4DAAkB;IACpB,4DAA6B;IAC7B,oFAEoB;IACtB,4DAAsB;IACtB,0FACE;IAAA,8FACE;IAAA,mFACE;IAAA,gFACE;IAAA,6EACF;IAAA,4DAAY;IACd,4DAAkB;IACpB,4DAA6B;IAC7B,yFAEyB;IAC3B,4DAAsB;IACtB,0FACE;IAAA,8FACE;IAAA,mFACE;IAAA,gFACE;IAAA,4EACF;IAAA,4DAAY;IACd,4DAAkB;IACpB,4DAA6B;IAC7B,2FAE2B;IAC7B,4DAAsB;IAEtB,0FACE;IAAA,8FACE;IAAA,mFACE;IAAA,gFACE;IAAA,qEACF;IAAA,4DAAY;IACd,4DAAkB;IACpB,4DAA6B;IAC7B,oFAEoB;IACtB,4DAAsB;IACxB,4DAAgB;IAClB,4DAAM;IACR,4DAAa;;;IAlGkC,0DAAiB;IAAjB,oFAAiB;IAI5C,0DAAiB;IAAjB,oFAAiB;IAGA,0DAAmC;IAAnC,sGAAmC;IAIjD,0DAAuC;IAAvC,0GAAuC;IAKhC,0DAAuC;IAAvC,0GAAuC;IAG/C,0DAAiB;IAAjB,oFAAiB;IAGM,0DAA2B;IAA3B,+FAA2B;IAgBjD,0DAA2C;IAA3C,8GAA2C;IAK3C,0DAA2C;IAA3C,8GAA2C;IAO3C,0DAAyC;IAAzC,4GAAyC;IAKrC,0DAAyC;IAAzC,4GAAyC;IAO7C,0DAAyC;IAAzC,4GAAyC;IAKhC,0DAAyC;IAAzC,4GAAyC;IAOlD,0DAA2C;IAA3C,8GAA2C;IAKhC,0DAA2C;IAA3C,8GAA2C;IAQtD,0DAAyC;IAAzC,4GAAyC;IAKrC,0DAA8C;IAA9C,4GAA8C;;;IAOzE,8EAAiG;;;IAA/D,oFAAiB;;ADvFhD,MAAM,oBAAoB;IA+B/B,YACS,EAAe,EACd,cAAiC,EAClC,aAA4B,EAC5B,eAAgC,EAC/B,SAA2B,EAC3B,YAA2B;QAL5B,OAAE,GAAF,EAAE,CAAa;QACd,mBAAc,GAAd,cAAc,CAAmB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,cAAS,GAAT,SAAS,CAAkB;QAC3B,iBAAY,GAAZ,YAAY,CAAe;QApC7B,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;QAEpB,kBAAa,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC3C,iBAAY,GAAG,IAAI;QACnB,eAAU,GAAG,KAAK;QACX,SAAI,GAAG,IAAI;QACX,eAAU,GAAG,IAAI;QAExB,0BAAqB,GAAG,KAAK;QAC7B,WAAM,GAAG,UAAU;QAE5B,aAAQ,GAAc,IAAI,wDAAS,CAAC,EAAE,CAAC;QACvC,eAAU,GAAG,2DAAU;QAEvB,uBAAkB,GAAG,KAAK;QAC1B,cAAS,GAAG,KAAK;QACjB,sBAAiB,GAAG,IAAI;QAExB,uBAAkB,GAAG,CAAC;QACtB,eAAU,GAAG,CAAC;QAEd,UAAK,GAAG,OAAO,IAAI,CAAC,MAAM,WAAW;QACrC,aAAQ,GAAG,uCAAuC,IAAI,CAAC,MAAM,GAAG;QAEhE,qBAAgB,GAAG,oCAAoC,IAAI,CAAC,MAAM,IAAI;QACtE,oBAAe,GAAG,4CAA4C;QAGvD,wBAAmB,GAAG,KAAK;IAUlC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,yBAAyB,EAAE;QAChC,IAAI,CAAC,6BAA6B,EAAE;QACpC,IAAI,CAAC,gBAAgB,EAAE;QAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5B,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YACjC,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAChC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAChC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC/B,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;QAErD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,cAAc,EAAE;SACtB;IAEH,CAAC;IAGD,yBAAyB;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QACxD,IAAI,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAC/D,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,iBAAiB,EAAE,YAAY,CAAC;QAC7E,IAAI,CAAC,mBAAmB,GAAG,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;IACnF,CAAC;IAED,6BAA6B;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QACxD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;IACvH,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,UAAU,IAAI,CAAC,MAAM,GAAG;YACrC,IAAI,CAAC,QAAQ,GAAG,sCAAsC,IAAI,CAAC,MAAM,GAAG;YAEpE,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,KAAK,GAAG,QAAQ,IAAI,CAAC,MAAM,GAAG;gBACnC,IAAI,CAAC,QAAQ,GAAG,6BAA6B,IAAI,CAAC,MAAM,GAAG;aAE5D;SACF;IACH,CAAC;IAED,cAAc;QACZ,sEAAsE;QAEtE,IAAI,CAAC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAAC,SAAS,GAAG,IAAI;QAErB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC;aAChD,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC,SAAS,CACR,CAAC,MAAW,EAAE,EAAE;YAEd,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK;YAEtB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACvB,IAAI,CAAC,iBAAiB,GAAG,OAAO;gBAChC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;gBAC7D,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YACrE,CAAC,CAAC,CAAC;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK;YACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CACF,CAAC;IACN,CAAC;IAED,gBAAgB,CAAC,OAAwB,EAAE,SAAiB;QAC1D,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;QAEtD,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,SAAkB,EAAE,EAAE;YACvD,IAAI,SAAS,EAAE;gBACb,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC;aAC9C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,KAAY;QAEnB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;QAChC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI;YAErB,IAAI,CAAC,eAAe,CAAC,oBAAoB,CACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CACpB;iBACE,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAClC,SAAS,CACR,CAAC,MAAW,EAAE,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK;gBAEtB,IAAI,MAAM,CAAC,SAAS,EAAE;oBACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC7B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,MAAM,sCAAsC,EAAE,GAAG,EAAE,SAAS,CAAC;oBAErG,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;wBAC/B,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;qBACpD;iBACF;qBACI;oBACH,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC;iBAC7D;YAEH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CACF,CAAC;SACL;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,qDAAqD,EAAE,GAAG,EAAE,MAAM,CAAC;SACpG;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;;wFAhLU,oBAAoB;oGAApB,oBAAoB;QCfjC,0EACE;QAAA,0EACE;QAD2B,sJAAY,oBAAgB,IAAC;QACxD,gIACE;QAmGF,kIAAkF;QACpF,4DAAO;QACP,gEACF;QAAA,4DAAO;;QAzGD,kFAAqB;QACnB,0DAAsB;QAAtB,mFAAsB;QACd,0DAA2B;QAA3B,yFAA2B;QAoGzB,0DAAmB;QAAnB,iFAAmB;;6FDvFxB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;kBAIE,oDAAM;;kBACN,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEzBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgB;;;;;AAMpD,MAAM,eAAe;IAI1B,YACU,KAAiB,EACjB,QAAwB,EACxB,cAA6B;QAF7B,UAAK,GAAL,KAAK,CAAY;QACjB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,mBAAc,GAAd,cAAc,CAAe;QALvC,cAAS,GAAG,eAAe;IAO3B,CAAC;IAED,oBAAoB,CAAC,YAAY;QAC/B,IAAI,YAAY,GAAG,KAAK;QAExB,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,2DAAU,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE;YAC3E,YAAY,GAAG,IAAI;SACpB;QAED,IAAG,YAAY,EAAC;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAAW,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,mBAAmB,EAAE,YAAY,CAAC;SAChG;aACG;YACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAAW,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,cAAc,EAAE,YAAY,CAAC;SAC3F;IACH,CAAC;IAED,eAAe,CAAC,YAAY;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAAW,CAAC,MAAM,GAAE,IAAI,CAAC,SAAS,GAAG,SAAS,EAAE,YAAY,CAAC;IACtF,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAE1D,IAAI,YAAY,GAAG,KAAK;QACxB,IAAI,KAAK,KAAK,2DAAU,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE;YACrD,YAAY,GAAG,IAAI;SACpB;QAED,IAAG,YAAY,EAAC;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4DAAW,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,sBAAsB,GAAE,KAAK,CAAC;SAC3F;aACG;YACF,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4DAAW,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,iBAAiB,GAAE,KAAK,CAAC;SACtF;IAEH,CAAC;IAED,cAAc,CAAC,EAAE;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4DAAW,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,oBAAoB,GAAE,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;IACnI,CAAC;;8EAjDU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU","file":"employee-employee-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { EmployeeService } from '../services/employee.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  employees = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions = false\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"basicInfo.firstName\",\n    isAsc : true\n  }\n\n  constructor(\n    private employeeService: EmployeeService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public plService: PostLoginService\n  ) {\n      this.editPermissions = this.plService.getPageEntitlements(5,1) === 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.employeeService\n    .getEmployeeList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.employees = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"'Employee List'\" [subTitle]=\"'Manage your employee for employees'\"\n  (refresh)=\"getList()\">\n  <large-screen>\n    <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n      <thead class=\"thead\">\n        <tr>\n          <th class=\"sr\" colspan=\"2\">#</th>\n          <th matRipple mat-sort-header=\"basicInfo.firstName\">\n            First Name\n            <mat-icon>face</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.lastName\">\n            Last Name\n            <mat-icon>face</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"contactInfo.contactNo\">\n            Mob No<mat-icon>phone_iphone</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"contactInfo.email\">\n            Email Id<mat-icon>email</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.dob\">\n            DOB<mat-icon>today</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.genderId\">Gender</th>\n          <th class=\"action\">\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"tr\" *ngFor=\"let employee of employees; let idx = index\">\n          <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n          <td>\n            <user-small-pic [userId]=\"employee._id\"></user-small-pic>\n          </td>\n          <td>{{employee.basicInfo.firstName}}</td>\n          <td>{{employee.basicInfo.lastName}}</td>\n          <td>{{employee.contactInfo.contactNo}}</td>\n          <td>{{employee.contactInfo.email}}</td>\n          <td>{{employee.basicInfo.dob | date}}</td>\n          <td>{{employee.basicInfo.genderId | masterData : 'gender'}}</td>\n          <td class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Employee'\" class=\"icon-view\" (click)=\"viewClicked(employee._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Employee'\" class=\"icon-edit\"\n              (click)=\"editClicked(employee._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions && employee._id != masterData.superAdminEmployeeId.$oid\" \n            mat-icon-button appToolTip=\"'Delete Employee'\" class=\"icon-delete\"\n              (click)=\"deleteClicked(employee._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </large-screen>\n\n  <small-screen>\n    <ng-container *ngFor=\"let employee of employees; let idx = index; let odd = odd\">\n      <card [childCard]=\"true\" [header]=\"false\">\n        <row gap=\"2px\">\n          <div fxFlex=\"30%\">\n            <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n          </div>\n          <div fxFlex class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Employee'\" class=\"big-icon-view\"\n              (click)=\"viewClicked(employee._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Employee'\" class=\"big-icon-edit\"\n              (click)=\"editClicked(employee._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions && employee._id != masterData.superAdminEmployeeId.$oid\" mat-icon-button appToolTip=\"'Delete Employee'\" class=\"big-icon-delete\"\n              (click)=\"deleteClicked(employee._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </div>\n        </row>\n        <user-card [userId]=\"employee._id\" [firstName]=\"employee.basicInfo.firstName\"\n          [lastName]=\"employee.basicInfo.lastName\" [contactNo]=\"employee.contactInfo.contactNo\"\n          [email]=\"employee.contactInfo.email\" [dob]=\"employee.basicInfo.dob\" [genderId]=\"employee.basicInfo.genderId\">\n        </user-card>\n      </card>\n      <br>\n    </ng-container>\n  </small-screen>\n  <no-record-found *ngIf=\"employees.length ==0\"></no-record-found>\n  <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n    [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\" (page)=\"pagingClicked($event)\">\n  </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { MasterData } from '@env/environment';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { EmployeeService } from '../services/employee.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-employee-management',\n  templateUrl: './employee-management.component.html',\n  styleUrls: ['./employee-management.component.css']\n})\nexport class EmployeeManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(EmployeeListComponent) private _ListPage: EmployeeListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n  \n  public editPermissions = false\n  public showViewPage = false\n  public showAddChangePage = false\n  public showListPage = true\n  public showDeleteButton = false\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"First Name\",\n      inputType: \"text\",\n      name: \"firstName\",\n      icon: \"accessibility_new\"\n    },\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Last Name\",\n      inputType: \"text\",\n      name: \"lastName\",\n      icon: \"accessibility\"\n    },\n    {\n      isViewMode: false,\n      type: \"date\",\n      label: \"DOB\",\n      name: \"dob\"\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Gender\",\n      name: \"genderId\",      \n      options: this.masterData.genders\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Religion\",\n      name: \"religionId\",\n      options: this.masterData.religions\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Cast\",\n      name: \"castId\",\n      options: this.masterData.casts\n    }\n  ];\n\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private employeeService: EmployeeService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(5,1) == 2\n    this.searchForm = this.fb.group({})\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteEmployeePermanently() {\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Employee'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n            this.isLoading = true\n            this.employeeService.deleteEmployee(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()\n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n\n","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            class=\"btn\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>person_add</mat-icon> Add New Employee\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Employee'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" class=\"btn\"\n            mat-raised-button appToolTip=\"'Go back to Employee List'\" matTooltipShowDelay=\"100\"\n            matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Employee List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<app-new-employee *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-employee>\n<app-employee-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (deleteButtonEvent)=\"deleteButtonEvent($event)\" (editButtonEvent)=\"editButtonEvent($event)\"></app-employee-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteEmployeePermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeManagementComponent } from './employee-management/employee-management.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\n\nconst routes: Routes = [\n  {\n    path: 'empmgmt',\n    component: EmployeeManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'myProfile',\n    component: MyProfileComponent,\n    outlet:'postLoginOutlet'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { NewEmployeeComponent } from './new-employee/new-employee.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeManagementComponent } from './employee-management/employee-management.component';\nimport { EmployeeService } from './services/employee.service';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\n\n@NgModule({\n  declarations: [NewEmployeeComponent, EmployeeListComponent, EmployeeManagementComponent, MyProfileComponent],\n  imports: [\n    EmployeeRoutingModule,\n    SharedModule\n  ],\n  providers:[\n    EmployeeService\n  ]\n})\nexport class EmployeeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { MasterData } from '@env/environment';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  public Id = null\n  public isViewMode = true\n  public entity = `'Your Profile'`\n\n  constructor(\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    let isStudent = MasterData.studentRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\n    let isGuardian = MasterData.guardianRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\n\n    if(!isGuardian && !isStudent){\n      let data =  JSON.parse(this.sharedService.loggedInData())\n      this.Id = this.sharedService.serializeMongoObjectId(data[\"_id\"])\n    }\n  }\n\n}\n","<app-new-employee [changeModeId]=\"Id\" [isComingFromMyProfile]=\"true\" [entity]=\"entity\"\n    [isViewMode]=\"false\"></app-new-employee>","import { Component, OnInit, AfterViewChecked, OnDestroy, Output, Input, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { EmployeeService } from '../services/employee.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { UserRolePipe } from '@app/shared/pipe/user-role.pipe';\n\n@Component({\n  selector: 'app-new-employee',\n  templateUrl: './new-employee.component.html',\n  styleUrls: ['./new-employee.component.css']\n})\nexport class NewEmployeeComponent implements OnInit, AfterViewChecked, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() public open = true\n  @Input() public stayOnPage = true\n  @Input() roleId: number\n  @Input() isComingFromMyProfile = false\n  @Input() entity = 'Employee'\n\n  mainForm: FormGroup = new FormGroup({})\n  masterData = MasterData\n\n  isPopulatingFormDb = false\n  isLoading = false\n  initialFormValues = null\n\n  noOfActiveEmployee = 0\n  noOfActive = 0\n\n  title = `Add ${this.entity} Details.`\n  subTitle = `Please provide following details of ${this.entity}.`\n\n  employeeSubTitle = `Please add following details of '${this.entity}'.`\n  addressSubTitle = \"Please add following details of 'Address'.\"\n\n  public canSeeSensitiveInfo\n  public canChangeHisOwnRole = false\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public employeeService: EmployeeService,\n    private plService: PostLoginService,\n    private userRolePipe : UserRolePipe\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.checkCanChangeHisOwnRoles()\n    this.checkSensitiveInfoPermissions()\n    this.setTitleMessages()\n\n    this.mainForm = this.fb.group({\n      basicInfo: this.fb.group({}),\n      credentialInfo: this.fb.group({}),\n      transportInfo: this.fb.group({}),\n      contactInfo: this.fb.group({}),\n      medicalInfo: this.fb.group({}),\n      governmentIds: this.fb.group({}),\n      addressInfo: this.fb.group({})\n    });\n\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n\n  }\n\n  \n  checkCanChangeHisOwnRoles(){\n    let user = JSON.parse(this.sharedService.loggedInData())\n    let currentUserRoleId = this.sharedService.currentUserRoleId();\n    let isanyadmin = this.userRolePipe.transform(currentUserRoleId, 'isanyadmin')\n    this.canChangeHisOwnRole = isanyadmin || this.changeModeId != user[\"_id\"][\"$oid\"]\n  }\n\n  checkSensitiveInfoPermissions(){\n    let user = JSON.parse(this.sharedService.loggedInData())\n    this.canSeeSensitiveInfo = this.plService.getPageEntitlements(5, 1) == 2 || this.changeModeId === user[\"_id\"][\"$oid\"]\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = `Update ${this.entity}.`\n      this.subTitle = `Please update following details of ${this.entity}.`\n\n      if (this.isViewMode) {\n        this.title = `View ${this.entity}.`\n        this.subTitle = `View following details of ${this.entity}.`\n\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill employees and  information for View/Edit mode from Database\n\n    this.isPopulatingFormDb = true\n    this.isLoading = true\n\n    this.employeeService.getEmployee(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n\n          this.isPopulatingFormDb = false\n          this.isLoading = false\n\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n        },\n        (error) => {\n          this.isPopulatingFormDb = false\n          this.isLoading = false\n          console.log(error)\n        }\n      );\n  }\n\n  deactivateRecord(control: AbstractControl, fieldName: string) {\n    let dialogRef = this.sharedService.openConfirmDialog()\n\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        control.setValue(0)\n        this.sharedService.pageLevelDelete(fieldName)\n      }\n    });\n  }\n\n  onSubmit(event: Event) {\n\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.employeeService.employeeRegistration(\n        this.mainForm.value\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n\n            if (result.isSuccess) {\n              this.onSaveSuccess.emit(true)\n              this.sharedService.openSnackBar(`${this.entity} information get saved successfully.`, \"x\", \"success\")\n\n              if (!this.isComingFromMyProfile) {\n                this.sharedService.resetFormControls(this.mainForm)\n              }\n            }\n            else {\n              this.sharedService.openSnackBar(result.message, \"x\", \"fail\")\n            }\n\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\">\n  <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\">\n    <responsive *ngIf=\"!isPopulatingFormDb\">\n      <form-profile-pic fxFlex fxLayoutAlign=\"end\" [form]=\"mainForm\" [isViewMode]=\"isViewMode\">\n      </form-profile-pic>\n\n      <div fxFlex=\"2 2 auto\">\n        <app-ddl-status [form]=\"mainForm\" [isViewMode]=\"isViewMode\"\n          [value]=\"initialFormValues && initialFormValues?.status\">\n        </app-ddl-status>\n        <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['basicInfo']\" [icon]=\"'face'\">\n                  Basic Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-basic-info [form]=\"mainForm.controls['basicInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.basicInfo\">\n            </form-user-basic-info>\n            <app-ddl-role [form]=\"mainForm\" [isViewMode]=\"isViewMode || !canChangeHisOwnRole\"\n              [initialFormValues]=\"initialFormValues\"></app-ddl-role>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\" *ngIf=\"canSeeSensitiveInfo\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['credentialInfo']\" [icon]=\"'security'\">\n                  Credential Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-credentials [form]=\"mainForm.controls['credentialInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.credentialInfo\">\n            </form-user-credentials>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['transportInfo']\" [icon]=\"'directions_bus'\">\n                  Transport Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <app-route-ddl [form]=\"mainForm.controls['transportInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.transportInfo\">\n            </app-route-ddl>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['contactInfo']\" [icon]=\"'contact_phone'\">\n                  Contact Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-contact-info [form]=\"mainForm.controls['contactInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.contactInfo\" [Required]=\"true\">\n            </form-contact-info>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['medicalInfo']\" [icon]=\"'local_hospital'\">\n                  Medical Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-medical-info [form]=\"mainForm.controls['medicalInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.medicalInfo\">\n            </form-user-medical-info>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['governmentIds']\" [icon]=\"'local_activity'\">\n                  Government Ids\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-government-ids [form]=\"mainForm.controls['governmentIds']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.governmentIds\">\n            </form-user-government-ids>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['addressInfo']\" [icon]=\"'room'\">\n                  Address\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-address-info [form]=\"this.mainForm['controls'].addressInfo\"\n              [initialFormValues]=\"initialFormValues?.addressInfo\" [isViewMode]=\"isViewMode\">\n            </form-address-info>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n    </responsive>\n    <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n  </form>\n  <br>\n</card>","import { Injectable } from '@angular/core';\r\nimport { environment, MasterData } from '@env/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StorageService } from '@app/shared/services/storage.service';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\n\r\n@Injectable()\r\nexport class EmployeeService {\r\n  \r\n  apiPrefix = \"api/Employee/\"\r\n\r\n  constructor(\r\n    private _http: HttpClient,\r\n    private _storage: StorageService,\r\n    private _sharedService: SharedService\r\n  ) {\r\n  }\r\n\r\n  employeeRegistration(employeedata) {\r\n    let isSuperAdmin = false\r\n    \r\n    if (employeedata[\"_id\"]['$oid'] === MasterData.superAdminEmployeeId['$oid']) {\r\n      isSuperAdmin = true\r\n    }\r\n\r\n    if(isSuperAdmin){\r\n      return this._http.post(environment.apiUrl + this.apiPrefix + \"saveDevSuperAdmin\", employeedata)\r\n    }\r\n    else{\r\n      return this._http.post(environment.apiUrl + this.apiPrefix + \"saveEmployee\", employeedata)\r\n    }\r\n  }\r\n\r\n  getEmployeeList(searchParams){\r\n    return this._http.post(environment.apiUrl+ this.apiPrefix + \"getlist\", searchParams)\r\n  }\r\n\r\n  getEmployee(id){\r\n    let empId = this._sharedService.serializeMongoObjectId(id)\r\n\r\n    let isSuperAdmin = false    \r\n    if (empId === MasterData.superAdminEmployeeId['$oid']) {\r\n      isSuperAdmin = true\r\n    }\r\n\r\n    if(isSuperAdmin){\r\n      return this._http.get(environment.apiUrl + this.apiPrefix + \"getdevSuperAdmin?id=\"+ empId)\r\n    }\r\n    else{\r\n      return this._http.get(environment.apiUrl + this.apiPrefix + \"getEmployee?id=\"+ empId)\r\n    }\r\n    \r\n  }\r\n\r\n  deleteEmployee(id){\r\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"DeleteEmployee?id=\"+ this._sharedService.serializeMongoObjectId(id))\r\n  } \r\n}\r\n"],"sourceRoot":"webpack:///"}