{"version":3,"sources":["./src/app/post-login/exam/exam-management/exam-list/exam-list.component.ts","./src/app/post-login/exam/exam-management/exam-list/exam-list.component.html","./src/app/post-login/exam/exam-management/exam-management.component.ts","./src/app/post-login/exam/exam-management/exam-management.component.html","./src/app/post-login/exam/exam-management/exam-report-card/exam-report-card.component.ts","./src/app/post-login/exam/exam-management/exam-report-card/exam-report-card.component.html","./src/app/post-login/exam/exam-management/exam-report-card/panel-format/panel-format.component.ts","./src/app/post-login/exam/exam-management/exam-report-card/panel-format/panel-format.component.html","./src/app/post-login/exam/exam-management/exam-report-card/tabular-format/tabular-format.component.ts","./src/app/post-login/exam/exam-management/exam-report-card/tabular-format/tabular-format.component.html","./src/app/post-login/exam/exam-management/new-exam/class-subject/class-subject.component.ts","./src/app/post-login/exam/exam-management/new-exam/class-subject/class-subject.component.html","./src/app/post-login/exam/exam-management/new-exam/class-subject/subject-exam-result/subject-exam-result-graph/subject-exam-result-graph.component.ts","./src/app/post-login/exam/exam-management/new-exam/class-subject/subject-exam-result/subject-exam-result-graph/subject-exam-result-graph.component.html","./src/app/post-login/exam/exam-management/new-exam/class-subject/subject-exam-result/subject-exam-result.component.ts","./src/app/post-login/exam/exam-management/new-exam/class-subject/subject-exam-result/subject-exam-result.component.html","./src/app/post-login/exam/exam-management/new-exam/exam-basic-info/exam-basic-info.component.ts","./src/app/post-login/exam/exam-management/new-exam/exam-basic-info/exam-basic-info.component.html","./src/app/post-login/exam/exam-management/new-exam/new-exam.component.ts","./src/app/post-login/exam/exam-management/new-exam/new-exam.component.html","./src/app/post-login/exam/exam-routing.module.ts","./src/app/post-login/exam/exam-type-management/exam-type-list/exam-type-list.component.ts","./src/app/post-login/exam/exam-type-management/exam-type-list/exam-type-list.component.html","./src/app/post-login/exam/exam-type-management/exam-type-management.component.ts","./src/app/post-login/exam/exam-type-management/exam-type-management.component.html","./src/app/post-login/exam/exam-type-management/new-exam-type/exam-type-basic-info/exam-type-basic-info.component.ts","./src/app/post-login/exam/exam-type-management/new-exam-type/exam-type-basic-info/exam-type-basic-info.component.html","./src/app/post-login/exam/exam-type-management/new-exam-type/new-exam-type.component.ts","./src/app/post-login/exam/exam-type-management/new-exam-type/new-exam-type.component.html","./src/app/post-login/exam/exam.module.ts","./src/app/post-login/exam/services/exam-type.service.ts","./src/app/post-login/exam/services/exam.service.ts"],"names":[],"mappings":"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","file":"exam-exam-module-es2015.js","sourcesContent":["import { Component, OnInit, ChangeDetectorRef, Output, OnDestroy, EventEmitter, Input } from '@angular/core';\nimport { ExamService } from '../../services/exam.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-exam-list',\n  templateUrl: './exam-list.component.html',\n  styleUrls: ['./exam-list.component.css']\n})\nexport class ExamListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  @Output() reportCardButtonEvent = new EventEmitter()\n  @Output() tabularReportCardButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  exams = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions\n  public allClassSubjectObject\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"_id\",\n    isAsc : false\n  }\n\n  constructor(\n    private examService: ExamService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    private sharedApiService: SharedApiService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(9,1) == 2\n  }\n\n  ngOnInit() {\n    this.getClassSubjectObject()\n    this.getList()\n  }\n\n  getClassSubjectObject(){\n    this.sharedApiService.getClassSubjectSectionDdl()    \n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(val => {\n      this.allClassSubjectObject = val\n    },\n      error => {\n      }\n    )\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.examService\n    .getSchoolExamList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.exams = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  examTabularReportCardClicked(id){\n    this.tabularReportCardButtonEvent.emit(id)\n  }\n\n  examReportCardClicked(id){\n    this.reportCardButtonEvent.emit(id)\n  }\n\n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"'Exam List'\" [subTitle]=\"'Manage your exam for School'\"\n    (refresh)=\"getList()\">\n    <large-screen>\n        <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n            <thead class=\"thead\">\n                <tr>\n                    <th class=\"sr\">#</th>\n                    <th matRipple mat-sort-header=\"academicSessionId\">\n                        Academic Session\n                        <mat-icon>ballot</mat-icon>\n                    </th>\n                    <th matRipple mat-sort-header=\"examTypeId\">\n                        Exam Type\n                        <mat-icon>developer_board</mat-icon>\n                    </th>\n                    <th matRipple mat-sort-header=\"classId\">\n                        Class\n                        <mat-icon>ballot</mat-icon>\n                    </th>\n                    <th>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"tr\" *ngFor=\"let exam of exams; let idx = index\">\n                    <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n                    <td>{{exam.academicSessionId | masterData : 'academicSession' }}</td>\n                    <td>{{exam.examTypeId | examType }}</td>\n                    <td>{{exam.classId | class }}</td>\n                    <td class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'Tabular Report Card'\" class=\"icon-view\"\n                            (click)=\"examTabularReportCardClicked(exam._id)\">\n                            <mat-icon mat-icon-button>table_chart</mat-icon>\n                        </button>\n                        <button mat-icon-button appToolTip=\"'Report Card'\" class=\"icon-view\"\n                            (click)=\"examReportCardClicked(exam._id)\">\n                            <mat-icon mat-icon-button>face</mat-icon>\n                        </button>\n                        <button mat-icon-button appToolTip=\"'View Exam'\" class=\"icon-view\"\n                            (click)=\"viewClicked(exam._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Exam'\" class=\"icon-edit\"\n                            (click)=\"editClicked(exam._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Exam'\" class=\"icon-delete\"\n                            (click)=\"deleteClicked(exam._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </large-screen>\n\n    <small-screen class=\"default-font\">\n        <ng-container *ngFor=\"let exam of exams; let idx = index; let odd = odd\">\n            <card [childCard]=\"true\" [header]=\"false\">\n                <row gap=\"2px\">\n                    <div fxFlex=\"10%\">\n                        <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n                    </div>\n                    <div fxFlex class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'Tabular Report Card'\" class=\"big-icon-view\"\n                            (click)=\"examTabularReportCardClicked(exam._id)\">\n                            <mat-icon mat-icon-button>table_chart</mat-icon>\n                        </button>\n                        <button mat-icon-button appToolTip=\"'Report Card'\" class=\"big-icon-view\"\n                            (click)=\"examReportCardClicked(exam._id)\">\n                            <mat-icon mat-icon-button>face</mat-icon>\n                        </button>\n                        <button mat-icon-button appToolTip=\"'View Exam'\" class=\"big-icon-view\"\n                            (click)=\"viewClicked(exam._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Exam'\" class=\"big-icon-edit\"\n                            (click)=\"editClicked(exam._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Exam'\"\n                            class=\"big-icon-delete\" (click)=\"deleteClicked(exam._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </div>\n                </row>\n                <br>\n                <div fxFlex>\n                    <mat-icon>ballot</mat-icon> <b>Academic Session: </b>\n                    <span class=\"small-screen-data\">{{exam.academicSessionId | masterData : 'academicSession' }}</span>\n                </div>\n                <br>\n                <row>\n                    <div>\n                        <div class=\"bold\">\n                            <mat-icon>developer_board</mat-icon> Exam Type\n                        </div>\n                        <div class=\"small-screen-data\">\n                            {{exam.examTypeId | examType }}\n                        </div>\n                    </div>\n                    <div fxFlex>\n                        <div class=\"bold\">\n                            <mat-icon>ballot</mat-icon> Class\n                        </div>\n                        <div class=\"small-screen-data\">\n                            {{exam.classId | class }}\n                        </div>\n                    </div>\n                </row>\n            </card>\n            <br>\n        </ng-container>\n\n    </small-screen>\n\n    <no-record-found *ngIf=\"exams.length ==0\"></no-record-found>\n\n    <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n        [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\"\n        (page)=\"pagingClicked($event)\">\n    </mat-paginator>\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ExamListComponent } from './exam-list/exam-list.component';\nimport { MasterData } from '@env/environment';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { ExamService } from '../services/exam.service';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-exam-management',\n  templateUrl: './exam-management.component.html',\n  styleUrls: ['./exam-management.component.css']\n})\nexport class ExamManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(ExamListComponent) private _ListPage: ExamListComponent\n  @ViewChild('searchCard') searchCard: CardBottomComponent\n\n  showReportCardPage = false\n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n\n  showDeleteButton = false\n  public editPermissions\n  public ClassSectionWiseStudents\n  public isTabularReportCard\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[]\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private sharedApiService: SharedApiService,\n    private examService: ExamService,\n    private plService: PostLoginService\n  ) {\n    this.searchForm = this.fb.group({})\n    this.editPermissions = this.plService.getPageEntitlements(9, 1) === 2\n  }\n\n  ngOnInit() {\n    \n    this.loadClassSubjectSectionDdl()\n\n    this.sharedApiService.ClassSectionWiseStudents()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          this.ClassSectionWiseStudents = result\n        },\n        (error) => {\n          console.log(error)\n        }\n      );\n\n  }\n\n  loadClassSubjectSectionDdl(){\n    this.sharedApiService.getClassSubjectSectionDdl()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {        \n        this.loadExamTypeDdl(result)\n      },\n      (error) => {\n        console.log(error)\n      }\n    );\n  }\n\n  loadExamTypeDdl(classObject){\n    this.sharedApiService.getExamTypeDdl()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.setSearchConfig(classObject, result)\n      },\n      (error) => {\n        console.log(error)\n      }\n    );\n  }\n\n  setSearchConfig(classObject, examTypeObject) {\n    this.searchConfig = [\n      {\n        isViewMode: false,\n        type: \"select\",\n        label: \"Academic Session\",\n        name: \"academicSessionId\",\n        icon: \"ballot\",\n        options: this.masterData.academicSessions\n      },\n      {\n        isViewMode: false,\n        type: \"select\",\n        label: \"Exam type\",\n        name: \"examTypeId\",\n        icon: \"developer_board\",\n        options: examTypeObject\n      },\n      {\n        isViewMode: false,\n        type: \"select\",\n        label: \"Class\",\n        name: \"classId\",\n        icon: \"ballot\",\n        options: classObject\n      }\n    ];\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showReportCardPage = this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showReportCardPage = this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  tabularReportCardButtonEvent(event){\n    this.isTabularReportCard = true\n    this.Id = event;\n    this.showReportCardPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = this.showViewPage = false\n  }\n\n  reportCardButtonEvent(event){\n    this.isTabularReportCard = false\n    this.Id = event;\n    this.showReportCardPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = this.showViewPage = false\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = this.showReportCardPage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = this.showReportCardPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteExamPermanently() {\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Exam'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.examService.deleteSchoolExam(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()\n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            matTooltipShowDelay=\"100\" class=\"btn\" matTooltipHideDelay=\"100\">\n            <mat-icon>chrome_reader_mode</mat-icon> Add New Exam\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Exam'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <dynamic-form *ngIf=\"searchConfig\" [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage || showReportCardPage\"\n            (click)=\"backToListClick()\" mat-raised-button class=\"btn\" appToolTip=\"'Go back to Exam List'\"\n            matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Exam List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<div *ngIf=\"showAddChangePage || showViewPage\">\n    <ng-container *ngIf=\"ClassSectionWiseStudents; else loadigImpData\">\n        <app-new-exam [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n            [ClassSectionWiseStudents]=\"ClassSectionWiseStudents\" (onSaveSuccess)=\"onSaveSuccess($event)\">\n        </app-new-exam>\n    </ng-container>\n    <ng-template #loadigImpData>\n        <h4>Please Wait...</h4>\n        <h5>We are loading some important data.</h5>\n        <br>\n        <app-loader></app-loader>\n    </ng-template>\n</div>\n\n<div *ngIf=\"showReportCardPage\">\n    <app-exam-report-card [isTabularReportCard]=\"isTabularReportCard\" [examId]=\"Id\"></app-exam-report-card>\n</div>\n\n<app-exam-list [hidden]=\"!showListPage\" (tabularReportCardButtonEvent)=\"tabularReportCardButtonEvent($event)\"\n    (reportCardButtonEvent)=\"reportCardButtonEvent($event)\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-exam-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteExamPermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { ExamService } from '../../services/exam.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MasterData } from '@env/environment';\nimport { MatButtonToggleGroup } from '@angular/material/button-toggle';\n\n@Component({\n  selector: 'app-exam-report-card',\n  templateUrl: './exam-report-card.component.html',\n  styleUrls: ['./exam-report-card.component.css']\n})\nexport class ExamReportCardComponent implements OnInit {\n  @ViewChild('selectedSectionToggleButton') selectedSectionToggleButton : MatButtonToggleGroup\n  private unsubscribe$ = new Subject();\n\n  @Input() examId\n  @Input() isTabularReportCard\n\n  public isLoading\n  public dbData\n  public resultData\n  public sections\n  public masterData = MasterData\n  public selectedSectionId\n\n  constructor(\n    private examService: ExamService\n  ) { }\n\n  ngOnInit(): void {\n    this.getExamResult()\n  }\n\n  getExamResult() {\n    this.isLoading = true\n\n    this.examService.getExamResultStudentWise(this.examId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          this.dbData = result\n          this.resultData = result\n          this.isLoading = false\n          this.getSectonList()\n        },\n        (error) => {\n          this.isLoading = false\n          console.log(error)\n        }\n      );\n  }\n\n  showOnlyFailed(value) {\n    if (!value) {\n      this.resultData = this.dbData\n    }\n    else {\n      let tempData = []\n      this.dbData.forEach(result => {\n        let failedSubject = result.subjects.filter(x => x.marksGained < x.passingMarks)\n        if (failedSubject.length > 0) {\n          tempData.push(result)\n        }\n      });\n\n      this.resultData = tempData\n    }\n\n    this.getSectonList()\n  }\n\n  getSectonList() {\n    let allSections = [] \n\n    this.resultData.forEach(element => {\n      allSections.push(element[\"_id\"][\"sectionId\"])\n    });\n\n    this.sections = Array.from(new Set(allSections)).sort();\n\n    if(this.sections.length > 0)\n    {\n      this.selectedSectionId = this.sections[0]\n\n      if(this.selectedSectionToggleButton){\n        this.selectedSectionToggleButton.value = this.selectedSectionId\n      }\n    }\n\n  }\n\n  onSectionChange(sectionId){\n    this.selectedSectionId = sectionId\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<div *ngIf=\"!isLoading\" class=\"custom-page-mainDiv\">\n    <span *ngIf=\"dbData\" class=\"custom-page-header\">\n        Class {{dbData[0]?._id.classId | class}} Exam results\n    </span>\n    <p>\n        <mat-radio-group aria-label=\"Select an option\" value=\"all\">\n            <mat-radio-button value=\"all\" (click)=\"showOnlyFailed(false)\">All Students</mat-radio-button>\n            <mat-radio-button value=\"failed\" (click)=\"showOnlyFailed(true)\">Failed in any subject</mat-radio-button>\n        </mat-radio-group>\n    </p>\n    <br>\n    <div class=\"section-tabs\">\n        <mat-button-toggle-group #selectedSectionToggleButton=\"matButtonToggleGroup\" [value]=\"sections[0]\">\n            <mat-button-toggle (change)=\"onSectionChange($event.value)\" *ngFor=\"let section of sections\"\n                [value]=\"section\">\n                <span class=\"section-name\">Section {{section | masterData : 'classsections'}}</span>\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n    </div>\n    <ng-container *ngIf=\"selectedSectionId\">\n        <app-tabular-format *ngIf=\"isTabularReportCard\" [selectedSectionId]=\"selectedSectionId\"\n            [resultData]=\"resultData\"></app-tabular-format>\n\n        <div *ngIf=\"!isTabularReportCard\" class=\"section-details\">\n            <app-panel-format [selectedSectionId]=\"selectedSectionId\" [resultData]=\"resultData\"></app-panel-format>\n        </div>\n        <div *ngIf=\"resultData.length ==0\">\n            <no-record-found></no-record-found>\n        </div>\n        <br>\n        <row>\n            <div class=\"fill-space\"></div>\n            <div>\n                    <mat-icon class=\"report-type-icons pointer\" mat-icon-button [ngClass]=\"{'active-report-type': isTabularReportCard}\" (click)=\"isTabularReportCard = true\">table_chart</mat-icon>\n                    &nbsp;&nbsp;\n                    <mat-icon class=\"report-type-icons pointer\" mat-icon-button [ngClass]=\"{'active-report-type': !isTabularReportCard}\" (click)=\"isTabularReportCard = false\">face</mat-icon>\n            </div>\n            <div class=\"fill-space\"></div>\n        </row>\n        \n\n    </ng-container>\n</div>\n\n<app-loader *ngIf=\"isLoading\"></app-loader>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { MasterData } from '@env/environment';\n\n@Component({\n  selector: 'app-panel-format',\n  templateUrl: './panel-format.component.html',\n  styleUrls: ['./panel-format.component.css']\n})\nexport class PanelFormatComponent implements OnInit {\n\n  @Input() set selectedSectionId(value) {\n    this.sectionId = value;\n    this.processFilter()\n  }\n\n  @Input() set resultData(value) {\n    this.orgData = value\n    this.processFilter()\n  }\n\n  public masterData = MasterData\n  public sectionId\n  private orgData\n  public filteredData\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  processFilter() {\n    this.filteredData = this.orgData ? this.orgData.filter(x => x._id.sectionId === this.sectionId) : null\n  }\n\n}\n","<div class=\"details-div\">\n    <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n        <ng-container *ngFor=\"let result of filteredData\">\n            <mat-expansion-panel>\n                <mat-expansion-panel-header class=\"appear-animate\">\n                    <mat-panel-title>\n                        <user-small-pic [userId]=\"result._id.studentId\"></user-small-pic>\n                        <div>\n                            <br>\n                            <responsive [colGap]=\"'5px'\">\n                                <div>\n                                    <b>Roll.No. </b>{{result.studentDetails.rollNo | numberData}}\n                                </div>\n                                <div>\n                                    {{result.studentDetails.firstName}} {{result.studentDetails.lastName}}\n                                </div>\n                            </responsive>\n                        </div>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <table class=\"score-table\" border=\"1\" cellspacing=\"0\">\n                    <thead>\n                        <tr>\n                            <th>\n                                Subject\n                            </th>\n                            <th>\n                                Total Marks\n                            </th>\n                            <th>\n                                Passing Marks\n                            </th>\n                            <th>\n                                Marks Gained\n                            </th>\n                        </tr>\n                    </thead>\n                    <tr class=\"tr\" *ngFor=\"let subject of result.subjects\">\n                        <td>\n                            {{ subject.subjectId | subject}}\n                        </td>\n                        <td>\n                            {{subject.maxMarks}}\n                        </td>\n                        <td>\n                            {{subject.passingMarks}}\n                        </td>\n                        <td [ngClass]=\"{'fail': subject.marksGained < subject.passingMarks}\">\n                            {{subject.marksGained}}\n                        </td>\n                    </tr>\n                </table>\n            </mat-expansion-panel>\n        </ng-container>\n    </mat-accordion>\n</div>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-tabular-format',\n  templateUrl: './tabular-format.component.html',\n  styleUrls: ['./tabular-format.component.css']\n})\nexport class TabularFormatComponent implements OnInit {\n\n  @Input() set selectedSectionId(value) {\n    this.sectionId = value;\n    this.processFilter()\n  }\n\n  @Input() set resultData(value) {\n    this.orgData = value\n    this.processFilter()\n  }\n\n  public sectionId\n  private orgData\n  public filteredData\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  processFilter() {\n    this.filteredData = this.orgData ? this.orgData.filter(x => x._id.sectionId === this.sectionId) : null\n  }\n\n  sortData(){\n\n  }\n\n  sortNodes(a, b) {\n    if (a[0]._id.distance < b[0].distance) return -1;\n    if (a[0].distance > b[0].distance) return 1;\n    return 0;\n}\n\n}\n","<table class=\"table\" *ngIf=\"filteredData\">\n    <thead class=\"thead\" style=\"zoom: 110%;\">\n        <tr>\n            <th colspan=\"2\">\n                Student Info\n            </th>\n            <th *ngFor=\"let subject of filteredData[0].subjects\">\n                {{ subject.subjectId | subject}}\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr class=\"tr appear-animate\" *ngFor=\"let result of filteredData\">\n            <td class=\"td\" style=\"width: 40px;\">\n                <user-small-pic [userId]=\"result._id.studentId\"></user-small-pic>\n            </td>\n            <td class=\"td\" style=\"zoom: 120%; padding-left: 5px;\">\n                <b>Roll.No. </b>{{result.studentDetails.rollNo | numberData}}\n                <br>\n                {{result.studentDetails.firstName}} {{result.studentDetails.lastName}}\n            </td>\n            <td class=\"td\" style=\"zoom: 120%;\" *ngFor=\"let subject of result.subjects\"\n                [ngClass]=\"{'fail': subject.marksGained < subject.passingMarks}\">\n                {{subject.marksGained}}\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit, OnDestroy, Input, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'class-subject',\n  templateUrl: './class-subject.component.html',\n  styleUrls: ['./class-subject.component.css']\n})\nexport class ClassSubjectComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Input() form: FormGroup\n  @Input() examId\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() initialFormValues = null\n  @Input() isViewMode = false\n  @Input() isEditMode\n  @Input() ClassSectionWiseStudents\n\n  isLoading = false\n  masterData = MasterData\n\n  public allClassSubjectObject\n  public classObject\n  public sectionList = null\n  public subjectList = null\n\n  branchClassChanged$ = new EventEmitter<any>()\n  sectionChanged$ = new EventEmitter<any>()\n\n  constructor(\n    private sharedApiService: SharedApiService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    if (this.initialFormValues) {\n      this.isEditMode = true\n    }\n\n    this.form.addControl(\"classSection\", this.fb.control({}));\n    this.form.addControl(\"subject\",\n      this.fb.array([])\n    );\n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode || this.isEditMode,\n        type: \"select\",\n        label: \"Class\",\n        name: \"classId\",\n        icon: \"ballot\",\n        onValueChange: this.branchClassChanged$,\n        options: null,\n        value: this.initialFormValues ? this.initialFormValues.classId : null,\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode || this.isEditMode,\n        type: \"select\",\n        label: \"Academic Session\",\n        name: \"academicSessionId\",\n        icon: \"ballot\",\n        options: this.masterData.academicSessions,\n        value: this.initialFormValues ? this.initialFormValues.academicSessionId : null,\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode || this.isEditMode,\n        type: \"select\",\n        label: \"Exam type\",\n        name: \"examTypeId\",\n        icon: \"developer_board\",\n        value: this.initialFormValues ? this.initialFormValues.examTypeId : null,\n        validations: [validationType.required()]\n      }\n    ]\n\n    this.registerDropdownChangeEvents()\n\n    this.fetchExamTypeDdl()\n    this.fetchClassDdl()\n  }\n\n  registerDropdownChangeEvents() {\n    this.branchClassChanged$\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(val => {\n        this.branchClassChanged(val)\n      })\n  }\n\n  fetchExamTypeDdl() {\n    this.isLoading = true\n    this.fieldsConfig[2].options = []; // make exam type list empty    \n\n    this.sharedApiService.getExamTypeDdl()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(val => {\n        this.fieldsConfig[2].options = val;\n        this.isLoading = false\n      },\n        error => {\n          this.isLoading = false\n        }\n      )\n  }\n\n  fetchClassDdl() {\n    this.isLoading = true\n    this.fieldsConfig[0].options = []; // make class list empty    \n\n    this.sharedApiService.getClassSubjectSectionDdl()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(val => {\n        this.allClassSubjectObject = val\n        this.populateClassDdl(val)\n        this.isLoading = false\n      },\n        error => {\n          this.isLoading = false\n        }\n      )\n  }\n\n  populateClassDdl(values) {\n    this.fieldsConfig[0].options = values;\n\n    if (this.isViewMode || this.isEditMode) {\n      this.loadClassWiseExam(this.initialFormValues.classId)\n    }\n  }\n\n  branchClassChanged(classId) {\n    this.loadClassWiseExam(classId)\n  }\n\n  loadClassWiseExam(classId) {\n    this.isLoading = true\n    this.sectionList = null;\n    this.subjectList = null;\n\n    (<FormArray>this.form.get('subject')).clear()\n    this.form.get('classSection').setValue(null);\n\n    if (this.initialFormValues) {\n      // In case of update we only show those sections and subjects of the class, which was available add the time of creating this exam.\n      this.sectionList = this.initialFormValues.classSection\n      this.subjectList = this.initialFormValues.subject.sort((a, b) => a.examDate > b.examDate ? 1 : -1)\n\n      this.subjectList && this.subjectList.forEach(subject => {\n        this.addSubject(classId, subject.subjectId, subject.sections)\n      });\n    }\n    else {\n      // When creating new exam, we will show all the current sections and subjects of the selected class.\n      this.classObject = this.allClassSubjectObject.filter(x => x._id.$oid === classId.$oid)\n      if (this.classObject.length > 0) {\n        this.classObject = this.classObject[0]\n        this.sectionList = this.classObject.classSection\n        this.subjectList = this.classObject.subject.filter(x => x.status == 1)\n        this.filterUniqueSubjects()\n\n        this.subjectList && this.subjectList.forEach(subject => {\n          this.addSubject(classId, subject._id, subject.sections)\n        });\n      }\n    }\n\n    this.sectionList && this.form.get('classSection').setValue(this.sectionList);\n    this.isLoading = false\n  }\n\n  filterUniqueSubjects() {\n    let uniqueSubjects = []\n\n    this.subjectList.forEach(sub => {\n      let filtered = uniqueSubjects.filter(x => x[\"_id\"][\"$oid\"] === sub[\"_id\"][\"$oid\"])\n\n      // If subject is not present their already\n      if (filtered.length === 0) {\n        let subObject = {\n          _id: sub[\"_id\"],\n          sections: [sub.sectionId]\n        }\n        uniqueSubjects.push(subObject)\n      }\n      else {\n        filtered[0].sections.push(sub.sectionId)\n      }\n    });\n\n    this.subjectList = uniqueSubjects\n  }\n\n  addSubject(classId, id, sections) {\n\n    let subjectForm = this.fb.group({\n      \"subjectId\": this.fb.control(id),\n      \"sections\": this.fb.array([])\n    })\n\n    if (sections && sections.length > 0) {\n\n      sections.forEach(section => {\n\n        // In case of update section.sectionId will work\n        let sectionId = section.sectionId ? section.sectionId : section\n\n        let fbGroup = this.fb.group({\n          \"sectionId\": this.fb.control(sectionId),\n          \"students\": this.fb.array([])\n        });\n\n        if (this.initialFormValues) {\n          let sub = this.initialFormValues.subject && this.initialFormValues.subject.find(x => x[\"subjectId\"][\"$oid\"] === id[\"$oid\"])\n          let sec = sub && sub.sections.find(x => x.sectionId === sectionId)\n          let students = sec && sec.students\n          this.mapStudentForSubject(students, <FormArray>fbGroup.get(\"students\"));\n        }\n        else {\n          // When creating new Exam\n          let filteredData = this.ClassSectionWiseStudents.find(x => x[\"_id\"][\"classId\"][\"$oid\"] === classId[\"$oid\"] && x[\"_id\"][\"sectionId\"] === sectionId)\n          let students = filteredData && filteredData.students ? filteredData.students : null\n          this.mapStudentForSubject(students, <FormArray>fbGroup.get(\"students\"));\n        }\n\n        (<FormArray>subjectForm.get(\"sections\")).push(fbGroup)\n      }\n      );\n    }\n\n    // Finally add this subject in the subject array\n    (<FormArray>this.form.get('subject')).push(subjectForm)\n  }\n\n  mapStudentForSubject(students, studentsControl) {\n\n    if (!(students && studentsControl)) {\n      return\n    }\n\n    students.forEach(stu => {\n\n      let studentId = stu.studentId ? stu.studentId : stu\n      let marksGained = stu.marksGained\n\n      let fbGroup = this.fb.group({\n        \"studentId\": this.fb.control(studentId),\n        \"marksGained\": this.fb.control(marksGained)\n      })\n      studentsControl.push(fbGroup)\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\"></dynamic-form>\n<div>\n    <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n        <ng-container *ngFor=\"let subject of this.form['controls'].subject['controls']; let idxSubject = index;\">\n            <mat-expansion-panel class=\"no-shadow\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <smart-div class=\"negative-margin\" [form]=\"subject\">\n                            <mat-icon>menu_book</mat-icon>\n                            {{ subject.controls['subjectId']?.value | subject}}\n                            <i [ngClass]=\"{'blink-animate': subject.controls['examDate']?.value | isToday}\"\n                                class=\"color-black\">{{subject.controls['examDate']?.value | date : 'fullDate'}}</i>\n                        </smart-div>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <form-time-range [form]=\"subject\" [isViewMode]=\"isViewMode\" [fromLabel]=\"'Start Time'\"\n                    [toLabel]=\"'End Time'\" [Required]=\"true\"\n                    [initialFormValues]=\"initialFormValues?.subject[idxSubject]\">\n                </form-time-range>\n\n                <exam-basic-info [form]=\"subject\" [isViewMode]=\"isViewMode\" [classObject]=\"classObject\"\n                    [subjectId]=\"subject.controls['subjectId']?.value\"\n                    [initialFormValues]=\"initialFormValues?.subject[idxSubject]\">\n                </exam-basic-info>\n                    <app-subject-exam-result [form]=\"subject.controls['sections']\" [examId]=\"examId\"\n                        [isViewMode]=\"isViewMode\" *ngIf=\"isEditMode\" [subject]=\"subject\"\n                        [initialFormValues]=\"initialFormValues?.subject[idxSubject].sections\"\n                        [studentDetails]=\"initialFormValues?.studentDetails\">\n                    </app-subject-exam-result>\n            </mat-expansion-panel>\n        </ng-container>\n    </mat-accordion>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { MasterData } from '@env/environment';\n\n@Component({\n  selector: 'app-subject-exam-result-graph',\n  templateUrl: './subject-exam-result-graph.component.html',\n  styleUrls: ['./subject-exam-result-graph.component.css']\n})\nexport class SubjectExamResultGraphComponent implements OnInit {\n\n  @Input() form: FormArray\n  @Input() sectionId\n  @Input() subject : FormGroup\n  \n  public subjectId\n  public passingMarks = 0\n  public passedStudents = 0\n  public failedStudents = 0\n  public isGraphCalculationsDone = false\n  public passedPercentage\n  public chartColors\n  public masterData = MasterData\n\n  constructor() { \n    this.setChartColors()\n  }\n\n  ngOnInit(): void {\n    this.subjectId = this.subject.get(\"subjectId\").value\n    this.passingMarks = this.subject.controls['passingMarks'].value\n    this.calculate()\n  }\n\n  setChartColors(){\n    this.chartColors = [\n      {\n        backgroundColor: ['red', 'green','yellow'],\n      }\n    ]\n  }\n\n  calculate(){\n    this.isGraphCalculationsDone = false\n    this.passedStudents = 0\n    this.failedStudents = 0\n\n    let sectionsArray = this.form.controls;\n\n    sectionsArray.forEach(section => {\n      let sectionId = section.get('sectionId').value;\n      if(sectionId === this.sectionId){\n        let students = <FormArray> section.get('students')\n        students.controls.forEach(student => {\n          student.get('marksGained').value < this.passingMarks ? this.failedStudents++ : this.passedStudents++\n        });\n      }\n    });\n\n    if (this.passedStudents > 0) {\n      let total = this.passedStudents + this.failedStudents\n      this.passedPercentage = (this.passedStudents * 100) / total\n      this.passedPercentage = this.passedPercentage.toFixed(2);\n    }\n    else {\n      this.passedPercentage = \"0.00\";\n    }\n\n    this.isGraphCalculationsDone = true\n  }\n\n}\n","<app-chart [chartLabels]=\"['Failed','Passed']\" [chartColors]=\"chartColors\" [filter]=\"false\"\n    [chartData]=\"[failedStudents, passedStudents]\">\n</app-chart>","import { Component, OnInit, OnDestroy, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormBuilder, FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { ExamService } from '@app/post-login/exam/services/exam.service';\nimport { takeUntil} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-subject-exam-result',\n  templateUrl: './subject-exam-result.component.html',\n  styleUrls: ['./subject-exam-result.component.css']\n})\nexport class SubjectExamResultComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n  \n  @ViewChild('stumarksGainedTextBoxRef') stumarksGainedTextBoxRef: ElementRef;\n\n  @Input() form: FormArray\n  @Input() initialFormValues = null\n  @Input() studentDetails     // This will be used only in case of update to show the student names\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n  @Input() subject : FormGroup\n  @Input() examId\n\n  public editPermissions = false\n  public isLoading = false\n  public title = \"View Exam Result\"\n  public subTitle = \"View student marksheet for this subject\"\n\n  public masterData = MasterData\n  public sections = []\n  public showResult = false\n  public subjectId\n  public showExamResult\n\n  constructor(\n    private plService: PostLoginService,\n    public sharedService: SharedService,\n    private examService: ExamService,\n    private fb: FormBuilder\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(9, 1) === 2\n  }\n\n  ngOnInit() {\n\n    this.subjectId = this.subject.get(\"subjectId\").value\n\n    this.computeClassSections()\n    \n    if (this.isViewMode) {\n      this.form.disable()\n    }\n  }\n\n  computeClassSections(){\n    this.form.controls.forEach(sec => {\n      this.sections.push(sec.get('sectionId').value)\n    });\n\n    this.sections.sort();\n  }\n\n  saveSectionResult(sectionId) {\n    this.form.markAllAsTouched()\n\n    if (this.form.valid) {\n      this.isLoading = true\n\n      let sectionResult = null\n\n      this.form.controls.forEach(element => {\n        if (element.get('sectionId').value === sectionId) {\n          sectionResult = element.value\n        }\n      });\n\n      let data = {\n        sectionResult: sectionResult,\n        subjectId: this.sharedService.serializeMongoObjectId(this.subjectId),\n        examId: this.sharedService.serializeMongoObjectId(this.examId)\n      }\n\n      let finalData = JSON.parse(JSON.stringify(data))\n      this.examService.saveSpecificSubjectSectionExamResult(finalData)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            let sectionName = this.masterData.classSections.find(x => x.id === sectionId).name\n            this.sharedService.openSnackBar(\"Section-\"+sectionName+\" result get saved Successfully.\", \"x\", \"success\")\n            this.showExamResult = false\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<!--\n<input type=\"button\" value=\"Exam results\" (click)=\"showExamResult = true\">\n<card *ngIf=\"showExamResult\" [header]=\"false\" [fullScreen]=\"true\">    \n    <div class=\"custom-page-header\">\n        <row>\n            <div fxFlex>\n                <b>{{subjectId | subject}}</b> exam result\n            </div>\n            <div fxFlex=\"30px\">\n                <button type=\"button\" class=\"cross card-custom-header-buttons\" mat-icon-button (click)=\"showExamResult = false\">\n                    <mat-icon>cancel_presentation</mat-icon>\n                </button>\n            </div>\n        </row>\n    </div>\n-->\n<card title=\"Result\" subTitle=\"Update student exam result\" [refreshButton]=\"false\">\n    <form [formGroup]=\"form\">\n        <div class=\"section-tabs\">\n            <mat-button-toggle-group #selectedSectionToggleButton=\"matButtonToggleGroup\" [value]=\"1\">\n                <mat-button-toggle *ngFor=\"let section of sections\" [value]=\"section\">\n                    <span class=\"section-name\">Section {{section | masterData : 'classsections'}}</span>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n        </div>\n\n        <responsive *ngFor=\"let section of this.form.controls\"\n            [hidden]=\"selectedSectionToggleButton.value != section.get('sectionId').value\">\n            <div fxFlex>\n                <table class=\"table\">\n                    <thead class=\"thead\">\n                        <tr>\n                            <th></th>\n                            <th>Roll No</th>\n                            <th>Name</th>\n                            <th>Marks</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let student of section.get('students').controls\" class=\"tr appear-animate\">\n                            <td class=\"td\">\n                                <user-small-pic [userId]=\"student.get('studentId').value\"></user-small-pic>\n                            </td>\n                            <td class=\"td\">\n                                {{student.get('studentId').value | objectFilter : studentDetails : 'studentId' : 'rollNo' | numberData}}\n                            </td>\n                            <td class=\"td\">\n                                {{student.get('studentId').value | objectFilter : studentDetails : 'studentId' : 'firstName'}}\n                                {{student.get('studentId').value | objectFilter : studentDetails : 'studentId' : 'lastName'}}\n                            </td>\n                            <td class=\"td rt marksTd\" [formGroup]=\"student\"\n                                [ngClass]=\"{'fail': student.get('marksGained').value < this.subject.get('passingMarks')?.value}\">\n                                <input *ngIf=\"!isViewMode\" class=\"marksGainedTextbox\" trim matInput\n                                    [formControl]=\"student.get('marksGained')\" type=\"number\" min=\"0\" max=\"100\">\n                                <span *ngIf=\"isViewMode\">{{student.get('marksGained').value}}</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br>\n            </div>\n            <div style=\"padding-left: 26px; padding-right: 6px;\" fxFlex class=\"appear-animate\"\n                [hidden]=\"selectedSectionToggleButton.value != section.get('sectionId').value\">\n                <app-subject-exam-result-graph *ngIf=\"isViewMode && this.subject.get('passingMarks')\"\n                    [subject]=\"subject\" [sectionId]=\"section.get('sectionId').value\" [form]=\"this.form\">\n                </app-subject-exam-result-graph>\n            </div>\n        </responsive>\n    </form>\n    <button *ngIf=\"!isViewMode && editPermissions\" style=\"max-width: 99%;\"\n        (click)=\"saveSectionResult(selectedSectionToggleButton.value)\" class=\"btn-submit padding generic-buttons\"\n        type=\"button\" mat-raised-button>\n        Save only {{subjectId | subject}}-{{selectedSectionToggleButton.value | masterData : 'classsections'}} result\n    </button>\n</card>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { SchoolService } from '@app/post-login/school/services/school.service';\nimport { Subject } from 'rxjs';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\n\n@Component({\n  selector: 'exam-basic-info',\n  templateUrl: './exam-basic-info.component.html',\n  styleUrls: ['./exam-basic-info.component.css']\n})\nexport class ExamBasicInfoComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n  @Input() classObject\n  @Input() subjectId\n\n  public allteachersList\n  masterData = MasterData\n\n  constructor(\n    private sharedService: SharedService,\n    private sharedApiService: SharedApiService\n  ) {\n    this.loadAllTeachers();\n  }\n\n  ngOnInit() {\n    let maxMarks = 33\n    let passingMarks = 100\n\n    if (this.classObject) {\n      let sub = this.classObject.subject.find(x => x[\"_id\"][\"$oid\"] === this.subjectId[\"$oid\"])\n      maxMarks = sub.maxMarks\n      passingMarks = sub.passingMarks\n    }\n    \n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Maximum marks\",\n        inputType: \"number\",\n        name: \"maxMarks\",\n        value: maxMarks,\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Passing marks\",\n        inputType: \"number\",\n        name: \"passingMarks\",\n        value: passingMarks,\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"date\",\n        label: \"Exam Date\",\n        name: \"examDate\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"select\",\n        label: \"Exam Teacher\",\n        name: \"teacherId\",\n        icon: \"account_circle\",\n        options: this.allteachersList,\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Exam Room\",\n        inputType: \"text\",\n        name: \"room\",\n        icon: \"meeting_room\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"textarea\",\n        label: \"Comments\",\n        inputType: \"textarea\",\n        name: \"comments\"\n      }\n    ]\n\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n  loadAllTeachers() {\n    this.sharedApiService.teacherDdl()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(val => {\n        this.allteachersList = val\n      },\n        error => {\n        }\n      )\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<dynamic-form *ngIf=\"allteachersList\" [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { ExamService } from '../../services/exam.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-exam',\n  templateUrl: './new-exam.component.html',\n  styleUrls: ['./new-exam.component.css']\n})\nexport class NewExamComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() showHeader = true\n  @Input() childCard = false;\n  @Input() ClassSectionWiseStudents = null  // Class section wise student list, Will be used only when creating new Exam\n\n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New Exam\"\n  subTitle = \"Add a new exam\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  stoppageCount: number = 0\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public examService: ExamService\n  ) { }\n\n  ngOnInit() {\n    this.setTitleMessages()\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = \"Update Exam.\"\n      this.subTitle = \"Please update following details of exam.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Exam.\"\n        this.subTitle = \"View following details of exam.\"\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill Exam information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.examService.getSchoolExam(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  confirmSubmit(exam: Event) {\n\n    // In edit mode only, take the confirmation before saving the exam details.\n\n    if (this.changeModeId) {\n      let dialogRef = this.sharedService.openConfirmDialog(\"You want to Update the Exam results of all the subject and the exam info ?\")\n\n      dialogRef.afterClosed()\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (confirmed: boolean) => {\n            if (confirmed) {\n              this.onSubmit(exam)\n            }\n          },\n          (error) => {\n            this.isLoading = false\n          }\n        );\n    }\n    else {\n      this.onSubmit(exam)\n    }\n  }\n\n  onSubmit(exam: Event) {\n    this.mainForm.markAllAsTouched()\n    exam.preventDefault();\n    exam.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.examService.saveSchoolExam(\n        this.mainForm.getRawValue()\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Exam's information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  loadClassWiseStudents() {\n\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\" [header]=\"showHeader\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"confirmSubmit($event)\" *ngIf=\"mainForm && !isPopulatingFormDb\">\n        <class-subject [examId]=\"changeModeId\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\" [form]=\"mainForm\" [ClassSectionWiseStudents]=\"ClassSectionWiseStudents\">\n        </class-subject>\n        <div class=\"info\" *ngIf=\"!isViewMode && changeModeId\">\n            If you press below 'Update' button then it will override the result for all the subjects and all the sections and also the exam information.\n        </div>\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExamManagementComponent } from './exam-management/exam-management.component';\nimport { ExamTypeManagementComponent } from './exam-type-management/exam-type-management.component';\n\n\nconst routes: Routes = [  \n  {\n    path: 'exammgmt',\n    component: ExamManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'examtypemgmt',\n    component: ExamTypeManagementComponent,\n    outlet:'postLoginOutlet'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExamRoutingModule { }\n","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { ExamTypeService } from '../../services/exam-type.service';\n\n@Component({\n  selector: 'app-exam-type-list',\n  templateUrl: './exam-type-list.component.html',\n  styleUrls: ['./exam-type-list.component.css']\n})\nexport class ExamTypeListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  examTypes = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"name\",\n    isAsc : true\n  }\n\n  constructor(\n    private examTypeService: ExamTypeService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(9,2) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.examTypeService\n    .getSchoolExamTypeList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.examTypes = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<card [loading]=\"isLoading\" [title]=\"'Exam Type List'\" [subTitle]=\"'Manage your Exam Type for School'\"\n    (refresh)=\"getList()\">\n    <large-screen>\n        <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n            <thead class=\"thead\">\n                <tr>\n                    <th class=\"sr\">#</th>\n                    <th matRipple mat-sort-header=\"code\">\n                            Exam Type Code\n                            <mat-icon>developer_board</mat-icon>\n                        </th>\n                    <th matRipple mat-sort-header=\"name\">\n                        Exam Type Name\n                        <mat-icon>developer_board</mat-icon>\n                    </th>\n                    <th class=\"action\">\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"tr\" *ngFor=\"let examType of examTypes; let idx = index\">\n                    <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n                    <td>{{examType.code}}</td>\n                    <td>{{examType.name}}</td>\n                    <td class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Subject'\" class=\"icon-view\"\n                            (click)=\"viewClicked(examType._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Subject'\" class=\"icon-edit\"\n                            (click)=\"editClicked(examType._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Subject'\" class=\"icon-delete\"\n                            (click)=\"deleteClicked(examType._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </large-screen>\n\n    <small-screen class=\"default-font\">\n        <ng-container *ngFor=\"let examType of examTypes; let idx = index; let odd = odd\">\n            <card [childCard]=\"true\" [header]=\"false\">\n                <row gap=\"2px\">\n                    <div fxFlex=\"30%\">\n                        <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n                    </div>\n                    <div fxFlex class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Subject'\" class=\"big-icon-view\"\n                            (click)=\"viewClicked(examType._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Subject'\" class=\"big-icon-edit\"\n                            (click)=\"editClicked(examType._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Subject'\" class=\"big-icon-delete\"\n                            (click)=\"deleteClicked(examType._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </div>\n                </row>\n                <div class=\"bold\">\n                    <mat-icon>developer_board</mat-icon> {{examType.code}}\n                </div>\n                <br>\n                <div class=\"small-screen-data\">\n                    {{examType.name}}\n                </div>\n            </card>\n            <br>\n        </ng-container>\n\n    </small-screen>\n\n    <no-record-found *ngIf=\"examTypes.length ==0\"></no-record-found>\n\n    <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n        [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\"\n        (page)=\"pagingClicked($event)\">\n    </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { ExamTypeListComponent } from './exam-type-list/exam-type-list.component';\nimport { ExamTypeService } from '../services/exam-type.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-exam-type-management',\n  templateUrl: './exam-type-management.component.html',\n  styleUrls: ['./exam-type-management.component.css']\n})\nexport class ExamTypeManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(ExamTypeListComponent) private _ListPage: ExamTypeListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n\n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n  public editPermissions\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Exam Type Name\",\n      inputType: \"text\",\n      name: \"name\",\n      icon: \"developer_board\"\n    } \n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private examTypeService: ExamTypeService,\n    private plService: PostLoginService\n  ) {\n    this.searchForm = this.fb.group({})\n    this.editPermissions = this.plService.getPageEntitlements(9,2) === 2\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteExamTypePermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'ExamType'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.examTypeService.deleteSchoolExamType(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            matTooltipShowDelay=\"100\" class=\"btn\" matTooltipHideDelay=\"100\">\n            <mat-icon>developer_board</mat-icon> Add New Exam Type\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Exam Type'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" mat-raised-button\n            class=\"btn\" appToolTip=\"'Go back to Exam Type List'\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Exam Type List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<app-new-exam-type *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-exam-type>\n<app-exam-type-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-exam-type-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteExamTypePermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'exam-type-basic-info',\n  templateUrl: './exam-type-basic-info.component.html',\n  styleUrls: ['./exam-type-basic-info.component.css']\n})\nexport class ExamTypeBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","<form-code-name [Required]=\"true\" [labelPrefix]=\"'Exam Type'\" [codeIcon]=\"'developer_board'\" [nameIcon]=\"'developer_board'\"\n    [form]=\"form\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\"></form-code-name>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { ExamTypeService } from '../../services/exam-type.service';\n\n@Component({\n  selector: 'app-new-exam-type',\n  templateUrl: './new-exam-type.component.html',\n  styleUrls: ['./new-exam-type.component.css']\n})\nexport class NewExamTypeComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() showHeader = true\n  @Input() childCard = false;\n\n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New Exam Type\"\n  subTitle = \"Add a new Exam Type\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  stoppageCount: number = 0\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public examTypeService: ExamTypeService\n  ) { }\n\n  ngOnInit() {\n    this.setTitleMessages()\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = \"Update Exam Type.\"\n      this.subTitle = \"Please update following details of Exam Type.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Exam Type.\"\n        this.subTitle = \"View following details of Exam Type.\"\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill ExamType information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.examTypeService.getSchoolExamType(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(examType: Event) {\n    this.mainForm.markAllAsTouched()\n    examType.preventDefault();\n    examType.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.examTypeService.saveSchoolExamType(\n        this.mainForm.getRawValue()\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Exam Type information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\" [header]=\"showHeader\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\" *ngIf=\"mainForm && !isPopulatingFormDb\">\n        <exam-type-basic-info [form]=\"mainForm\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\">\n        </exam-type-basic-info>\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ExamRoutingModule } from './exam-routing.module';\nimport { ExamManagementComponent } from './exam-management/exam-management.component';\nimport { ExamListComponent } from './exam-management/exam-list/exam-list.component';\nimport { NewExamComponent } from './exam-management/new-exam/new-exam.component';\nimport { ExamBasicInfoComponent } from './exam-management/new-exam/exam-basic-info/exam-basic-info.component';\nimport { ExamService } from './services/exam.service';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { ClassSubjectComponent } from './exam-management/new-exam/class-subject/class-subject.component';\nimport { SubjectExamResultComponent } from './exam-management/new-exam/class-subject/subject-exam-result/subject-exam-result.component';\nimport { ExamTypeManagementComponent } from './exam-type-management/exam-type-management.component';\nimport { NewExamTypeComponent } from './exam-type-management/new-exam-type/new-exam-type.component';\nimport { ExamTypeListComponent } from './exam-type-management/exam-type-list/exam-type-list.component';\nimport { ExamTypeBasicInfoComponent } from './exam-type-management/new-exam-type/exam-type-basic-info/exam-type-basic-info.component';\nimport { ExamTypeService } from './services/exam-type.service';\nimport { ExamReportCardComponent } from './exam-management/exam-report-card/exam-report-card.component';\nimport { SubjectExamResultGraphComponent } from './exam-management/new-exam/class-subject/subject-exam-result/subject-exam-result-graph/subject-exam-result-graph.component';\nimport { TabularFormatComponent } from './exam-management/exam-report-card/tabular-format/tabular-format.component';\nimport { PanelFormatComponent } from './exam-management/exam-report-card/panel-format/panel-format.component';\n\n@NgModule({\n  declarations: [ExamManagementComponent,\n    ExamListComponent, NewExamComponent, ExamBasicInfoComponent, ClassSubjectComponent, SubjectExamResultComponent, ExamTypeManagementComponent, NewExamTypeComponent, \n    ExamTypeListComponent, ExamTypeBasicInfoComponent, ExamReportCardComponent, SubjectExamResultGraphComponent, TabularFormatComponent, PanelFormatComponent],\n  imports: [\n    ExamRoutingModule,\n    SharedModule\n  ],\n  providers:[ExamService, ExamTypeService]\n})\nexport class ExamModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class ExamTypeService {\n\n  apiPrefix = \"api/examType/\"\n\n  constructor(\n    private _http: HttpClient,\n    private _sharedService: SharedService\n  ) {\n  }\n\n  getSchoolExamTypeList(searchParams) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"getSchoolExamTypeList\", searchParams)\n  }\n\n  getSchoolExamType(subjectId) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolExamType?id=\" + subjectId)\n  }\n  saveSchoolExamType(subjectData) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSchoolExamType\", subjectData)\n  }\n\n  deleteSchoolExamType(id) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteSchoolExamType?id=\" + this._sharedService.serializeMongoObjectId(id))\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class ExamService {\n\n  apiPrefix = \"api/exam/\"\n\n  constructor(\n    private _http: HttpClient,\n    private _sharedService: SharedService\n  ) {\n  }\n\n  getSchoolExamList(searchParams) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"getSchoolExamList\", searchParams)\n  }\n\n  getSchoolExam(examId) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolExam?id=\" + examId)\n  }\n\n  getExamResultStudentWise(examId) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getExamResultStudentWise?id=\" + examId)\n  }\n\n  saveSpecificSubjectSectionExamResult(data) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSpecificSubjectSectionExamResult\", data)\n  }\n\n  saveSchoolExam(examData) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSchoolExam\", examData)\n  }\n\n  getSchoolExamByDateRange(startDate, endDate) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolExamByDateRange?startDate =\" + startDate + \"&endDate =\" + endDate)\n  }\n\n  getSchoolExamByDate(examDate) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolExamByDate?agendaDate=\" + examDate)\n  }\n\n  deleteSchoolExam(id) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteSchoolExam?id=\" + this._sharedService.serializeMongoObjectId(id))\n  }\n\n}\n"],"sourceRoot":"webpack:///"}