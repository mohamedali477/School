{"version":3,"sources":["webpack:///src/app/post-login/post-login.service.ts"],"names":["PostLoginService","router","http","sharedService","environment","userRoles","JSON","parse","loggedInData","roles","length","isStudent","studentRoleId","currentUserRoleId","isGuardian","guardianRoleId","navigateByUrl","console","log","pageId","subPageId","superAdminRoleId","page","currentUserRoleEntitlements","find","x","subPage","accessTypeId","data","post","apiUrl","id","get"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaA,gB;;;AAMT,gCACYC,MADZ,EAEYC,IAFZ,EAGYC,aAHZ,EAGwC;AAAA;;AAF5B,aAAAF,MAAA,GAAAA,MAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AALZ,aAAAC,WAAA,GAAc,4DAAd;AAMI;;;;2CAEY;AACZ,cAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKJ,aAAL,CAAmBK,YAAnB,EAAX,CAAhB;AACA,iBAAQH,SAAS,IAAIA,SAAS,CAACI,KAAvB,IAAgCJ,SAAS,CAACI,KAAV,CAAgBC,MAAhB,GAAyB,CAAjE;AACH,S,CAED;;;;8CACsB;AAElB,cAAIC,SAAS,GAAG,4DAAWC,aAAX,CAAyB,MAAzB,MAAqC,KAAKT,aAAL,CAAmBU,iBAAnB,GAAuC,MAAvC,CAArD;AACA,cAAIC,UAAU,GAAG,4DAAWC,cAAX,CAA0B,MAA1B,MAAsC,KAAKZ,aAAL,CAAmBU,iBAAnB,GAAuC,MAAvC,CAAvD;;AAEA,cAAIF,SAAS,IAAIG,UAAjB,EAA6B;AACzB,iBAAKb,MAAL,CAAYe,aAAZ,CAA0B,uDAA1B;AACAC,mBAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,WAHD,MAIK;AACD,iBAAKjB,MAAL,CAAYe,aAAZ,CAA0B,gDAA1B;AACAC,mBAAO,CAACC,GAAR,CAAY,sCAAZ;AACH;AACJ;;;4CAEmBC,M,EAAQC,S,EAAS;AACjC,cAAIP,iBAAiB,GAAG,KAAKV,aAAL,CAAmBU,iBAAnB,EAAxB;;AAEA,cAAGA,iBAAiB,CAAC,MAAD,CAAjB,KAA8B,4DAAWQ,gBAAX,CAA4B,MAA5B,CAAjC,EAAqE;AACjE,mBAAO,CAAP;AACH,WAFD,MAGI;AACA,gBAAIC,IAAI,GAAG,KAAKC,2BAAL,CAAiCC,IAAjC,CAAsC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACN,MAAF,KAAaA,MAAjB;AAAA,aAAvC,CAAX;AACA,gBAAIO,OAAO,GAAGJ,IAAI,CAACI,OAAL,CAAaF,IAAb,CAAkB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACL,SAAF,KAAgBA,SAApB;AAAA,aAAnB,CAAd;;AAEA,gBAAGE,IAAI,CAACK,YAAL,KAAsB,CAAtB,IAA2BD,OAAO,CAACC,YAAR,KAAyB,CAAvD,EAAyD,CACrD;AACH,aAFD,MAGI;AACA,qBAAOD,OAAO,CAACC,YAAf;AACH;AACJ;AACJ;AAED;;;;;;yCAGiBC,I,EAAI;AAClB,iBAAO,KAAK1B,IAAL,CAAU2B,IAAV,CAAe,KAAKzB,WAAL,CAAiB0B,MAAjB,GAA0B,mBAA1B,GAAgD,kBAA/D,EAAmFF,IAAnF,CAAP;AACF;;;+CAEsBG,E,EAAE;AACrB,iBAAO,KAAK7B,IAAL,CAAU8B,GAAV,CAAc,KAAK5B,WAAL,CAAiB0B,MAAjB,GAA0B,6CAA1B,GAA0EC,EAAxF,CAAP;AACF;;;;;;;uBA7DO/B,gB,EAAgB,8G,EAAA,uH,EAAA,yI;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MasterData, environment } from '@env/environment';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class PostLoginService {\r\n\r\n    public currentUserRoleEntitlements\r\n\r\n    environment = environment\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient,\r\n        private sharedService: SharedService\r\n    ) {}\r\n\r\n    hasMultipleRoles(){\r\n        let userRoles = JSON.parse(this.sharedService.loggedInData())\r\n        return  userRoles && userRoles.roles && userRoles.roles.length > 1\r\n    }\r\n\r\n    //************* Navigate to my Profile */\r\n    navigateToMyProfile() {\r\n\r\n        let isStudent = MasterData.studentRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\r\n        let isGuardian = MasterData.guardianRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\r\n\r\n        if (isStudent || isGuardian) {\r\n            this.router.navigateByUrl(\"pl/secure/studentguardian/(postLoginOutlet:myProfile)\")\r\n            console.log(\"yes i here isGuardian..........\")\r\n        }\r\n        else {\r\n            this.router.navigateByUrl(\"pl/secure/employee/(postLoginOutlet:myProfile)\")\r\n            console.log(\"yes i here isGuardian else .........\")\r\n        }\r\n    }\r\n\r\n    getPageEntitlements(pageId, subPageId){\r\n        let currentUserRoleId = this.sharedService.currentUserRoleId()\r\n\r\n        if(currentUserRoleId['$oid'] === MasterData.superAdminRoleId['$oid']){\r\n            return 2\r\n        }\r\n        else{\r\n            let page = this.currentUserRoleEntitlements.find(x => x.pageId === pageId)\r\n            let subPage = page.subPage.find(x => x.subPageId === subPageId)\r\n\r\n            if(page.accessTypeId === 0 || subPage.accessTypeId === 0){\r\n                //logOut\r\n            }\r\n            else{\r\n                return subPage.accessTypeId\r\n            }\r\n        }\r\n    }\r\n\r\n    /*******************************************************************\r\n     * Save User settings\r\n     *******************************************************************/\r\n    saveUserSettings(data){\r\n       return this.http.post(this.environment.apiUrl + \"api/userSettings/\" + \"saveUserSettings\", data)\r\n    }\r\n\r\n    restoreDefaultSettings(id){\r\n        return this.http.get(this.environment.apiUrl + \"api/userSettings/restoreDefaultSettings?id=\" + id)\r\n     }\r\n\r\n}\r\n"]}