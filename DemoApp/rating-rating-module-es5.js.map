{"version":3,"sources":["webpack:///src/app/post-login/rating/rating-routing.module.ts","webpack:///src/app/post-login/rating/rating-search/rating-search.component.ts","webpack:///src/app/post-login/rating/rating-search/rating-search.component.html","webpack:///src/app/post-login/rating/rating.module.ts","webpack:///src/app/post-login/rating/services/student-rating.service.ts","webpack:///src/app/post-login/rating/student/mark-student-rating/mark-student-rating.component.ts","webpack:///src/app/post-login/rating/student/mark-student-rating/mark-student-rating.component.html","webpack:///src/app/post-login/rating/student/reset-student-rating/reset-student-rating.component.ts","webpack:///src/app/post-login/rating/student/reset-student-rating/reset-student-rating.component.html","webpack:///src/app/post-login/rating/student/specific-rating-student/specific-rating-student.component.ts","webpack:///src/app/post-login/rating/student/specific-rating-student/specific-rating-student.component.html"],"names":["routes","path","component","outlet","RatingRoutingModule","forChild","imports","exports","RatingSearchComponent","sharedService","initialFormValues","isViewMode","masterData","fieldsConfig","type","label","name","validations","required","setFormInitialValueForChangeMode","selector","templateUrl","styleUrls","RatingModule","declarations","providers","StudentRatingService","_http","apiPrefix","ratingSearch","post","apiUrl","ratingValue","get","rating","MarkStudentRatingComponent","fb","changeDetector","studentRatingService","plService","unsubscribe$","loading","open","stayOnPage","mainForm","searchForm","environment","isPopulatingFormDb","ratingStatusCount","title","subTitle","editPermissions","getPageEntitlements","initializeRatingCounts","searchParams","value","serializeMongoObjectId","getClassSectionRating","pipe","subscribe","result","ratingCount","error","console","log","markAllAsTouched","valid","searchCard","hide","searchRating","idx","forEach","stu","saveRating","makeRating","openSnackBar","reset","manualRating","Map","set","Array","push","RatingModel","classes","stuId","selectedStudentId","isViewAllRating","detectChanges","next","complete","onSearchClick","ResetStudentRatingComponent","ratingService","resultMessage","resetConfirmationMessage","dialogRef","openConfirmDialog","afterClosed","confirmed","resetRating","SpecificRatingStudentComponent","getSpecificRatingStudents"],"mappings":"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","file":"rating-rating-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MarkStudentRatingComponent } from './student/mark-student-rating/mark-student-rating.component';\nimport { SpecificRatingStudentComponent } from './student/specific-rating-student/specific-rating-student.component';\nimport { ResetStudentRatingComponent } from './student/reset-student-rating/reset-student-rating.component';\n\nconst routes: Routes = [\n  {\n    path: 'markStuRating',\n    component: MarkStudentRatingComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'specificRatingStu',\n    component: SpecificRatingStudentComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'resetStuRating',\n    component: ResetStudentRatingComponent,\n    outlet:'postLoginOutlet'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RatingRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { validationType, FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { FormGroup } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'app-rating-search',\n  templateUrl: './rating-search.component.html',\n  styleUrls: ['./rating-search.component.css']\n})\nexport class RatingSearchComponent implements OnInit {\n  \n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"date\",\n        label: \"Date\",\n        name: \"ratingDate\",\n        validations: [validationType.required()]\n      }\n    ];\n\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n}","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RatingRoutingModule } from './rating-routing.module';\nimport { MarkStudentRatingComponent } from './student/mark-student-rating/mark-student-rating.component';\nimport { RatingSearchComponent } from './rating-search/rating-search.component';\nimport { StudentRatingService } from './services/student-rating.service';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SpecificRatingStudentComponent } from './student/specific-rating-student/specific-rating-student.component';\nimport { ResetStudentRatingComponent } from './student/reset-student-rating/reset-student-rating.component';\n\n@NgModule({\n  declarations: [MarkStudentRatingComponent, RatingSearchComponent, SpecificRatingStudentComponent, \n    ResetStudentRatingComponent],\n  imports: [\n    CommonModule,\n    RatingRoutingModule,\n    SharedModule\n  ],\n  providers:[\n    StudentRatingService\n  ]\n})\nexport class RatingModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { StorageService } from '@app/shared/services/storage.service';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Injectable()\nexport class StudentRatingService {\n\n    apiPrefix = \"api/studentRating/\"\n\n    constructor(\n        private _http: HttpClient\n    ) {}\n\n    getClassSectionRating(ratingSearch) {\n        return this._http.post(environment.apiUrl + this.apiPrefix + \"getClassSectionRating\", ratingSearch)\n    }\n\n    getSpecificRatingStudents(ratingValue) {\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"getSpecificRatingStudents?ratingValue=\" + ratingValue)\n    }\n\n    saveRating(rating) {\n        return this._http.post(environment.apiUrl + this.apiPrefix + \"saveRating\", rating)\n    }\n\n    resetRating() {\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"resetRating\")\n    }\n}\n","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef, AfterViewChecked, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MasterData, environment } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { StudentRatingService } from '../../services/student-rating.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-mark-student-rating',\n  templateUrl: './mark-student-rating.component.html',\n  styleUrls: ['./mark-student-rating.component.css']\n})\nexport class MarkStudentRatingComponent implements OnInit, AfterViewChecked, OnDestroy {\n  private unsubscribe$ = new Subject();\n  @ViewChild('searchCard') searchCard: CardBottomComponent\n\n  @Input() loading = false\n  @Input() public open = true\n  @Input() public stayOnPage = true\n\n  mainForm: FormGroup = new FormGroup({})\n  searchForm: FormGroup = new FormGroup({})\n\n  environment = environment\n  masterData = MasterData\n\n  isPopulatingFormDb = false\n  initialFormValues = null\n\n  public ratingStatusCount = {}\n  public editPermissions\n  public selectedStudentId\n  public isViewAllRating\n  public searchParams\n\n  rating = null\n\n  title = \"Add Employee Details.\"\n  subTitle = \"Please provide following details of employee.\"\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public studentRatingService: StudentRatingService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(3, 1) === 2\n    this.initializeRatingCounts()\n  }\n\n  initializeRatingCounts() {\n    this.ratingStatusCount[\"veryBad\"] = 0\n    this.ratingStatusCount[\"bad\"] = 0\n    this.ratingStatusCount[\"satisfied\"] = 0\n    this.ratingStatusCount[\"good\"] = 0\n    this.ratingStatusCount[\"excellent\"] = 0\n  }\n\n  ngOnInit(): void {\n  }\n\n  searchRating() {\n    this.loading = true\n    \n    this.searchParams = this.searchForm.value\n\n    this.searchParams[\"classId\"] = this.sharedService.serializeMongoObjectId(this.searchParams[\"classId\"])\n    this.searchParams[\"subjectId\"] = this.sharedService.serializeMongoObjectId(this.searchParams[\"subjectId\"])\n\n    this.studentRatingService.getClassSectionRating(this.searchParams)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n\n          this.isPopulatingFormDb = false\n          this.loading = false\n\n          this.rating = result\n          this.ratingCount()\n        },\n        (error) => {\n          this.isPopulatingFormDb = false\n          this.loading = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSearchClick() {\n\n    this.searchForm.markAllAsTouched()\n\n    if (this.searchForm.valid) {\n      this.searchCard.hide();\n      this.searchRating()\n    }\n\n  }\n\n  ratingValueChanged(idx, ratingValue) {\n    this.rating[idx][\"ratingValue\"] = ratingValue\n    this.ratingCount();\n  }\n\n  ratingCount() {\n    this.initializeRatingCounts()\n\n    this.rating.forEach(stu => {\n      switch (stu[\"ratingValue\"]) {\n        case 1: {\n          this.ratingStatusCount[\"veryBad\"] = this.ratingStatusCount[\"veryBad\"] + 1;\n          break;\n        }\n        case 2: {\n          this.ratingStatusCount[\"bad\"] = this.ratingStatusCount[\"bad\"] + 1;\n          break;\n        }\n        case 3: {\n          this.ratingStatusCount[\"satisfied\"] = this.ratingStatusCount[\"satisfied\"] + 1;\n          break;\n        }\n        case 4: {\n          this.ratingStatusCount[\"good\"] = this.ratingStatusCount[\"good\"] + 1;\n          break;\n        }\n        case 5: {\n          this.ratingStatusCount[\"excellent\"] = this.ratingStatusCount[\"excellent\"] + 1;\n          break;\n        }\n      }\n    });\n  }\n\n  saveRating() {\n\n    this.loading = true\n\n    this.studentRatingService.saveRating(this.makeRating())\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          this.loading = false\n          this.sharedService.openSnackBar(\"Rating get saved Successfully.\", \"x\", \"success\")\n          this.mainForm.reset()\n        },\n        (error) => {\n          this.loading = false\n          this.sharedService.openSnackBar(\"Rating not get saved.\", \"x\", \"fail\")\n          console.log(error)\n        }\n      );\n  }\n\n  makeRating() {\n    let manualRating: Map<Number, Array<object>> = new Map<number, Array<object>>()\n\n    this.rating.forEach(stu => {\n\n      if (!manualRating.get(stu[\"sectionId\"])) {\n        manualRating.set(stu[\"sectionId\"], new Array<object>())\n      }\n\n      manualRating.get(stu[\"sectionId\"])\n        .push(\n          {\n            \"studentId\": stu[\"studentId\"],\n            \"ratingValue\": stu[\"ratingValue\"]\n          }\n        )\n    });\n\n    let RatingModel = {\n      \"_id\": this.rating[0][\"_id\"],\n      \"ratingDate\": \"000000000\",\n      \"status\": 1,\n      \"classes\": []\n    }\n\n    //-------- populate section wise rating\n    for (let idx = 0; idx < 10; idx++) {\n\n      if (manualRating.get(idx)) {\n        RatingModel.classes.push(\n          {\n            \"classId\": this.searchForm.get(\"classId\").value,\n            \"subjectId\": this.searchForm.get(\"subjectId\").value,\n            \"sectionId\": idx,\n            \"students\": manualRating.get(idx)\n          }\n        )\n      }\n    }\n\n    return RatingModel\n  }\n\n  viewAllRatingClicked(stuId){\n    this.selectedStudentId = stuId\n    this.isViewAllRating = true\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}","<card-bottom [form]=\"searchForm\" #searchCard [title]=\"'Search student for rating'\" [open]=\"true\">\n  <card [header]=\"false\">\n    <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n      <column [gap]=\"'0px'\">\n        <div fxFlex>\n          <app-class-section-ddl [form]=\"searchForm\" [Required]=\"true\" [subjectNeeded]=\"true\">\n          </app-class-section-ddl>\n        </div>\n        <div fxFlex>\n          <form-buttons [saveLabel]=\"'Search'\" [form]=\"searchForm\" [resetButtonNeeded]=\"false\"></form-buttons>\n        </div>\n      </column>\n    </form>\n  </card>\n</card-bottom>\n\n<br><br><br><br>\n\n<responsive>\n  <div fxFlex>\n    <div *ngIf=\"!loading\">\n      <responsive *ngIf=\"searchParams\">\n        <div class=\"bold\">\n            {{searchParams.subjectId | subject}}\n        </div>\n        <div>\n            Class:- {{searchParams.classId | class}}, Section:- {{searchParams.sectionId | masterData : 'classSections'}}\n          </div>\n      </responsive>\n      <table *ngIf=\"rating && rating.length > 0; else noRecordFound\" class=\"table appear-animate\" cellspacing=0>\n        <thead class=\"thead\">\n          <tr>\n            <th class=\"sr\">&nbsp;</th>\n            <th>\n              Roll No\n            </th>\n            <th>\n              Name\n            </th>\n            <th class=\"rt\" style=\"padding-right: 10px;\">\n              Status\n            </th>\n          </tr>\n        </thead>\n        <tbody *ngIf=\"rating\">\n          <tr class=\"tr\" style=\"border-top: 1px; border-bottom: 1px;\" *ngFor=\"let stu of rating; let idx = index\"\n            [ngClass]=\"'ratingStatus'+ stu.ratingStatusId\">\n            <td>\n              <user-small-pic [userId]=\"stu.studentId\"></user-small-pic>\n            </td>\n            <td style=\"font-size: 16px;\">\n              {{stu.academicInfo.rollNo | numberData}}\n            </td>\n            <td>\n                <link-button (click)=\"viewAllRatingClicked(stu.studentId)\">\n                <b>\n                  {{stu.basicInfo.firstName}} {{stu.basicInfo.lastName}}\n                </b>\n              </link-button>\n            </td>\n            <td class=\"rt\">\n              <star-rating [isViewMode]=\"!editPermissions\" [rating]=\"stu.ratingValue\"\n                (ratingSelected)=\"ratingValueChanged(idx, $event)\"></star-rating>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <ng-template #noRecordFound>\n        <no-record-found>\n          <p>\n            Please <b>search</b> the students, whoes rating you want to {{editPermissions ? 'mark' : 'view'}}.\n          </p>\n        </no-record-found>\n      </ng-template>\n      <br><br>\n      <button *ngIf=\"editPermissions && rating && rating.length > 0\" mat-raised-button class=\"btn-submit padding\"\n        type=\"button\" (click)=\"saveRating()\">\n        <mat-icon>save</mat-icon> Save Rating\n      </button>\n      <br><br><br><br>\n    </div>\n    <app-loader *ngIf=\"loading\"></app-loader>\n  </div>\n  <div fxFlex *ngIf=\"rating && rating.length > 0\">\n    <overall-rating-count-chart [open]=\"false\" [eyeButton]=\"false\" [title]=\"'Rating status'\" [ratingStatusCount]=\"ratingStatusCount\">\n    </overall-rating-count-chart>\n  </div>\n</responsive>\n\n<card *ngIf=\"isViewAllRating\" [title]=\"'Student All Ratings'\" [popUpMode]=\"true\" [refreshButton]=\"false\"\n  (deleteCardEvent)=\"isViewAllRating = false\">\n  <user-small-pic cardHeader [userId]=\"selectedStudentId\"></user-small-pic>\n  <app-student-whole-rating [studentId]=\"selectedStudentId\">\n  </app-student-whole-rating>\n</card>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { StudentRatingService } from '../../services/student-rating.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-reset-student-rating',\n  templateUrl: './reset-student-rating.component.html',\n  styleUrls: ['./reset-student-rating.component.css']\n})\nexport class ResetStudentRatingComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  public loading = false\n  public resultMessage = \"\"\n  public editPermissions\n\n  constructor(\n    private sharedService: SharedService,\n    private ratingService: StudentRatingService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(3,3) === 2\n   }\n\n  ngOnInit() {\n  }\n\n  buttonClicked(){\n    this.resultMessage = \"\"\n\n    let resetConfirmationMessage = \"You want to delete all Student's rating for current cycle.\"\n    let dialogRef = this.sharedService.openConfirmDialog(resetConfirmationMessage)\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((confirmed: boolean) => {\n        if (confirmed) {\n                this.reset()\n        }        \n      });\n  }\n\nreset(){\n  this.loading = true\n  \n  this.ratingService.resetRating()\n  .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          this.loading = false\n          this.resultMessage = \"Student Rating reset successfully.\"\n        },\n        (error) => {\n          this.loading = false\n          console.log(error)\n          this.resultMessage = \"Sorry! Unable to reset the Student Rating.\"\n        }\n      );\n}\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<!--\n<img class=\"warn-img\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0GKgTh-FMftCem7wXfKWwVWVC-Mrca4pygz3C6XVquQjkmXBl&s\">\n-->\n<card [childCard]=\"true\" [header]=\"false\">\n    <div class=\"warn-message\">\n        <mat-icon>warning</mat-icon> Are You Sure ?\n    </div>\n    <div class=\"title-message jump-animate\">\n        You want to reset all the \"Student Rating\" for current cycle.\n    </div>\n    <br><br>\n    <button *ngIf=\"editPermissions && !loading\" class=\"btn-submit btn\" mat-raised-button type=\"button\" (click)=\"buttonClicked()\">Reset Student Rating</button>\n    <app-loader *ngIf=\"loading\"></app-loader>\n    <br>\n    <div>\n        <h4>{{resultMessage}}</h4>\n    </div>\n</card>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { StudentRatingService } from '../../services/student-rating.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment } from '@env/environment';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-specific-rating-student',\n  templateUrl: './specific-rating-student.component.html',\n  styleUrls: ['./specific-rating-student.component.css']\n})\nexport class SpecificRatingStudentComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Input() loading = false\n\n  isPopulatingFormDb = false\n  initialFormValues = null  \n  rating = null\n\n  public environment = environment\n  public ratingStatusCount = {}\n  public isViewAllRating\n  public editPermissions = false\n  public ratingValue = 5\n  public selectedStudentId\n\n  constructor(\n    public sharedService: SharedService,\n    public studentRatingService: StudentRatingService,\n    private plService: PostLoginService\n  ) {\n      this.editPermissions = this.plService.getPageEntitlements(3,2) == 2\n  }\n\n  ngOnInit(): void {\n    this.searchRating()\n  }\n\n  searchRating() {\n    this.loading = true\n\n    this.studentRatingService.getSpecificRatingStudents(this.ratingValue)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n\n          this.loading = false\n          this.rating = result\n        },\n        (error) => {\n          this.loading = false\n          console.log(error)\n        }\n      );\n  }\n\n  viewAllRatingClicked(stuId){\n    this.selectedStudentId = stuId\n    this.isViewAllRating = true\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}","<card [loading]=\"loading\" [title]=\"'Student Rating Report'\" [subTitle]=\"'View rating report of students'\"\n  [cardButtons]=\"false\">\n  <br><br>\n  <responsive>\n    <div fxFlex>\n      <responsive>\n        <div class=\"fill-space\"></div>\n        <div class=\"bold\">\n          Show all students who has rating\n        </div>\n        <div class=\"fill-space\"></div>\n      </responsive>\n      <responsive>\n        <div class=\"fill-space\"></div>\n        <div>\n          <star-rating [zoom]=\"'150'\" [isViewMode]=\"!editPermissions\" [rating]=\"5\"\n            (ratingSelected)=\"ratingValue = $event\"></star-rating>\n        </div>\n        <div class=\"fill-space\"></div>\n      </responsive>\n      <br>\n      <responsive *ngIf=\"editPermissions\">\n        <div class=\"fill-space\">&nbsp;</div>\n        <div>\n          <button fxFlex mat-raised-button class=\"btn-submit padding\" type=\"button\" (click)=\"searchRating()\">\n            <mat-icon class=\"save-btn-icon\">search</mat-icon> Search\n          </button>\n        </div>\n        <div class=\"fill-space\">&nbsp;</div>\n      </responsive>\n    </div>\n    <div fxFlex>\n      <table class=\"table\" *ngIf=\"rating\" cellspacing=0>\n        <thead class=\"thead\">\n          <tr>\n            <th class=\"sr\" style=\"min-width: 30px;\">#</th>\n            <th colspan=\"2\">\n              Student Details\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr class=\"tr\" style=\"border-top: 1px; border-bottom: 1px;\" *ngFor=\"let stu of rating; let idx = index\"\n            [ngClass]=\"'ratingStatus'+ stu.ratingStatusId\">\n            <td class=\"bottom-border\">{{idx+1}}</td>\n            <td class=\"bottom-border\">\n              <responsive>\n                <div style=\"min-width: 150px;\">\n                  <user-small-pic [userId]=\"stu.studentId\"></user-small-pic>\n                  <br>\n                  <br>\n                  <link-button (click)=\"viewAllRatingClicked(stu.studentId)\">\n                    <b>\n                      {{stu.basicInfo.firstName}} {{stu.basicInfo.lastName}}\n                    </b>\n                  </link-button>\n                </div>\n                <div style=\"min-width: 60px;\">\n                  <b>R.No.</b> {{stu.academicInfo.rollNo | numberData}}\n                </div>\n                <div style=\"min-width: 100px;\">\n                  <b>Class</b> {{stu.className}}\n                </div>\n              </responsive>\n            </td>\n            <td class=\"bottom-border\">\n              <responsive>\n                <div style=\"min-width: 40px;\">\n                  <star-rating [rating]=\"stu.ratingValue\" [showStars]=\"false\" [isViewMode]=\"true\"></star-rating>\n                </div>\n                <div style=\"min-width: 100px;\">\n                  <ul>\n                    <li *ngFor=\"let subjectId of stu.subjectIds\">\n                      {{ subjectId | subject }}\n                    </li>\n                  </ul>\n                </div>\n              </responsive>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <no-record-found *ngIf=\"!rating || rating.length === 0\"></no-record-found>\n    </div>\n  </responsive>\n</card>\n\n<card *ngIf=\"isViewAllRating\" [title]=\"'Student All Ratings'\" [popUpMode]=\"true\" [refreshButton]=\"false\"\n  (deleteCardEvent)=\"isViewAllRating = false\">\n  <user-small-pic cardHeader [userId]=\"selectedStudentId\"></user-small-pic>\n  <app-student-whole-rating [studentId]=\"selectedStudentId\">\n  </app-student-whole-rating>\n</card>"]}