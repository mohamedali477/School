{"version":3,"sources":["webpack:///src/app/post-login/transport/routes/new-route/new-route.component.ts","webpack:///src/app/post-login/transport/routes/new-route/new-route.component.html","webpack:///src/app/post-login/transport/routes/new-route/route-basic-info/route-basic-info.component.ts","webpack:///src/app/post-login/transport/routes/new-route/route-basic-info/route-basic-info.component.html","webpack:///src/app/post-login/transport/routes/new-route/route-stoppage-info/route-stoppage-info.component.ts","webpack:///src/app/post-login/transport/routes/new-route/route-stoppage-info/route-stoppage-info.component.html","webpack:///src/app/post-login/transport/routes/route-list/route-list.component.ts","webpack:///src/app/post-login/transport/routes/route-list/route-list.component.html","webpack:///src/app/post-login/transport/routes/route-management/route-management.component.ts","webpack:///src/app/post-login/transport/routes/route-management/route-management.component.html","webpack:///src/app/post-login/transport/services/route.service.ts","webpack:///src/app/post-login/transport/services/transport.service.ts","webpack:///src/app/post-login/transport/services/vehicle.service.ts","webpack:///src/app/post-login/transport/transport-routing.module.ts","webpack:///src/app/post-login/transport/transport.module.ts","webpack:///src/app/post-login/transport/vehicle/new-vehicle/new-vehicle.component.ts","webpack:///src/app/post-login/transport/vehicle/new-vehicle/new-vehicle.component.html","webpack:///src/app/post-login/transport/vehicle/new-vehicle/vehicle-basic-info/vehicle-basic-info.component.ts","webpack:///src/app/post-login/transport/vehicle/new-vehicle/vehicle-basic-info/vehicle-basic-info.component.html","webpack:///src/app/post-login/transport/vehicle/new-vehicle/vehicle-maintenance-info/vehicle-maintenance-info.component.ts","webpack:///src/app/post-login/transport/vehicle/new-vehicle/vehicle-maintenance-info/vehicle-maintenance-info.component.html","webpack:///src/app/post-login/transport/vehicle/new-vehicle/vehicle-route-info/vehicle-route-info.component.ts","webpack:///src/app/post-login/transport/vehicle/new-vehicle/vehicle-route-info/vehicle-route-info.component.html","webpack:///src/app/post-login/transport/vehicle/vehicle-list/vehicle-list.component.ts","webpack:///src/app/post-login/transport/vehicle/vehicle-list/vehicle-list.component.html","webpack:///src/app/post-login/transport/vehicle/vehicle-management/vehicle-management.component.ts","webpack:///src/app/post-login/transport/vehicle/vehicle-management/vehicle-management.component.html"],"names":["NewRouteComponent","fb","changeDetector","sharedService","routeService","unsubscribe$","onSaveSuccess","initialFormValues","changeModeId","isViewMode","showHeader","childCard","mainForm","title","subTitle","isLoading","isPopulatingFormDb","masterData","open","stoppageCount","setTitleMessages","group","basicInfo","stoppage","array","setFormCommonFields","populateFromDB","addStoppage","pageLevelSave","id","status","get","push","idx","dialogRef","openConfirmDialog","afterClosed","pipe","subscribe","confirmed","removeStoppage","pageLevelDelete","removeAt","event","calculateRouteLength","totalDistance","controls","forEach","stoppageDistance","parseInt","value","ex","routeLengthControl","setValue","getRoute","result","element","_id","length","error","console","log","markAllAsTouched","preventDefault","stopPropagation","valid","saveRoute","getRawValue","emit","openSnackBar","reset","detectChanges","next","complete","selector","templateUrl","styleUrls","RouteBasicInfoComponent","fieldsConfig","type","label","inputType","name","icon","validations","required","hint","setFormInitialValueForChangeMode","RouteStoppageInfoComponent","stoppageValueChanged","routeDistanceChanged$","onValueChange","registerDropdownChangeEvents","val","RouteListComponent","plService","viewButtonEvent","editButtonEvent","deleteButtonEvent","pageTitle","environment","routes","viewUser","editPermissions","searchParams","paging","pageIndex","pageSize","sortParams","fieldName","isAsc","getPageEntitlements","getList","SearchObject","SearchParameters","sorting","getRouteList","data","count","sort","active","direction","paginator","sortClicked","pagingClicked","RouteManagementComponent","showViewPage","showAddChangePage","showListPage","showDeleteButton","Id","searchConfig","searchForm","_ListPage","searchCard","hide","backToListClick","deleteRoute","onSearchClick","RouteService","_http","_storageService","_sharedService","apiPrefix","routeData","post","apiUrl","serializeMongoObjectId","TransportService","VehicleService","vehicleData","path","component","outlet","TransportRoutingModule","forChild","imports","exports","TransportModule","declarations","providers","NewVehicleComponent","vehicleService","maintenanceCount","userAccessPolicy","maintenance","addMaintenance","removeMaintenance","getVehicle","saveVehicle","onSubmit","encapsulation","None","VehicleBasicInfoComponent","options","vehicleTypes","fuelTypes","VehicleMaintenanceInfoComponent","VehicleRouteInfoComponent","http","isRequired","routeChanged$","ShowRouteDetails","stoppageList","routeId","fetchRouteDdl","VehicleListComponent","vehicles","getVehicleList","VehicleManagementComponent","booleanFlag","deleteVehicle"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACoB4B;;AACQ;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6C;;AAAc;;AAC3G;;;;;;;;AAXJ;;AAEI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AAGA;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAEjE;;AACJ;;;;;;;;;AAXuB;;AAAA,yFAAiB,OAAjB,EAAiB,qBAAjB;;AACP;;AAAA;;AAII;;AAAA;;AAGK;;AAAA,yFAAiB,YAAjB,EAAiB,oBAAjB,EAAiB,mBAAjB,EAAiB,+NAAjB;;;;;;;;AAK7B;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAoB;;AAAG;;AACvB;;AAAoB;;AAAO;;AAC/B;;AACJ;;;;;;AAKZ;;;;;;AAAkC,6FAAiB,cAAjB,EAAiB,sBAAjB;;;;;;;;AAtCtC;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AACI;;AACI;;AAgBJ;;AACA;;AAOJ;;AACJ;;AACJ;;AAEA;;AACJ;;;;;;AAvCM;;AAGwB;;AAAA,mHAAuC,YAAvC,EAAuC,oBAAvC,EAAuC,mBAAvC,EAAuC,oEAAvC;;AAKL;;AAAA,oFAAkB,OAAlB,EAAkB,eAAlB;;AACwB;;AAAA;;AAEzB;;AAAA;;AAgBM;;AAAA;;AAWZ;;AAAA;;;;QD1BTA,iB;;;AAqBX,iCACSC,EADT,EAEUC,cAFV,EAGSC,aAHT,EAISC,YAJT,EAImC;AAAA;;AAH1B,aAAAH,EAAA,GAAAA,EAAA;AACC,aAAAC,cAAA,GAAAA,cAAA;AACD,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AAxBD,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAES,aAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACR,aAAAC,iBAAA,GAAoB,IAApB;AACA,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,UAAA,GAAa,IAAb;AACA,aAAAC,SAAA,GAAY,KAAZ;AAET,aAAAC,QAAA,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AAEA,aAAAC,KAAA,GAAQ,WAAR;AACA,aAAAC,QAAA,GAAW,iBAAX;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,kBAAA,GAAqB,KAArB;AACA,aAAAC,UAAA,GAAa,2DAAb;AACA,aAAAC,IAAA,GAAO,KAAP;AAEA,aAAAC,aAAA,GAAwB,CAAxB;AAOI;;;;mCAEO;AAET,eAAKC,gBAAL;AAEA,eAAKR,QAAL,GAAgB,KAAKX,EAAL,CAAQoB,KAAR,CACd;AACEC,qBAAS,EAAE,KAAKrB,EAAL,CAAQoB,KAAR,CAAc,EAAd,CADb;AAEEE,oBAAQ,EAAE,KAAKtB,EAAL,CAAQuB,KAAR,CAAc,EAAd;AAFZ,WADc,CAAhB;AAOA,eAAKrB,aAAL,CAAmBsB,mBAAnB,CAAuC,KAAKb,QAA5C;;AAEA,cAAI,KAAKJ,YAAT,EAAuB;AACrB,iBAAKkB,cAAL;AACD;AACF;;;2CAEe;AACd,cAAI,KAAKlB,YAAT,EAAuB;AACrB,iBAAKK,KAAL,GAAa,eAAb;AACA,iBAAKC,QAAL,GAAgB,2CAAhB;;AAEA,gBAAI,KAAKL,UAAT,EAAqB;AACnB,mBAAKI,KAAL,GAAa,aAAb;AACA,mBAAKC,QAAL,GAAgB,kCAAhB;AACD;AACF;AACF;;;6CAEoB;AAEnB,eAAKa,WAAL;AACA,eAAKT,IAAL,GAAY,IAAZ,CAHmB,CAGF;;AACjB,eAAKf,aAAL,CAAmByB,aAAnB,CAAiC,mBAAjC;AACD;;;sCACqC;AAAA,cAA1BC,EAA0B,uEAArB,IAAqB;AAAA,cAAfC,MAAe,uEAAN,IAAM;AAEpC,eAAKX,aAAL,GAAqB,KAAKA,aAAL,GAAqB,CAA1C;AACc,eAAKP,QAAL,CAAcmB,GAAd,CAAkB,UAAlB,EACXC,IADW,CAER,KAAK7B,aAAL,CAAmBsB,mBAAnB,CACE,KAAKxB,EAAL,CAAQoB,KAAR,CAAc,EAAd,CADF,EAEEQ,EAFF,EAEMC,MAFN,CAFQ;AAOf;;;8CAEqBG,G,EAAK;AAAA;;AACzB,cAAIC,SAAS,GAAG,KAAK/B,aAAL,CAAmBgC,iBAAnB,EAAhB;AAEAD,mBAAS,CAACE,WAAV,GACCC,IADD,CACM,iEAAU,KAAKhC,YAAf,CADN,EAECiC,SAFD,CAEW,UAACC,SAAD,EAAwB;AACjC,gBAAIA,SAAJ,EAAe;AACb,mBAAI,CAACC,cAAL,CAAoBP,GAApB;;AACA,mBAAI,CAAC9B,aAAL,CAAmBsC,eAAnB,CAAmC,UAAnC;AACD;AACF,WAPD;AAQD;;;uCACcR,G,EAAK;AACN,eAAKrB,QAAL,CAAcmB,GAAd,CAAkB,UAAlB,EAA+BW,QAA/B,CAAwCT,GAAxC;AACZ,eAAKd,aAAL;AACD;;;6CAEoBwB,K,EAAK;AACxB,eAAKC,oBAAL;AACD;;;+CAEsB;AACrB,cAAIC,aAAa,GAAG,CAApB;AAEY,eAAKjC,QAAL,CAAcmB,GAAd,CAAkB,UAAlB,EAA+Be,QAA/B,CAAwCC,OAAxC,CAAgD,UAAAxB,QAAQ,EAAI;AACtE,gBAAG;AACC,kBAAIyB,gBAAgB,GAAGC,QAAQ,CAAC1B,QAAQ,CAACQ,GAAT,CAAa,UAAb,EAAyBmB,KAA1B,CAA/B;;AACA,kBAAGF,gBAAgB,GAAG,CAAtB,EAAwB;AACtBH,6BAAa,GAAGA,aAAa,GAAGG,gBAAhC;AACD;AACJ,aALD,CAMA,OAAMG,EAAN,EAAS,CACP;AACD;AACF,WAVW;AAYZ,cAAIC,kBAAkB,GAAG,KAAKxC,QAAL,CAAcmB,GAAd,CAAkB,WAAlB,EAA+BA,GAA/B,CAAmC,aAAnC,CAAzB;AACAqB,4BAAkB,IAAIA,kBAAkB,CAACC,QAAnB,CAA4BR,aAA5B,CAAtB;AACD;;;yCAEgB;AAAA;;AACf;AAEA,eAAK9B,SAAL,GAAiB,IAAjB;AACA,eAAKC,kBAAL,GAA0B,IAA1B;AAEA,eAAKZ,YAAL,CAAkBkD,QAAlB,CAA2B,KAAK9C,YAAhC,EACG6B,IADH,CACQ,iEAAU,KAAKhC,YAAf,CADR,EAEGiC,SAFH,CAGI,UAACiB,MAAD,EAAiB;AACfA,kBAAM,CAACR,OAAP,CAAe,UAAAS,OAAO,EAAI;AACxB,oBAAI,CAACjD,iBAAL,GAAyBiD,OAAzB;;AACA,oBAAI,CAAC5C,QAAL,CAAcmB,GAAd,CAAkB,KAAlB,EAAyBsB,QAAzB,CAAkC,MAAI,CAAC9C,iBAAL,CAAuBkD,GAAzD;;AACA,oBAAI,CAAC7C,QAAL,CAAcmB,GAAd,CAAkB,QAAlB,EAA4BsB,QAA5B,CAAqC,MAAI,CAAC9C,iBAAL,CAAuBuB,MAA5D,EAHwB,CAKxB;;;AACA,mBAAI,IAAIG,GAAG,GAAC,CAAZ,EAAeA,GAAG,GAAmBuB,OAAO,CAAC,UAAD,CAAP,CAAqBE,MAA1D,EAAkEzB,GAAG,EAArE,EAAwE;AACtE,oBAAIJ,EAAE,GAAoB2B,OAAO,CAAC,UAAD,CAAP,CAAqBvB,GAArB,CAAjB,CAA4C,KAA5C,CAAT;AACA,oBAAIH,MAAM,GAAoB0B,OAAO,CAAC,UAAD,CAAP,CAAqBvB,GAArB,CAAjB,CAA4C,QAA5C,CAAb;;AACA,sBAAI,CAACN,WAAL,CAAiBE,EAAjB,EAAqBC,MAArB;AACD;AAEF,aAZD;AAcA,kBAAI,CAACf,SAAL,GAAiB,KAAjB;AACA,kBAAI,CAACC,kBAAL,GAA0B,KAA1B;AACD,WApBL,EAqBI,UAAC2C,KAAD,EAAW;AACT,kBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACA,kBAAI,CAACC,kBAAL,GAA0B,KAA1B;AACA4C,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,WAzBL;AA2BD;;;iCAEQhB,K,EAAc;AAAA;;AAErB,eAAK/B,QAAL,CAAckD,gBAAd;AACAnB,eAAK,CAACoB,cAAN;AACApB,eAAK,CAACqB,eAAN;;AAEA,cAAI,KAAKpD,QAAL,CAAcqD,KAAlB,EAAyB;AACvB,iBAAKlD,SAAL,GAAiB,IAAjB;AAEA,iBAAKX,YAAL,CAAkB8D,SAAlB,CACE,KAAKtD,QAAL,CAAcuD,WAAd,EADF,EAEE,KAAK3D,YAFP,EAIG6B,IAJH,CAIQ,iEAAU,KAAKhC,YAAf,CAJR,EAKGiC,SALH,CAMI,UAACiB,MAAD,EAAiB;AACf,oBAAI,CAACxC,SAAL,GAAiB,KAAjB;;AACA,oBAAI,CAACT,aAAL,CAAmB8D,IAAnB,CAAwB,IAAxB;;AACA,oBAAI,CAACjE,aAAL,CAAmBkE,YAAnB,CAAgC,yCAAhC,EAA2E,GAA3E,EAAgF,SAAhF;;AACA,oBAAI,CAACzD,QAAL,CAAc0D,KAAd;AACD,aAXL,EAYI,UAACX,KAAD,EAAW;AACT,oBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACA6C,qBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAfL;AAiBD,WApBD,MAoBO;AACL,iBAAKxD,aAAL,CAAmBkE,YAAnB,CAAgC,qDAAhC,EAAuF,GAAvF,EAA4F,MAA5F;AACD;AACF;;;6CAEoB;AACnB,eAAKnE,cAAL,CAAoBqE,aAApB;AACD;;;sCAEa;AACZ,eAAKlE,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBA7LUzE,iB,EAAiB,2H,EAAA,gI,EAAA,kJ,EAAA,qI;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qsB;AAAA;AAAA;ACb9B;;AACI;;AAwCJ;;;;AAzCM,6FAAqB,OAArB,EAAqB,SAArB,EAAqB,UAArB,EAAqB,YAArB,EAAqB,aAArB,EAAqB,KAArB,EAAqB,QAArB,EAAqB,cAArB;;AACyD;;AAAA;;;;;;;;;sEDYlDA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT0E,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;gBAG3B;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AErBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,uB;;;AASX,uCACU1E,aADV,EACsC;AAAA;;AAA5B,aAAAA,aAAA,GAAAA,aAAA;AAPD,aAAAI,iBAAA,GAAoB,IAApB;AAEA,aAAAE,UAAA,GAAa,KAAb;AAET,aAAAQ,UAAA,GAAa,2DAAb;AAII;;;;mCAEO;AAET,eAAK6D,YAAL,GAAoB,CAClB;AACErE,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,YAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,WALR;AAMEC,gBAAI,EAAE,KANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WADkB,EAUlB;AACE5E,sBAAU,EAAE,IADd;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,cAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,aALR;AAMEC,gBAAI,EAAE,YANR;AAOEG,gBAAI,EAAE,8BAPR;AAQEF,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AARf,WAVkB,EAoBlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,UAFR;AAGEC,iBAAK,EAAE,aAHT;AAIEE,gBAAI,EAAE;AAJR,WApBkB,CAApB;AA4BA,eAAK/E,aAAL,CAAmBoF,gCAAnB,CAAoD,KAAKT,YAAzD,EAAuE,KAAKvE,iBAA5E;AACD;;;;;;;uBA5CUsE,uB,EAAuB,kJ;AAAA,K;;;YAAvBA,uB;AAAuB,uC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qC;AAAA;AAAA;ACXpC;;;;AAAc,qFAAa,QAAb,EAAa,gBAAb;;;;;;;;;sEDWDA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTH,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;gBAEjC;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaY,0B;;;AAaX,0CACUrF,aADV,EACsC;AAAA;;AAA5B,aAAAA,aAAA,GAAAA,aAAA;AAbF,aAAAE,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAEE,aAAAoF,oBAAA,GAAuB,IAAI,0DAAJ,EAAvB;AAGD,aAAAlF,iBAAA,GAAoB,IAApB;AAEA,aAAAE,UAAA,GAAa,KAAb;AAET,aAAAiF,qBAAA,GAAwB,IAAI,0DAAJ,EAAxB;AACA,aAAAzE,UAAA,GAAa,2DAAb;AAII;;;;mCAEO;AAET,eAAK6D,YAAL,GAAoB,CAClB;AACErE,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,eAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,cALR;AAMEC,gBAAI,EAAE,SANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WADkB,EAUlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,UAHT;AAIEC,qBAAS,EAAE,QAJb;AAKEC,gBAAI,EAAE,UALR;AAMEC,gBAAI,EAAE,YANR;AAOEQ,yBAAa,EAAE,KAAKD,qBAPtB;AAQEN,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AARf,WAVkB,EAoBlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,OAHT;AAIEC,qBAAS,EAAE,QAJb;AAKEC,gBAAI,EAAE,OALR;AAMEC,gBAAI,EAAE,OANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WApBkB,EA6BlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,UAFR;AAGEC,iBAAK,EAAE,aAHT;AAIEE,gBAAI,EAAE;AAJR,WA7BkB,CAApB;AAqCA,eAAK/E,aAAL,CAAmBoF,gCAAnB,CAAoD,KAAKT,YAAzD,EAAuE,KAAKvE,iBAA5E;AAEA,eAAKqF,4BAAL;AACD;;;uDAE8B;AAAA;;AAC7B,eAAKF,qBAAL,CACGrD,IADH,CACQ,iEAAU,KAAKhC,YAAf,CADR,EAEGiC,SAFH,CAEa,UAAAuD,GAAG,EAAI;AAChB,kBAAI,CAACJ,oBAAL,CAA0BrB,IAA1B,CAA+ByB,GAA/B;AACD,WAJH;AAKD;;;sCAEa;AACZ,eAAKxF,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBAxEUe,0B,EAA0B,kJ;AAAA,K;;;YAA1BA,0B;AAA0B,0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qC;AAAA;AAAA;ACbvC;;;;AAAc,qFAAa,QAAb,EAAa,gBAAb;;;;;;;;;sEDaDA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTd,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK4B,Q;;;;;;gBAGpC;;;gBAEA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AErBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC4BY;;AAA4F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1F;;AAAU;;AAAI;;AAChB;;;;;;;;AACA;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAc;;AAC1B;;;;;;;;AAdJ;;AACE;;AAAmB;;AAAkD;;AACrE;;AAAI;;AAA6B;;AACjC;;AAAI;;AAA+B;;AACnC;;AACE;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AAA0B;;AAAU;;AACtC;;AACA;;AAGA;;AAIF;;AACF;;;;;;;;;AAfqB;;AAAA;;AACf;;AAAA;;AACA;;AAAA;;AAKM;;AAAA;;AAGA;;AAAA;;;;;;;;AAqBR;;AAA4F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1F;;AAAU;;AAAI;;AAChB;;;;;;;;AACA;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAc;;AAC1B;;;;;;;;AAhBR;;AACE;;AACE;;AACE;;AACE;;AAAG;;AAAmD;;AACxD;;AACA;;AACE;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AAA0B;;AAAU;;AACtC;;AACA;;AAGA;;AAIF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AAAU;;AAAG;;AAAW;;AAC1B;;AACA;;AACE;;AACF;;AACF;;AACA;;AACA;;AACE;;AACE;;AAAU;;AAAU;;AAAW;;AACjC;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACF;;;;;;;;;AAxCQ;;AAAA,oFAAkB,QAAlB,EAAkB,KAAlB;;AAGG;;AAAA;;AAMK;;AAAA;;AAGA;;AAAA;;AAaN;;AAAA;;AASA;;AAAA;;;;;;AASZ;;;;QDvEWkB,kB;;;AAgCX,kCACU1F,YADV,EAEUF,cAFV,EAGSC,aAHT,EAIU4F,SAJV,EAIqC;AAAA;;AAH3B,aAAA3F,YAAA,GAAAA,YAAA;AACA,aAAAF,cAAA,GAAAA,cAAA;AACD,aAAAC,aAAA,GAAAA,aAAA;AACC,aAAA4F,SAAA,GAAAA,SAAA;AAlCF,aAAA1F,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAEE,aAAA2F,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AACA,aAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AACA,aAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAED,aAAAC,SAAA,GAAmB,EAAnB;AAGT,aAAApF,SAAA,GAAY,KAAZ;AAEA,aAAAqF,WAAA,GAAc,4DAAd;AACA,aAAAnF,UAAA,GAAa,2DAAb;AACA,aAAAoF,MAAA,GAAS,EAAT;AAGA,aAAAC,QAAA,GAAW,KAAX;AACO,aAAAC,eAAA,GAAkB,KAAlB;AAEP,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,MAAA,GAAS;AACPC,mBAAS,EAAE,KAAKzF,UAAL,CAAgBwF,MAAhB,CAAuBC,SAD3B;AAEPC,kBAAQ,EAAE,KAAK1F,UAAL,CAAgBwF,MAAhB,CAAuBE,QAF1B;AAGPjD,gBAAM,EAAE;AAHD,SAAT;AAKA,aAAAkD,UAAA,GAAa;AACXC,mBAAS,EAAG,qBADD;AAEXC,eAAK,EAAG;AAFG,SAAb;AAWE,aAAKP,eAAL,GAAuB,KAAKR,SAAL,CAAegB,mBAAf,CAAmC,CAAnC,EAAqC,CAArC,KAA2C,CAAlE;AACD;;;;mCAEU;AACT,eAAKC,OAAL;AACD;;;kCAEM;AAAA;;AAEL,eAAKjG,SAAL,GAAiB,IAAjB;AAEA,cAAIkG,YAAY,GAAG;AACjBC,4BAAgB,EAAG,KAAKV,YADP;AAEjBC,kBAAM,EAAG;AACP,2BAAa,KAAKA,MAAL,CAAYC,SADlB;AAEP,0BAAY,KAAKD,MAAL,CAAYE;AAFjB,aAFQ;AAMjBQ,mBAAO,EAAC;AACN,2BAAa,KAAKP,UAAL,CAAgBC,SADvB;AAEN,uBAAS,KAAKD,UAAL,CAAgBE;AAFnB;AANS,WAAnB;AAYA,eAAK1G,YAAL,CACCgH,YADD,CACcH,YADd,EAEC5E,IAFD,CAEM,iEAAU,KAAKhC,YAAf,CAFN,EAGCiC,SAHD,CAIE,UAACiB,MAAD,EAAiB;AACf,kBAAI,CAACxC,SAAL,GAAgB,KAAhB;AACA,kBAAI,CAACsF,MAAL,GAAc9C,MAAM,CAAC8D,IAArB;AACA,kBAAI,CAACZ,MAAL,CAAY/C,MAAZ,GAAqBH,MAAM,CAAC+D,KAA5B;AACD,WARH,EASE,UAAC3D,KAAD,EAAW;AACT,kBAAI,CAAC5C,SAAL,GAAgB,KAAhB;AACA6C,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,WAZH;AAcD;;;oCAEW9B,E,EAAE;AACZ,eAAKmE,eAAL,CAAqB5B,IAArB,CAA0BvC,EAA1B;AACD;;;oCAEWA,E,EAAE;AACZ,eAAKoE,eAAL,CAAqB7B,IAArB,CAA0BvC,EAA1B;AACD;;;sCAEaA,E,EAAE;AACd,eAAKqE,iBAAL,CAAuB9B,IAAvB,CAA4BvC,EAA5B;AACD;;;kDAEsB;AACrB,eAAKyE,QAAL,GAAgB,KAAhB;AACD;;;oCAEWiB,I,EAAU;AACpB,eAAKd,MAAL,CAAYC,SAAZ,GAAwB,CAAxB;AACA,eAAKE,UAAL,CAAgBC,SAAhB,GAA4BU,IAAI,CAACC,MAAjC;AACA,eAAKZ,UAAL,CAAgBE,KAAhB,GAAwBS,IAAI,CAACE,SAAL,KAAmB,KAA3C;AACA,eAAKT,OAAL;AACA,eAAK9G,cAAL,CAAoBqE,aAApB;AACD;;;sCAEamD,S,EAAoB;AAChC,eAAKjB,MAAL,CAAYC,SAAZ,GAAwBgB,SAAS,CAAChB,SAAlC;AACA,eAAKD,MAAL,CAAYE,QAAZ,GAAuBe,SAAS,CAACf,QAAjC;AACA,eAAKK,OAAL;AACA,eAAK9G,cAAL,CAAoBqE,aAApB;AACD;;;sCAEa;AACZ,eAAKlE,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBA/GUqB,kB,EAAkB,qI,EAAA,gI,EAAA,kJ,EAAA,oJ;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,izC;AAAA;AAAA;ACf/B;;AACE;AAAA,mBAAW,IAAAkB,OAAA,EAAX;AAAoB,WAApB;;AACA;;AACE;;AAA6B;AAAA,mBAAiB,IAAAW,WAAA,QAAjB;AAAoC,WAApC;;AAC3B;;AACE;;AACE;;AAAe;;AAAC;;AAChB;;AACE;;AACA;;AAAU;;AAAG;;AACf;;AACA;;AACE;;AACA;;AAAU;;AAAU;;AACtB;;AACA;;AAEF;;AACF;;AACA;;AACE;;AAiBF;;AACF;;AACF;;AAEA;;AACE;;AA0CF;;AAEA;;AAEA;;AACqF;AAAA,mBAAQ,IAAAC,aAAA,QAAR;AAA6B,WAA7B;;AACrF;;AAEF;;;;AA5FM,6FAAqB,OAArB,EAAqB,YAArB,EAAqB,UAArB,EAAqB,iCAArB;;AAoBiB;;AAAA;;AAsBL;;AAAA;;AA4CC;;AAAA;;AAEF;;AAAA,gGAAwB,sBAAxB,EAAwB,0CAAxB,EAAwB,UAAxB,EAAwB,mBAAxB,EAAwB,iBAAxB,EAAwB,qCAAxB;;;;;;;;;sEDzEJ9B,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTpB,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;gBAI5B;;;gBACA;;;gBACA;;;gBAEA;;;gBACA;;;;;;;;;;;;;;;;;;;;AExBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACEI;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAE5D;;AAAU;;AAAG;;AAAY;;AAC3B;;;;;;;;AAgBA;;AAAgE;AAAA;;AAAA;;AAAA;AAAA;;AAE9D;;AAAU;;AAAe;;AAAY;;AACvC;;;;;;;;AAKJ;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;;;;;AADe,+FAAmB,YAAnB,EAAmB,sBAAnB;;;;;;;;AAMvD;;AACgB;AAAA;;AAAA;;AAAA;AAAA;;AACd;;AAAU;;AAAc;;AAAY;;AACtC;;;;QDrBWiD,wB;;;AAqCX,wCACU5H,EADV,EAEUE,aAFV,EAGUC,YAHV,EAIU2F,SAJV,EAIqC;AAAA;;AAH3B,aAAA9F,EAAA,GAAAA,EAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAA2F,SAAA,GAAAA,SAAA;AAvCF,aAAA1F,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAKR,aAAAyH,YAAA,GAAe,KAAf;AACA,aAAAC,iBAAA,GAAoB,KAApB;AACA,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACO,aAAA1B,eAAA,GAAkB,KAAlB;AAEP,aAAAxF,SAAA,GAAY,KAAZ;AACA,aAAAmH,EAAA,GAAK,IAAL;AACA,aAAAjH,UAAA,GAAa,2DAAb;AAGA,aAAAkH,YAAA,GAA8B,CAC5B;AACE1H,oBAAU,EAAE,KADd;AAEEsE,cAAI,EAAE,OAFR;AAGEC,eAAK,EAAE,YAHT;AAIEC,mBAAS,EAAE,MAJb;AAKEC,cAAI,EAAE,WALR;AAMEC,cAAI,EAAE;AANR,SAD4B,EAS5B;AACE1E,oBAAU,EAAE,KADd;AAEEsE,cAAI,EAAE,OAFR;AAGEC,eAAK,EAAE,cAHT;AAIEC,mBAAS,EAAE,QAJb;AAKEC,cAAI,EAAE,aALR;AAMEC,cAAI,EAAE;AANR,SAT4B,CAA9B;AAyBE,aAAKiD,UAAL,GAAkB,KAAKnI,EAAL,CAAQoB,KAAR,CAAc,EAAd,CAAlB;AACA,aAAKkF,eAAL,GAAuB,KAAKR,SAAL,CAAegB,mBAAf,CAAmC,CAAnC,EAAqC,CAArC,MAA4C,CAAnE;AACD;;;;mCAEU,CACV;;;wCAEe;AACd,eAAKsB,SAAL,CAAe7B,YAAf,GAA8B,KAAK4B,UAAL,CAAgBlF,KAA9C;AACA,eAAKmF,SAAL,CAAe5B,MAAf,CAAsBC,SAAtB,GAAkC,CAAlC;;AACA,eAAK2B,SAAL,CAAerB,OAAf;;AACA,eAAKsB,UAAL,CAAgBC,IAAhB;AACD;;;sCAEa;AACZ,eAAKL,EAAL,GAAU,IAAV;AACA,eAAKH,iBAAL,GAAyB,IAAzB;AACA,eAAKD,YAAL,GAAoB,KAAKE,YAAL,GAAoB,KAAxC;AACD;;;0CACiB;AAChB,eAAKA,YAAL,GAAoB,IAApB;AACA,eAAKF,YAAL,GAAoB,KAAKC,iBAAL,GAAyB,KAA7C;AACD;;;sCAEapF,K,EAAO;AACnB,eAAK6F,eAAL;;AACA,cAAI,KAAKH,SAAT,EAAoB;AAClB,iBAAKA,SAAL,CAAerB,OAAf;AACD;AACF;;;wCAEerE,K,EAAO;AACrB,eAAKuF,EAAL,GAAUvF,KAAV;AACA,eAAKmF,YAAL,GAAoB,IAApB;AACA,eAAKG,gBAAL,GAAwB,KAAKD,YAAL,GAAoB,KAAKD,iBAAL,GAAyB,KAArE;AACD;;;wCAEepF,K,EAAO;AACrB,eAAKoF,iBAAL,GAAyB,IAAzB;AACA,eAAKG,EAAL,GAAUvF,KAAV;AACA,eAAKsF,gBAAL,GAAwB,KAAKH,YAAL,GAAoB,KAAKE,YAAL,GAAoB,KAAhE;AACD;;;0CAEiBrF,K,EAAO;AACvB,eAAKqD,eAAL,CAAqBrD,KAArB;AACA,eAAKsF,gBAAL,GAAwB,IAAxB;AACD;;;iDAEqB;AAAA;;AACpB,cAAI/F,SAAS,GAAG,KAAK/B,aAAL,CAAmBgC,iBAAnB,CAAqC,kCAArC,CAAhB;AAEAD,mBAAS,CAACE,WAAV,GACGC,IADH,CACQ,iEAAU,KAAKhC,YAAf,CADR,EAEGiC,SAFH,CAGI,UAACC,SAAD,EAAwB;AACtB,gBAAIA,SAAJ,EAAe;AAEb,oBAAI,CAACxB,SAAL,GAAiB,IAAjB;;AAEA,oBAAI,CAACX,YAAL,CAAkBqI,WAAlB,CAA8B,MAAI,CAACP,EAAnC,EACG7F,IADH,CACQ,iEAAU,MAAI,CAAChC,YAAf,CADR,EAEGiC,SAFH,CAGI,UAACiB,MAAD,EAAY;AACV,sBAAI,CAACiF,eAAL;;AACA,sBAAI,CAACH,SAAL,CAAerB,OAAf;;AACA,sBAAI,CAACjG,SAAL,GAAiB,KAAjB;AACD,eAPL,EAQI,UAAC4C,KAAD,EAAW;AACT,sBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACD,eAVL;AAYD;AACF,WArBL,EAsBI,UAAC4C,KAAD,EAAW;AACT,kBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACD,WAxBL;AA0BD;;;sCAEa;AACZ,eAAKV,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBA7HUoD,wB,EAAwB,2H,EAAA,kJ,EAAA,qI,EAAA,oJ;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA;AAAA;oEAIxB,mF,EAAkB,I;;;;;;;;;;;;;;;;;ACrB/B;;AACE;;AACE;;AAIF;;AACA;;AACE;;AACE;;AACE;;AAA+B;AAAA,mBAAY,IAAAa,aAAA,EAAZ;AAA2B,WAA3B;;AAC7B;;AACA;;AAAwD;AAAA,mBAAW,IAAAA,aAAA,EAAX;AAA0B,WAA1B;;AAA4B;;AACtF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAIF;;AACF;;AACA;;AAAI;;AAEJ;;AAEA;;AAAyC;AAAA,mBAAmB,IAAA1C,eAAA,QAAnB;AAA0C,WAA1C,EAA2C,iBAA3C,EAA2C;AAAA,mBAC/D,IAAAC,eAAA,QAD+D;AACxC,WADH,EAA2C,mBAA3C,EAA2C;AAAA,mBACjB,IAAAC,iBAAA,QADiB;AACQ,WADnD;;AACqD;;AAE9F;;AACE;;AAIF;;;;AArC0B;;AAAA;;AAMT;;AAAA,2FAAmB,QAAnB,EAAmB,iBAAnB,EAAmB,OAAnB,EAAmB,cAAnB;;AACL;;AAAA;;AACE;;AAAA;;AACU;;AAAA,2FAAmB,QAAnB,EAAmB,gBAAnB;;AACA;;AAAA,2FAAmB,cAAnB,EAAmB,IAAnB;;AASE;;AAAA;;AAQX;;AAAA;;AAEC;;AAAA;;AAIQ;;AAAA;;;;;;;;;sEDlBX2B,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTnD,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;gBAIlC,uD;iBAAU,mF;;;gBACV,uD;iBAAU,Y;;;;;;;;;;;;;;;;;;;;AEtBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+D,Y;;;AAIT,4BACYC,KADZ,EAEYC,eAFZ,EAGYC,cAHZ,EAGyC;AAAA;;AAF7B,aAAAF,KAAA,GAAAA,KAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AALZ,aAAAC,SAAA,GAAY,YAAZ;AAOC;;;;kCAESC,S,EAAsB;AAAA,cAAXnH,EAAW,uEAAN,IAAM;AAC5B,iBAAO,KAAK+G,KAAL,CAAWK,IAAX,CAAgB,6DAAYC,MAAZ,GAAqB,KAAKH,SAA1B,GAAsC,WAAtD,EAAmEC,SAAnE,CAAP;AACH;;;iCAEQnH,E,EAAI;AACT,iBAAO,KAAK+G,KAAL,CAAW7G,GAAX,CAAe,6DAAYmH,MAAZ,GAAqB,KAAKH,SAA1B,GAAsC,cAAtC,GAAuD,KAAKD,cAAL,CAAoBK,sBAApB,CAA2CtH,EAA3C,CAAtE,CAAP;AACH;;;qCAEY2E,Y,EAAc;AACvB,iBAAO,KAAKoC,KAAL,CAAWK,IAAX,CAAgB,6DAAYC,MAAZ,GAAqB,KAAKH,SAA1B,GAAsC,cAAtD,EAAsEvC,YAAtE,CAAP;AACH;;;oCAEW3E,E,EAAI;AACZ,iBAAO,KAAK+G,KAAL,CAAW7G,GAAX,CAAe,6DAAYmH,MAAZ,GAAqB,KAAKH,SAA1B,GAAsC,iBAAtC,GAA0D,KAAKD,cAAL,CAAoBK,sBAApB,CAA2CtH,EAA3C,CAAzE,CAAP;AACH;;;;;;;uBAzBQ8G,Y,EAAY,uH,EAAA,2I,EAAA,yI;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaS,gB,GAIT,0BACYR,KADZ,EAEYC,eAFZ,EAGYC,cAHZ,EAGyC;AAAA;;AAF7B,WAAAF,KAAA,GAAAA,KAAA;AACA,WAAAC,eAAA,GAAAA,eAAA;AACA,WAAAC,cAAA,GAAAA,cAAA;AALZ,WAAAC,SAAA,GAAY,gBAAZ;AAOC,K;;;uBATQK,gB,EAAgB,uH,EAAA,2I,EAAA,yI;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,c;;;AAIT,8BACYT,KADZ,EAEYC,eAFZ,EAGYC,cAHZ,EAGyC;AAAA;;AAF7B,aAAAF,KAAA,GAAAA,KAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AALZ,aAAAC,SAAA,GAAY,cAAZ;AAOC;;;;oCAEWO,W,EAAwB;AAAA,cAAXzH,EAAW,uEAAN,IAAM;AAChC,iBAAO,KAAK+G,KAAL,CAAWK,IAAX,CAAgB,6DAAYC,MAAZ,GAAqB,KAAKH,SAA1B,GAAsC,aAAtD,EAAqEO,WAArE,CAAP;AACH;;;mCAEUzH,E,EAAI;AACX,iBAAO,KAAK+G,KAAL,CAAW7G,GAAX,CAAe,6DAAYmH,MAAZ,GAAqB,KAAKH,SAA1B,GAAsC,gBAAtC,GAAyD,KAAKD,cAAL,CAAoBK,sBAApB,CAA2CtH,EAA3C,CAAxE,CAAP;AACH;;;uCAEe2E,Y,EAAY;AACxB,iBAAO,KAAKoC,KAAL,CAAWK,IAAX,CAAgB,6DAAYC,MAAZ,GAAoB,KAAKH,SAAzB,GAAqC,gBAArD,EAAuEvC,YAAvE,CAAP;AACD;;;sCAEW3E,E,EAAI;AACd,iBAAO,KAAK+G,KAAL,CAAW7G,GAAX,CAAe,6DAAYmH,MAAZ,GAAqB,KAAKH,SAA1B,GAAsC,mBAAtC,GAA4D,KAAKD,cAAL,CAAoBK,sBAApB,CAA2CtH,EAA3C,CAA3E,CAAP;AACH;;;;;;;uBAzBQwH,c,EAAc,uH,EAAA,2I,EAAA,yI;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMhD,MAAM,GAAW,CACrB;AACEkD,UAAI,EAAE,aADR;AAEEC,eAAS,EAAE,mHAFb;AAGEC,YAAM,EAAC;AAHT,KADqB,EAMrB;AACEF,UAAI,EAAE,WADR;AAEEC,eAAS,EAAE,4GAFb;AAGEC,YAAM,EAAC;AAHT,KANqB,CAAvB;;QAiBaC,sB;;;;;YAAAA;;;;yBAAAA,sB;AAAsB,O;AAAA,gBAHxB,CAAC,6DAAaC,QAAb,CAAsBtD,MAAtB,CAAD,CAGwB,EAFvB,4DAEuB;;;;0HAAtBqD,sB,EAAsB;AAAA;AAAA,kBAFvB,4DAEuB;AAAA,O;AAFX,K;;;;;sEAEXA,sB,EAAsB;cAJlC,sDAIkC;eAJzB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBtD,MAAtB,CAAD,CADD;AAERwD,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIyB,Q;;;;;;;;;;;;;;;;;;ACtBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmCaC,e;;;;;YAAAA;;;;yBAAAA,e;AAAe,O;AAAA,iBANhB,CACR,4EADQ,EAER,wEAFQ,EAGR,qEAHQ,C;AAIT,gBATQ,CACP,4DADO,EAEP,gFAFO,EAGP,sEAHO,CASR;;;;0HAEUA,e,EAAe;AAAA,uBAdX,mHAcW,EAdiB,8FAcjB,EAdsC,iGActC,EAd4D,8HAc5D,EAbvB,iJAauB,EAbU,wFAaV,EAb6B,2FAa7B,EAbiD,6GAajD,EAZvB,sHAYuB,EAZE,+HAYF,EAZ8B,+HAY9B;AAZuD,kBAE/E,4DAF+E,EAG/E,gFAH+E,EAI/E,sEAJ+E;AAYvD,O;AARZ,K;;;;;sEAQHA,e,EAAe;cAf3B,sDAe2B;eAflB;AACRC,sBAAY,EAAE,CAAC,mHAAD,EAA6B,8FAA7B,EAAkD,iGAAlD,EAAwE,8HAAxE,EACX,iJADW,EACsB,wFADtB,EACyC,2FADzC,EAC6D,6GAD7D,EAEX,sHAFW,EAEc,+HAFd,EAE0C,+HAF1C,CADN;AAIRH,iBAAO,EAAE,CACP,4DADO,EAEP,gFAFO,EAGP,sEAHO,CAJD;AASRI,mBAAS,EAAC,CACR,4EADQ,EAER,wEAFQ,EAGR,qEAHQ;AATF,S;AAekB,Q;;;;;;;;;;;;;;;;;;ACnqC,oFAAkB,OAAlB,EAAkB,uBAAlB;;AAEb;;AAAA,mHAAuC,YAAvC,EAAuC,oBAAvC,EAAuC,mBAAvC,EAAuC,oEAAvC;;AAIC;;AAAA,6FAAiB,YAAjB,EAAiB,oBAAjB,EAAiB,mBAAjB,EAAiB,2BAAjB;;;;;;;;AAgBb;;AACQ;;AAA8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6D;;AAAc;;AACjH;;;;;;AAXJ;;AAEI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AAGA;;AAGJ;;;;;;;;;AAXuB;;AAAA,4FAAoB,OAApB,EAAoB,wBAApB;;AACP;;AAAA;;AAII;;AAAA;;AAGU;;AAAA,4FAAoB,YAApB,EAAoB,oBAApB,EAAoB,mBAApB,EAAoB,qLAApB;;;;;;AAKlC;;;;;;;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAoB;;AAAG;;AACvB;;AAAoB;;AAAK;;AAC7B;;AACJ;;;;;;AA1BR;;AACQ;;AACI;;AAgBJ;;AACA;;AACA;;AAOJ;;;;;;AA3BqC,kFAAgB,OAAhB,EAAgB,6BAAhB;;AACA;;AAAA;;AAEzB;;AAAA;;AAgBS;;AAAA;;AACH;;AAAA;;;;;;AArB9B;;AACQ;;AA4BR;;;;;;AA5BqB;;AAAA;;;;;;AA+BjC;;;;;;AAAkC,6FAAiB,cAAjB,EAAiB,sBAAjB;;;;QD/B7BC,mB;;;AAoBX,mCACShK,EADT,EAEUC,cAFV,EAGSC,aAHT,EAIS+J,cAJT,EAKUnE,SALV,EAKqC;AAAA;;AAJ5B,aAAA9F,EAAA,GAAAA,EAAA;AACC,aAAAC,cAAA,GAAAA,cAAA;AACD,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAA+J,cAAA,GAAAA,cAAA;AACC,aAAAnE,SAAA,GAAAA,SAAA;AAxBF,aAAA1F,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAES,aAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACR,aAAAC,iBAAA,GAAoB,IAApB;AACA,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,UAAA,GAAa,KAAb;AAET,aAAAG,QAAA,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AAEA,aAAAC,KAAA,GAAQ,aAAR;AACA,aAAAC,QAAA,GAAW,mBAAX;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,kBAAA,GAAqB,KAArB;AACA,aAAAC,UAAA,GAAa,2DAAb;AACA,aAAAC,IAAA,GAAO,KAAP;AAEA,aAAAiJ,gBAAA,GAA2B,CAA3B;AAUI,aAAKC,gBAAL,GAAwB,KAAKrE,SAAL,CAAegB,mBAAf,CAAmC,CAAnC,EAAqC,CAArC,CAAxB;AACH;;;;mCAEU;AAET,eAAK3F,gBAAL;AAEA,eAAKR,QAAL,GAAgB,KAAKX,EAAL,CAAQoB,KAAR,CACd;AACEC,qBAAS,EAAE,KAAKrB,EAAL,CAAQoB,KAAR,CAAc,EAAd,CADb;AAEEgJ,uBAAW,EAAE,KAAKpK,EAAL,CAAQuB,KAAR,CAAc,EAAd;AAFf,WADc,CAAhB;AAOA,eAAKrB,aAAL,CAAmBsB,mBAAnB,CAAuC,KAAKb,QAA5C;;AAEA,cAAI,KAAKJ,YAAT,EAAuB;AACrB,iBAAKkB,cAAL;AACD;AACF;;;2CAEe;AACd,cAAI,KAAKlB,YAAT,EAAuB;AACrB,iBAAKK,KAAL,GAAa,iBAAb;AACA,iBAAKC,QAAL,GAAgB,6CAAhB;;AAEA,gBAAI,KAAKL,UAAT,EAAqB;AACnB,mBAAKI,KAAL,GAAa,eAAb;AACA,mBAAKC,QAAL,GAAgB,oCAAhB;AACD;AACF;AACF;;;gDAEuB;AAEtB,eAAKwJ,cAAL;AACA,eAAKpJ,IAAL,GAAY,IAAZ,CAHsB,CAGL;;AACjB,eAAKf,aAAL,CAAmByB,aAAnB,CAAiC,sBAAjC;AACD;;;yCACwC;AAAA,cAA1BC,EAA0B,uEAArB,IAAqB;AAAA,cAAfC,MAAe,uEAAN,IAAM;AAEvC,eAAKqI,gBAAL,GAAwB,KAAKA,gBAAL,GAAwB,CAAhD;AACc,eAAKvJ,QAAL,CAAcmB,GAAd,CAAkB,aAAlB,EACXC,IADW,CAER,KAAK7B,aAAL,CAAmBsB,mBAAnB,CACE,KAAKxB,EAAL,CAAQoB,KAAR,CAAc,EAAd,CADF,EAEEQ,EAFF,EAEMC,MAFN,CAFQ;AAOf;;;iDAEwBG,G,EAAK;AAAA;;AAC5B,cAAIC,SAAS,GAAG,KAAK/B,aAAL,CAAmBgC,iBAAnB,EAAhB;AAEAD,mBAAS,CAACE,WAAV,GACCC,IADD,CACM,iEAAU,KAAKhC,YAAf,CADN,EAECiC,SAFD,CAEW,UAACC,SAAD,EAAwB;AACjC,gBAAIA,SAAJ,EAAe;AACb,oBAAI,CAACgI,iBAAL,CAAuBtI,GAAvB;;AACA,oBAAI,CAAC9B,aAAL,CAAmBsC,eAAnB,CAAmC,aAAnC;AACD;AACF,WAPD;AAQD;;;0CACiBR,G,EAAK;AACT,eAAKrB,QAAL,CAAcmB,GAAd,CAAkB,aAAlB,EACTW,QADS,CACAT,GADA;AAEZ,eAAKkI,gBAAL;AACD;;;yCAEgB;AAAA;;AACf;AAEA,eAAKpJ,SAAL,GAAiB,IAAjB;AACA,eAAKC,kBAAL,GAA0B,IAA1B;AAEA,eAAKkJ,cAAL,CAAoBM,UAApB,CAA+B,KAAKhK,YAApC,EACG6B,IADH,CACQ,iEAAU,KAAKhC,YAAf,CADR,EAEGiC,SAFH,CAGI,UAACiB,MAAD,EAAiB;AACfA,kBAAM,CAACR,OAAP,CAAe,UAAAS,OAAO,EAAI;AACxB,oBAAI,CAACjD,iBAAL,GAAyBiD,OAAzB;;AACA,oBAAI,CAAC5C,QAAL,CAAcmB,GAAd,CAAkB,KAAlB,EAAyBsB,QAAzB,CAAkC,MAAI,CAAC9C,iBAAL,CAAuBkD,GAAzD;;AACA,oBAAI,CAAC7C,QAAL,CAAcmB,GAAd,CAAkB,QAAlB,EAA4BsB,QAA5B,CAAqC,MAAI,CAAC9C,iBAAL,CAAuBuB,MAA5D,EAHwB,CAKxB;;;AACA,mBAAI,IAAIG,GAAG,GAAC,CAAZ,EAAeA,GAAG,GAAmBuB,OAAO,CAAC,aAAD,CAAP,CAAwBE,MAA7D,EAAqEzB,GAAG,EAAxE,EAA2E;AACzE,oBAAIJ,EAAE,GAAoB2B,OAAO,CAAC,aAAD,CAAP,CAAwBvB,GAAxB,CAAjB,CAA+C,KAA/C,CAAT;AACA,oBAAIH,MAAM,GAAoB0B,OAAO,CAAC,aAAD,CAAP,CAAwBvB,GAAxB,CAAjB,CAA+C,QAA/C,CAAb;;AACA,sBAAI,CAACqI,cAAL,CAAoBzI,EAApB,EAAwBC,MAAxB;AACD;AAEF,aAZD;AAcA,kBAAI,CAACf,SAAL,GAAiB,KAAjB;AACA,kBAAI,CAACC,kBAAL,GAA0B,KAA1B;AACD,WApBL,EAqBI,UAAC2C,KAAD,EAAW;AACT,kBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACA,kBAAI,CAACC,kBAAL,GAA0B,KAA1B;AACA4C,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,WAzBL;AA2BD;;;iCAEQhB,K,EAAc;AAAA;;AAErB,eAAK/B,QAAL,CAAckD,gBAAd;AACAnB,eAAK,CAACoB,cAAN;AACApB,eAAK,CAACqB,eAAN;;AAEA,cAAI,KAAKpD,QAAL,CAAcqD,KAAlB,EAAyB;AACvB,iBAAKlD,SAAL,GAAiB,IAAjB;AAEA,iBAAKmJ,cAAL,CAAoBO,WAApB,CACE,KAAK7J,QAAL,CAAcsC,KADhB,EAEE,KAAK1C,YAFP,EAIG6B,IAJH,CAIQ,iEAAU,KAAKhC,YAAf,CAJR,EAKGiC,SALH,CAMI,UAACiB,MAAD,EAAiB;AACf,oBAAI,CAACxC,SAAL,GAAiB,KAAjB;;AACA,oBAAI,CAACT,aAAL,CAAmB8D,IAAnB,CAAwB,IAAxB;;AACA,oBAAI,CAACjE,aAAL,CAAmBkE,YAAnB,CAAgC,2CAAhC,EAA6E,GAA7E,EAAkF,SAAlF;;AACA,oBAAI,CAACzD,QAAL,CAAc0D,KAAd;AACD,aAXL,EAYI,UAACX,KAAD,EAAW;AACT,oBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACA6C,qBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAfL;AAiBD,WApBD,MAoBO;AACL,iBAAKxD,aAAL,CAAmBkE,YAAnB,CAAgC,qDAAhC,EAAuF,GAAvF,EAA4F,MAA5F;AACD;AACF;;;6CAEoB;AACnB,eAAKnE,cAAL,CAAoBqE,aAApB;AACD;;;sCAEa;AACZ,eAAKlE,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBAzKUwF,mB,EAAmB,2H,EAAA,gI,EAAA,kJ,EAAA,yI,EAAA,oJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,spB;AAAA;AAAA;ACfhC;;AACI;;AAA6B;AAAA,mBAAY,IAAAS,QAAA,QAAZ;AAA4B,WAA5B;;AACrB;;AACQ;;AACQ;;AASR;;AACA;;AA8BJ;;AAER;;AACJ;;AACJ;;;;AAhDM,6FAAqB,OAArB,EAAqB,SAArB,EAAqB,UAArB,EAAqB,YAArB,EAAqB,aAArB,EAAqB,KAArB;;AACI;;AAAA;;AAG+B;;AAAA;;AAUT;;AAAA;;AAgCV;;AAAA;;;;;;;;;;sED/BTT,mB,EAAmB;cAN/B,uDAM+B;eANrB;AACTvF,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD,CAHF;AAIT+F,uBAAa,EAAE,gEAAkBC;AAJxB,S;AAMqB,Q;;;;;;;;;;;;;;gBAG7B;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AErBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,yB;;;AASX,yCACU1K,aADV,EACsC;AAAA;;AAA5B,aAAAA,aAAA,GAAAA,aAAA;AAPD,aAAAI,iBAAA,GAAoB,IAApB;AAEA,aAAAE,UAAA,GAAa,KAAb;AAET,aAAAQ,UAAA,GAAa,2DAAb;AAII;;;;mCAEO;AAET,eAAK6D,YAAL,GAAoB,CAClB;AACErE,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,cAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,aALR;AAMEC,gBAAI,EAAE,sBANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WADkB,EAUlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,YAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,WALR;AAMEC,gBAAI,EAAE,iBANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WAVkB,EAmBlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,iBAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,gBALR;AAMEC,gBAAI,EAAE,gBANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WAnBkB,EA4BlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,MAFR;AAGEC,iBAAK,EAAE,mBAHT;AAIEE,gBAAI,EAAE;AAJR,WA5BkB,EAkClB;AACEzE,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,eAHT;AAIEC,qBAAS,EAAE,QAJb;AAKEC,gBAAI,EAAE,cALR;AAMEC,gBAAI,EAAE,6BANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WAlCkB,EA2ClB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,aAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,YALR;AAMEC,gBAAI,EAAE,gBANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WA3CkB,EAoDlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,QAFR;AAGEC,iBAAK,EAAE,cAHT;AAIEE,gBAAI,EAAE,eAJR;AAKEC,gBAAI,EAAE,SALR;AAME2F,mBAAO,EAAE,KAAK7J,UAAL,CAAgB8J,YAN3B;AAOE3F,uBAAW,EAAC,CAAC,kGAAeC,QAAf,EAAD;AAPd,WApDkB,EA6DlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,QAFR;AAGEC,iBAAK,EAAE,WAHT;AAIEE,gBAAI,EAAE,YAJR;AAKEC,gBAAI,EAAE,mBALR;AAME2F,mBAAO,EAAE,KAAK7J,UAAL,CAAgB+J,SAN3B;AAOE5F,uBAAW,EAAC,CAAC,kGAAeC,QAAf,EAAD;AAPd,WA7DkB,EAsElB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,cAFR;AAGEC,iBAAK,EAAE,YAHT;AAIEE,gBAAI,EAAE,UAJR;AAKEhC,iBAAK,EAAE;AALT,WAtEkB,EA6ElB;AACEzC,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,cAFR;AAGEC,iBAAK,EAAE,oBAHT;AAIEE,gBAAI,EAAE,iBAJR;AAKEhC,iBAAK,EAAE;AALT,WA7EkB,CAApB;AAsFA,eAAK/C,aAAL,CAAmBoF,gCAAnB,CAAoD,KAAKT,YAAzD,EAAuE,KAAKvE,iBAA5E;AACD;;;;;;;uBAtGUsK,yB,EAAyB,kJ;AAAA,K;;;YAAzBA,yB;AAAyB,yC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qC;AAAA;AAAA;ACXtC;;;;AAAc,qFAAa,QAAb,EAAa,gBAAb;;;;;;;;;sEDWDA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTnG,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;;gBAEnC;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaqG,+B;;;AASX,+CACU9K,aADV,EACsC;AAAA;;AAA5B,aAAAA,aAAA,GAAAA,aAAA;AAPD,aAAAI,iBAAA,GAAoB,IAApB;AAEA,aAAAE,UAAA,GAAa,KAAb;AAET,aAAAQ,UAAA,GAAa,2DAAb;AAII;;;;mCAEO;AAET,eAAK6D,YAAL,GAAoB,CAClB;AACErE,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,kBAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE,iBALR;AAMEC,gBAAI,EAAE,gBANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WADkB,EAUlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE,MAHT;AAIEC,qBAAS,EAAE,QAJb;AAKEC,gBAAI,EAAE,iBALR;AAMEC,gBAAI,EAAE,OANR;AAOEC,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AAPf,WAVkB,EAmBlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,MAFR;AAGEC,iBAAK,EAAE,MAHT;AAIEE,gBAAI,EAAE,iBAJR;AAKEE,uBAAW,EAAE,CAAC,kGAAeC,QAAf,EAAD;AALf,WAnBkB,EA0BlB;AACE5E,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,cAFR;AAGEC,iBAAK,EAAE,aAHT;AAIEE,gBAAI,EAAE,YAJR;AAKEhC,iBAAK,EAAE;AALT,WA1BkB,EAiClB;AACEzC,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,UAFR;AAGEC,iBAAK,EAAE,aAHT;AAIEC,qBAAS,EAAE,MAJb;AAKEC,gBAAI,EAAE;AALR,WAjCkB,CAApB;AA0CA,eAAK/E,aAAL,CAAmBoF,gCAAnB,CAAoD,KAAKT,YAAzD,EAAuE,KAAKvE,iBAA5E;AACD;;;;;;;uBA1DU0K,+B,EAA+B,kJ;AAAA,K;;;YAA/BA,+B;AAA+B,+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qC;AAAA;AAAA;ACX5C;;;;AAAc,qFAAa,QAAb,EAAa,gBAAb;;;;;;;;;sEDWDA,+B,EAA+B;cAL3C,uDAK2C;eALjC;AACTvG,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,2CAFJ;AAGTC,mBAAS,EAAE,CAAC,0CAAD;AAHF,S;AAKiC,Q;;;;;;gBAEzC;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCA;;;;;;AAAwC,yFAAa,QAAb,EAAa,sBAAb,EAAa,aAAb,EAAa,KAAb;;;;;;;;AAGtC;;AACA;AAAA;;AAAA;;AAAA,8CAA4B,IAA5B;AAAgC,SAAhC;;AADA;;;;;;;;AAMF;;AACqE;AAAA;;AAAA;;AAAA,8CAAoC,KAApC;AAAyC,SAAzC;;AAEnE;;AACF;;;;;;AAJM,mGAAiC,UAAjC,EAAiC,gDAAjC,EAAiC,eAAjC,EAAiC,KAAjC,EAAiC,eAAjC,EAAiC,KAAjC,EAAiC,WAAjC,EAAiC,IAAjC;;AAGW;;AAAA,sHAA+C,YAA/C,EAA+C,KAA/C,EAA+C,WAA/C,EAA+C,IAA/C,EAA+C,YAA/C,EAA+C,IAA/C;;;;QDCJsG,yB;;;AAkBX,yCACU/K,aADV,EAEUgL,IAFV,EAE0B;AAAA;;AADhB,aAAAhL,aAAA,GAAAA,aAAA;AACA,aAAAgL,IAAA,GAAAA,IAAA;AAnBF,aAAA9K,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAKC,aAAAE,iBAAA,GAAoB,IAApB;AACA,aAAAE,UAAA,GAAa,KAAb;AACA,aAAA2K,UAAA,GAAa,KAAb;AAET,aAAAxH,OAAA,GAAUA,OAAV;AACA,aAAA7C,SAAA,GAAY,KAAZ;AACA,aAAAE,UAAA,GAAa,2DAAb;AAEA,aAAAoK,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAC,YAAA,GAAe,IAAf;AAMC;;;;mCAEU;AAET,eAAKzG,YAAL,GAAoB,CAClB;AACErE,sBAAU,EAAE,KAAKA,UADnB;AAEEsE,gBAAI,EAAE,QAFR;AAGEC,iBAAK,EAAE,OAHT;AAIEE,gBAAI,EAAE,SAJR;AAKEC,gBAAI,EAAE,KALR;AAMEjC,iBAAK,EAAE,KAAK3C,iBAAL,GAAwB,KAAKA,iBAAL,CAAuBiL,OAA/C,GAAyD,IANlE;AAOE7F,yBAAa,EAAE,KAAK0F,aAPtB;AAQEjG,uBAAW,EAAE,KAAKgG,UAAL,GAAkB,CAAC,kGAAe/F,QAAf,EAAD,CAAlB,GAAgD;AAR/D,WADkB,CAApB;AAaA,eAAKO,4BAAL;AAEA,eAAK6F,aAAL;AACD;;;uDAE8B;AAC7B,eAAKJ,aAAL,CACGhJ,IADH,CACQ,iEAAU,KAAKhC,YAAf,CADR,EAEGiC,SAFH,CAEa,UAAAuD,GAAG,EAAI,CACjB;AACA,WAJH;AAKD;;;wCAEe;AAAA;;AACd,eAAK9E,SAAL,GAAiB,IAAjB;AACA,eAAK+D,YAAL,CAAkB,CAAlB,EAAqBgG,OAArB,GAA+B,EAA/B,CAFc,CAEqB;;AAEnC,eAAKK,IAAL,CAAUpJ,GAAV,CAAc,6DAAYmH,MAAZ,GAAqB,YAArB,GAAoC,aAAlD,EACC7G,IADD,CACM,iEAAU,KAAKhC,YAAf,CADN,EAEGiC,SAFH,CAEa,UAAAuD,GAAG,EAAI;AAChB,mBAAI,CAACf,YAAL,CAAkB,CAAlB,EAAqBgG,OAArB,GAA+BjF,GAA/B;AACA,mBAAI,CAAC9E,SAAL,GAAiB,KAAjB;AACD,WALH,EAME,UAAA4C,KAAK,EAAG;AACN,mBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACD,WARH;AAUD;;;sCAEa;AACZ,eAAKV,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBAvEUyG,yB,EAAyB,kJ,EAAA,gI;AAAA,K;;;YAAzBA,yB;AAAyB,6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,ykB;AAAA;AAAA;ACdtC;;AACA;;AAEA;;AACE;;AAEF;;AAEA;;AAEA;;;;AAVY;;AACE;;AAAA;;AAGL;;AAAA;;AAQP;;AAAA;;;;;;;;;sEDEWA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTxG,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;;;;gBAGnC;;;gBAEA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEthB;;;;;;;;AACA;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAc;;AAC1B;;;;;;;;AAlBJ;;AACE;;AAAmB;;AAAkD;;AACrE;;AACA;;AAAI;;AAAgC;;AACpC;;AAAI;;AAAoC;;AACxC;;AAAI;;AAAkC;;AACtC;;AAAI;;;;AAAgE;;AACpE;;AAAI;;;;AAA0D;;AAC9D;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AAA0B;;AAAU;;AACtC;;AACA;;AAGA;;AAIF;;AACF;;;;;;;;;AAnBqB;;AAAA;;AAEf;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKM;;AAAA;;AAGA;;AAAA;;;;;;;;AAsBR;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAI;;AAChB;;;;;;;;AACA;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAc;;AAC1B;;;;;;;;AAlBR;;AACE;;AACE;;AACE;;AACE;;AAAG;;AAAmD;;AACxD;;AACA;;AACE;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAA0B;;AAAU;;AACtC;;AACA;;AAIA;;AAIF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AAAU;;AAAc;;AAAW;;AACrC;;AACA;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAc;;AAAW;;AACrC;;AACA;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAO;;AAAW;;AAC9B;;AACA;;AACE;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAU;;AAAiB;;AAAW;;AACxC;;AACA;;AACE;;;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAA2B;;AAAW;;AAClD;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACF;;;;;;;;;AA9DQ;;AAAA,oFAAkB,QAAlB,EAAkB,KAAlB;;AAGG;;AAAA;;AAOK;;AAAA;;AAIA;;AAAA;;AAaN;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAQA;;AAAA;;AAOA;;AAAA;;;;;;AAQZ;;;;QD1GW8G,oB;;;AAgCX,oCACUxB,cADV,EAEUhK,cAFV,EAGSC,aAHT,EAIS4F,SAJT,EAIoC;AAAA;;AAH1B,aAAAmE,cAAA,GAAAA,cAAA;AACA,aAAAhK,cAAA,GAAAA,cAAA;AACD,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAA4F,SAAA,GAAAA,SAAA;AAlCD,aAAA1F,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAEE,aAAA2F,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AACA,aAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AACA,aAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAED,aAAAC,SAAA,GAAmB,EAAnB;AAGT,aAAApF,SAAA,GAAY,KAAZ;AAEA,aAAAqF,WAAA,GAAc,4DAAd;AACA,aAAAnF,UAAA,GAAa,2DAAb;AACA,aAAA0K,QAAA,GAAW,EAAX;AAGA,aAAArF,QAAA,GAAW,KAAX;AACO,aAAAC,eAAA,GAAkB,KAAlB;AAEP,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,MAAA,GAAS;AACPC,mBAAS,EAAE,KAAKzF,UAAL,CAAgBwF,MAAhB,CAAuBC,SAD3B;AAEPC,kBAAQ,EAAE,KAAK1F,UAAL,CAAgBwF,MAAhB,CAAuBE,QAF1B;AAGPjD,gBAAM,EAAE;AAHD,SAAT;AAKA,aAAAkD,UAAA,GAAa;AACXC,mBAAS,EAAG,qBADD;AAEXC,eAAK,EAAG;AAFG,SAAb;AAWE,aAAKP,eAAL,GAAuB,KAAKR,SAAL,CAAegB,mBAAf,CAAmC,CAAnC,EAAqC,CAArC,KAA2C,CAAlE;AACD;;;;mCAEU;AACT,eAAKC,OAAL;AACD;;;kCAEM;AAAA;;AAEL,eAAKjG,SAAL,GAAiB,IAAjB;AAEA,cAAIkG,YAAY,GAAG;AACjBC,4BAAgB,EAAG,KAAKV,YADP;AAEjBC,kBAAM,EAAG;AACP,2BAAa,KAAKA,MAAL,CAAYC,SADlB;AAEP,0BAAY,KAAKD,MAAL,CAAYE;AAFjB,aAFQ;AAMjBQ,mBAAO,EAAC;AACN,2BAAa,KAAKP,UAAL,CAAgBC,SADvB;AAEN,uBAAS,KAAKD,UAAL,CAAgBE;AAFnB;AANS,WAAnB;AAYA,eAAKoD,cAAL,CACC0B,cADD,CACgB3E,YADhB,EAEC5E,IAFD,CAEM,iEAAU,KAAKhC,YAAf,CAFN,EAGCiC,SAHD,CAIE,UAACiB,MAAD,EAAiB;AACf,mBAAI,CAACxC,SAAL,GAAgB,KAAhB;AACA,mBAAI,CAAC4K,QAAL,GAAgBpI,MAAM,CAAC8D,IAAvB;AACA,mBAAI,CAACZ,MAAL,CAAY/C,MAAZ,GAAqBH,MAAM,CAAC+D,KAA5B;AACD,WARH,EASE,UAAC3D,KAAD,EAAW;AACT,mBAAI,CAAC5C,SAAL,GAAgB,KAAhB;AACA6C,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,WAZH;AAcD;;;oCAEW9B,E,EAAE;AACZ,eAAKmE,eAAL,CAAqB5B,IAArB,CAA0BvC,EAA1B;AACD;;;oCAEWA,E,EAAE;AACZ,eAAKoE,eAAL,CAAqB7B,IAArB,CAA0BvC,EAA1B;AACD;;;sCAEaA,E,EAAE;AACd,eAAKqE,iBAAL,CAAuB9B,IAAvB,CAA4BvC,EAA5B;AACD;;;kDAEsB;AACrB,eAAKyE,QAAL,GAAgB,KAAhB;AACD;;;oCAEWiB,I,EAAU;AACpB,eAAKd,MAAL,CAAYC,SAAZ,GAAwB,CAAxB;AACA,eAAKE,UAAL,CAAgBC,SAAhB,GAA4BU,IAAI,CAACC,MAAjC;AACA,eAAKZ,UAAL,CAAgBE,KAAhB,GAAwBS,IAAI,CAACE,SAAL,KAAmB,KAA3C;AACA,eAAKT,OAAL;AACA,eAAK9G,cAAL,CAAoBqE,aAApB;AACD;;;sCAEamD,S,EAAoB;AAChC,eAAKjB,MAAL,CAAYC,SAAZ,GAAwBgB,SAAS,CAAChB,SAAlC;AACA,eAAKD,MAAL,CAAYE,QAAZ,GAAuBe,SAAS,CAACf,QAAjC;AACA,eAAKK,OAAL;AACA,eAAK9G,cAAL,CAAoBqE,aAApB;AACD;;;sCAEa;AACZ,eAAKlE,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBA/GUiH,oB,EAAoB,yI,EAAA,gI,EAAA,kJ,EAAA,oJ;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,qyD;AAAA;AAAA;ACfjC;;AACE;AAAA,mBAAW,IAAA1E,OAAA,EAAX;AAAoB,WAApB;;AACA;;AACE;;AAA6B;AAAA,mBAAiB,IAAAW,WAAA,QAAjB;AAAoC,WAApC;;AAC3B;;AACE;;AACE;;AAA2B;;AAAC;;AAC5B;;AACE;;AACA;;AAAU;;AAAc;;AAC1B;;AACA;;AACE;;AACA;;AAAU;;AAAc;;AAC1B;;AACA;;AACE;;AACA;;AAAU;;AAA2B;;AACvC;;AACA;;AACE;;AAAI;;AAAU;;AAAO;;AACvB;;AACA;;AACE;;AAAS;;AAAU;;AAAiB;;AACtC;;AACA;;AAEF;;AACF;;AACA;;AACE;;AAqBF;;AACF;;AACF;;AAEA;;AACE;;AAgEF;;AACA;;AACA;;AACqF;AAAA,mBAAQ,IAAAC,aAAA,QAAR;AAA6B,WAA7B;;AACrF;;AAEF;;;;AA9HM,6FAAqB,OAArB,EAAqB,cAArB,EAAqB,UAArB,EAAqB,sBAArB;;AA8BiB;;AAAA;;AA0BL;;AAAA;;AAiEC;;AAAA;;AACF;;AAAA,gGAAwB,sBAAxB,EAAwB,0CAAxB,EAAwB,UAAxB,EAAwB,mBAAxB,EAAwB,iBAAxB,EAAwB,qCAAxB;;;;;;;;;;sED3GJ8D,oB,EAAoB;cALhC,uDAKgC;eALtB;AACThH,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;gBAI9B;;;gBACA;;;gBACA;;;gBAEA;;;gBACA;;;;;;;;;;;;;;;;;;;;AExBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACEQ;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAE1D;;AAAU;;AAAO;;AAAY;;AACjC;;;;;;;;AAgBA;;AAAgE;AAAA;;AAAA;;AAAA;AAAA;;AAG5D;;AAAU;;AAAe;;AAAY;;AACzC;;;;;;;;AAKR;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;;;;;AADe,+FAAmB,YAAnB,EAAmB,sBAAnB;;;;;;;;AAMvD;;AACkB;AAAA;;AAAA;;AAAA;AAAA;;AACd;;AAAU;;AAAc;;AAAY;;AACxC;;;;QDtBSiH,0B;;;AA8DX,0CACU5L,EADV,EAEUE,aAFV,EAGU+J,cAHV,EAIUnE,SAJV,EAIqC;AAAA;;AAH3B,aAAA9F,EAAA,GAAAA,EAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAA+J,cAAA,GAAAA,cAAA;AACA,aAAAnE,SAAA,GAAAA,SAAA;AAhEF,aAAA1F,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAKR,aAAAyH,YAAA,GAAe,KAAf;AACA,aAAAC,iBAAA,GAAoB,KAApB;AACA,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACO,aAAA1B,eAAA,GAAkB,KAAlB;AAEP,aAAAxF,SAAA,GAAY,KAAZ;AACA,aAAAmH,EAAA,GAAK,IAAL;AACA,aAAAjH,UAAA,GAAa,2DAAb;AAGA,aAAAkH,YAAA,GAA8B,CAC5B;AACE1H,oBAAU,EAAE,KADd;AAEEsE,cAAI,EAAE,OAFR;AAGEC,eAAK,EAAE,iBAHT;AAIEC,mBAAS,EAAE,MAJb;AAKEC,cAAI,EAAE,gBALR;AAMEC,cAAI,EAAE;AANR,SAD4B,EAS5B;AACE1E,oBAAU,EAAE,KADd;AAEEsE,cAAI,EAAE,QAFR;AAGEC,eAAK,EAAE,cAHT;AAIEE,cAAI,EAAE,eAJR;AAKEC,cAAI,EAAE,SALR;AAME2F,iBAAO,EAAE,KAAK7J,UAAL,CAAgB8J;AAN3B,SAT4B,EAiB5B;AACEtK,oBAAU,EAAE,KADd;AAEEsE,cAAI,EAAE,QAFR;AAGEC,eAAK,EAAE,WAHT;AAIEE,cAAI,EAAE,YAJR;AAKEC,cAAI,EAAE,mBALR;AAME2F,iBAAO,EAAE,KAAK7J,UAAL,CAAgB+J;AAN3B,SAjB4B,EAyB5B;AACEvK,oBAAU,EAAE,KADd;AAEEsE,cAAI,EAAE,QAFR;AAGEC,eAAK,EAAE,WAHT;AAIEE,cAAI,EAAE,UAJR;AAKEC,cAAI,EAAE,YALR;AAME2F,iBAAO,EAAE,KAAK7J,UAAL,CAAgB6K;AAN3B,SAzB4B,EAiC5B;AACErL,oBAAU,EAAE,KADd;AAEEsE,cAAI,EAAE,QAFR;AAGEC,eAAK,EAAE,oBAHT;AAIEE,cAAI,EAAE,iBAJR;AAKEC,cAAI,EAAE,sBALR;AAME2F,iBAAO,EAAE,KAAK7J,UAAL,CAAgB6K;AAN3B,SAjC4B,CAA9B;AAkDE,aAAK1D,UAAL,GAAkB,KAAKnI,EAAL,CAAQoB,KAAR,CAAc,EAAd,CAAlB;AACA,aAAKkF,eAAL,GAAuB,KAAKR,SAAL,CAAegB,mBAAf,CAAmC,CAAnC,EAAqC,CAArC,MAA4C,CAAnE;AACD;;;;mCAEU,CACV;;;wCAEe;AACd,eAAKsB,SAAL,CAAe7B,YAAf,GAA8B,KAAK4B,UAAL,CAAgBlF,KAA9C;AACA,eAAKmF,SAAL,CAAe5B,MAAf,CAAsBC,SAAtB,GAAkC,CAAlC;;AACA,eAAK2B,SAAL,CAAerB,OAAf;;AACA,eAAKsB,UAAL,CAAgBC,IAAhB;AACD;;;sCAEa;AACZ,eAAKL,EAAL,GAAU,IAAV;AACA,eAAKH,iBAAL,GAAyB,IAAzB;AACA,eAAKD,YAAL,GAAoB,KAAKE,YAAL,GAAoB,KAAxC;AACD;;;0CACiB;AAChB,eAAKA,YAAL,GAAoB,IAApB;AACA,eAAKF,YAAL,GAAoB,KAAKC,iBAAL,GAAyB,KAA7C;AACD;;;sCAEapF,K,EAAO;AACnB,eAAK6F,eAAL;;AACA,cAAI,KAAKH,SAAT,EAAoB;AAClB,iBAAKA,SAAL,CAAerB,OAAf;AACD;AACF;;;wCAEerE,K,EAAO;AACrB,eAAKuF,EAAL,GAAUvF,KAAV;AACA,eAAKmF,YAAL,GAAoB,IAApB;AACA,eAAKG,gBAAL,GAAwB,KAAKD,YAAL,GAAoB,KAAKD,iBAAL,GAAyB,KAArE;AACD;;;wCAEepF,K,EAAO;AACrB,eAAKoF,iBAAL,GAAyB,IAAzB;AACA,eAAKG,EAAL,GAAUvF,KAAV;AACA,eAAKsF,gBAAL,GAAwB,KAAKH,YAAL,GAAoB,KAAKE,YAAL,GAAoB,KAAhE;AACD;;;0CAEiBrF,K,EAAO;AACvB,eAAKqD,eAAL,CAAqBrD,KAArB;AACA,eAAKsF,gBAAL,GAAwB,IAAxB;AACD;;;mDAEuB;AAAA;;AACtB,cAAI/F,SAAS,GAAG,KAAK/B,aAAL,CAAmBgC,iBAAnB,CAAqC,oCAArC,CAAhB;AAEAD,mBAAS,CAACE,WAAV,GACGC,IADH,CACQ,iEAAU,KAAKhC,YAAf,CADR,EAEGiC,SAFH,CAGI,UAACC,SAAD,EAAwB;AACtB,gBAAIA,SAAJ,EAAe;AAEb,qBAAI,CAACxB,SAAL,GAAiB,IAAjB;;AAEA,qBAAI,CAACmJ,cAAL,CAAoB6B,aAApB,CAAkC,OAAI,CAAC7D,EAAvC,EACG7F,IADH,CACQ,iEAAU,OAAI,CAAChC,YAAf,CADR,EAEGiC,SAFH,CAGI,UAACiB,MAAD,EAAY;AACV,uBAAI,CAACiF,eAAL;;AACA,uBAAI,CAACH,SAAL,CAAerB,OAAf;;AACA,uBAAI,CAACjG,SAAL,GAAiB,KAAjB;AACD,eAPL,EAQI,UAAC4C,KAAD,EAAW;AACT,uBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACD,eAVL;AAYD;AACF,WArBL,EAsBI,UAAC4C,KAAD,EAAW;AACT,mBAAI,CAAC5C,SAAL,GAAiB,KAAjB;AACD,WAxBL;AA0BD;;;sCAEa;AACZ,eAAKV,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB;AACA,eAAKnE,YAAL,CAAkBoE,QAAlB;AACD;;;;;;;uBAtJUoH,0B,EAA0B,2H,EAAA,kJ,EAAA,yI,EAAA,oJ;AAAA,K;;;YAA1BA,0B;AAA0B,yC;AAAA;AAAA;oEAI1B,yF,EAAoB,I;;;;;;;;;;;;;;;;;ACrBjC;;AACI;;AACI;;AAIJ;;AACA;;AACI;;AACI;;AACI;;AAA+B;AAAA,mBAAY,IAAAnD,aAAA,EAAZ;AAA2B,WAA3B;;AAC3B;;AACA;;AAAwD;AAAA,mBAAW,IAAAA,aAAA,EAAX;AAA0B,WAA1B;;AAA4B;;AACxF;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAKJ;;AACJ;;AACA;;AAAI;;AAEJ;;AAEA;;AAA2C;AAAA,mBAAmB,IAAA1C,eAAA,QAAnB;AAA0C,WAA1C,EAA2C,iBAA3C,EAA2C;AAAA,mBAC/D,IAAAC,eAAA,QAD+D;AACxC,WADH,EAA2C,mBAA3C,EAA2C;AAAA,mBACjB,IAAAC,iBAAA,QADiB;AACQ,WADnD;;AACqD;;AAEhG;;AACI;;AAIJ;;;;AAtC8B;;AAAA;;AAMT;;AAAA,2FAAmB,QAAnB,EAAmB,iBAAnB,EAAmB,OAAnB,EAAmB,gBAAnB;;AACH;;AAAA;;AACI;;AAAA;;AACY;;AAAA,2FAAmB,QAAnB,EAAmB,gBAAnB;;AACA;;AAAA,2FAAmB,cAAnB,EAAmB,IAAnB;;AASJ;;AAAA;;AASb;;AAAA;;AAEC;;AAAA;;AAIQ;;AAAA;;;;;;;;;sEDnBb2F,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTnH,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;gBAIpC,uD;iBAAU,yF;;;gBACV,uD;iBAAU,Y","file":"transport-transport-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { RouteService } from '../../services/route.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-route',\n  templateUrl: './new-route.component.html',\n  styleUrls: ['./new-route.component.css']\n})\nexport class NewRouteComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  \n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() showHeader = true\n  @Input() childCard = false\n  \n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New Route\"\n  subTitle = \"Add a new route\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  stoppageCount: number = 0\n\n  constructor(    \n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public routeService: RouteService\n  ) {}\n\n  ngOnInit() {  \n\n    this.setTitleMessages()\n    \n    this.mainForm = this.fb.group(\n      {\n        basicInfo: this.fb.group({}),        \n        stoppage: this.fb.array([]),\n      }\n      )\n\n    this.sharedService.setFormCommonFields(this.mainForm)\n   \n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n  \n  setTitleMessages(){\n    if (this.changeModeId) {\n      this.title = \"Update Route.\"      \n      this.subTitle = \"Please update following details of route.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Route.\"\n        this.subTitle = \"View following details of route.\"\n      }\n    }\n  }\n\n  addStoppageClicked() {\n\n    this.addStoppage()\n    this.open = true // keep open the newly added stoppage\n    this.sharedService.pageLevelSave(\"New stoppage form\")\n  }\n  addStoppage(id = null, status = null) {\n\n    this.stoppageCount = this.stoppageCount + 1;\n      (<FormArray>this.mainForm.get('stoppage'))\n      .push(\n          this.sharedService.setFormCommonFields(\n            this.fb.group({}),\n            id, status\n          )\n        )\n  }\n\n  removeStoppageClicked(idx) {\n    let dialogRef = this.sharedService.openConfirmDialog()\n\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.removeStoppage(idx)\n        this.sharedService.pageLevelDelete(\"Stoppage\")\n      }\n    });\n  }\n  removeStoppage(idx) {\n    (<FormArray>this.mainForm.get('stoppage')).removeAt(idx)\n    this.stoppageCount--;\n  }    \n\n  stoppageValueChanged(event){\n    this.calculateRouteLength()\n  }\n\n  calculateRouteLength() {\n    let totalDistance = 0;\n\n    (<FormArray>this.mainForm.get(\"stoppage\")).controls.forEach(stoppage => {\n      try{\n          let stoppageDistance = parseInt(stoppage.get(\"distance\").value)\n          if(stoppageDistance > 0){\n            totalDistance = totalDistance + stoppageDistance\n          }\n      }\n      catch(ex){\n        // invalid distance value\n      }\n    });\n\n    let routeLengthControl = this.mainForm.get(\"basicInfo\").get(\"routeLength\")\n    routeLengthControl && routeLengthControl.setValue(totalDistance)\n  }\n\n  populateFromDB() {\n    //--- Fill Route information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.routeService.getRoute(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n\n            //--- Fill stoppage for View/Edit mode\n            for(let idx=0; idx < (<Array<object>>element[\"stoppage\"]).length; idx++){\n              let id = ((<Array<object>>element[\"stoppage\"])[idx])[\"_id\"]\n              let status = ((<Array<object>>element[\"stoppage\"])[idx])[\"status\"]\n              this.addStoppage(id, status)\n            }\n\n          });\n          \n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(event: Event) {\n\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.routeService.saveRoute(\n        this.mainForm.getRawValue(),\n        this.changeModeId\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Route's information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()     \n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\" [header]=\"showHeader\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\" *ngIf=\"!isPopulatingFormDb\">\n        <responsive>\n            <div fxFlex>\n                <route-basic-info [form]=\"mainForm.controls['basicInfo']\" [isViewMode]=\"isViewMode\"\n                    [initialFormValues]=\"initialFormValues && initialFormValues.basicInfo\">\n                </route-basic-info>\n            </div>\n            <div fxFlex>\n                <app-section [icon]=\"'traffic'\" [title]=\"'Stoppage List'\">\n                    <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n                        <mat-expansion-panel  class=\"no-shadow\"\n                            *ngFor=\"let stoppage of this.mainForm['controls'].stoppage['controls']; let idxStoppage = index;\">\n                            <mat-expansion-panel-header>\n                                <mat-panel-title>\n                                    <smart-div [form]=\"stoppage\" [badge]=\"idxStoppage + 1\">\n                                        {{this.stoppage.controls['stoppageName']?.value ? this.stoppage.controls['stoppageName']?.value : '---------'}}\n                                    </smart-div>\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <div class=\"rt\" *ngIf=\"!isViewMode\">\n                                    <mat-icon class=\"icon-delete\" matSuffix (click)=\"removeStoppageClicked(idxStoppage)\">delete_forever</mat-icon>\n                            </div>\n                            <route-stoppage-info [form]=\"stoppage\" [isViewMode]=\"isViewMode\" (stoppageValueChanged)=\"stoppageValueChanged($event)\"\n                                [initialFormValues]=\"initialFormValues?.stoppage?.length > idxStoppage && initialFormValues.stoppage[idxStoppage]\">\n                            </route-stoppage-info>\n                        </mat-expansion-panel>\n                    </mat-accordion>\n                    <p class=\"rt\" *ngIf=\"!isViewMode && mainForm.controls['stoppage'].valid\">\n                        <button class=\"addOneMoreButton\" mat-raised-button type=\"button\" value=\"Add Stoppage\"\n                            (click)=\"addStoppageClicked()\">\n                            <mat-icon matSuffix>add</mat-icon>\n                            <mat-icon matSuffix>traffic</mat-icon>\n                        </button>\n                    </p>\n                </app-section>\n            </div>\n        </responsive>\n\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { Component, OnInit, Input } from '@angular/core';\nimport { validationType, FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { FormGroup } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'route-basic-info',\n  templateUrl: './route-basic-info.component.html',\n  styleUrls: ['./route-basic-info.component.css']\n})\nexport class RouteBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Route Name\",\n        inputType: \"text\",\n        name: \"routeName\",\n        icon: \"map\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: true,\n        type: \"input\",\n        label: \"Route Length\",\n        inputType: \"text\",\n        name: \"routeLength\",\n        icon: \"swap_calls\",        \n        hint: \"Auto calculate by stoppages.\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"textarea\",\n        label: \"Description\",\n        name: \"description\",\n      }\n    ];\n\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\"></dynamic-form>","import { Component, OnInit, Input, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { validationType, FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { FormGroup } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'route-stoppage-info',\n  templateUrl: './route-stoppage-info.component.html',\n  styleUrls: ['./route-stoppage-info.component.css']\n})\nexport class RouteStoppageInfoComponent implements OnInit , OnDestroy {\n  private unsubscribe$ = new Subject();\n  \n  @Output() stoppageValueChanged = new EventEmitter()\n  \n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  routeDistanceChanged$ = new EventEmitter<any>()\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Stoppage Name\",\n        inputType: \"text\",\n        name: \"stoppageName\",\n        icon: \"traffic\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Distance\",\n        inputType: \"number\",\n        name: \"distance\",\n        icon: \"swap_calls\",\n        onValueChange: this.routeDistanceChanged$,\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Fairs\",\n        inputType: \"number\",\n        name: \"fairs\",\n        icon: \"money\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"textarea\",\n        label: \"Description\",\n        name: \"description\",\n      }\n    ];\n\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n\n    this.registerDropdownChangeEvents()\n  }\n\n  registerDropdownChangeEvents() {\n    this.routeDistanceChanged$\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(val => {\n        this.stoppageValueChanged.emit(val)\n      })\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\"></dynamic-form>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MasterData, environment } from '@env/environment';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { RouteService } from '../../services/route.service';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-route-list',\n  templateUrl: './route-list.component.html',\n  styleUrls: ['./route-list.component.css']\n})\nexport class RouteListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n\n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  routes = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions = false\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"basicInfo.firstName\",\n    isAsc : true\n  }\n\n  constructor(\n    private routeService: RouteService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(7,1) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.routeService\n    .getRouteList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.routes = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"'Route List'\" [subTitle]=\"'Manage your route for transport'\"\n  (refresh)=\"getList()\">\n  <large-screen>\n    <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n      <thead class=\"thead\">\n        <tr>\n          <th class=\"sr\">#</th>\n          <th matRipple mat-sort-header=\"basicInfo.routeName\">\n            Route Name\n            <mat-icon>map</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.distance\">\n            Length (K.M)\n            <mat-icon>swap_calls</mat-icon>\n          </th>\n          <th class=\"action\">\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"tr\" *ngFor=\"let route of routes; let idx = index\">\n          <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n          <td>{{route.basicInfo.routeName}}</td>\n          <td>{{route.basicInfo.routeLength}}</td>\n          <td class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Route'\" class=\"icon-view\" (click)=\"viewClicked(route._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Route'\" class=\"icon-edit\" (click)=\"editClicked(route._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Route'\" class=\"icon-delete\"\n              (click)=\"deleteClicked(route._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </large-screen>\n\n  <small-screen class=\"default-font\">\n    <ng-container *ngFor=\"let route of routes; let idx = index; let odd = odd\">\n      <card [childCard]=\"true\" [header]=\"false\">\n        <row gap=\"2px\">\n          <div fxFlex=\"30%\">\n            <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n          </div>\n          <div fxFlex class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Route'\" class=\"icon-view\" (click)=\"viewClicked(route._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Route'\" class=\"icon-edit\" (click)=\"editClicked(route._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Route'\" class=\"big-icon-delete\"\n              (click)=\"deleteClicked(route._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </div>\n        </row>\n        <br>\n        <row gap=\"0px\">\n          <div>\n            <div class=\"bold\">\n              <mat-icon>map</mat-icon>Route Name\n            </div>\n            <div class=\"small-screen-data\">\n              {{route.basicInfo.routeName}}\n            </div>\n          </div>\n          <div class=\"fill-space\"></div>\n          <div>\n            <div class=\"bold\">\n              <mat-icon>swap_calls</mat-icon>Route length\n            </div>\n            <div class=\"small-screen-data\">\n              {{route.basicInfo.routeLength}} K.M\n            </div>\n          </div>\n        </row>\n      </card>\n      <br>\n    </ng-container>\n  </small-screen>\n\n  <no-record-found *ngIf=\"routes.length ==0\"></no-record-found>\n\n  <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n    [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\" (page)=\"pagingClicked($event)\">\n  </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { RouteService } from '../../services/route.service';\nimport { RouteListComponent } from '../route-list/route-list.component';\nimport { MasterData } from '@env/environment';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-route-management',\n  templateUrl: './route-management.component.html',\n  styleUrls: ['./route-management.component.css']\n})\nexport class RouteManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(RouteListComponent) private _ListPage: RouteListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n  \n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n  public editPermissions = false\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Route Name\",\n      inputType: \"text\",\n      name: \"routeName\",\n      icon: \"map\"\n    },\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Route Length\",\n      inputType: \"number\",\n      name: \"routeLength\",\n      icon: \"local_gas_station\"\n    }   \n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private routeService: RouteService,\n    private plService: PostLoginService\n  ) {\n    this.searchForm = this.fb.group({})    \n    this.editPermissions = this.plService.getPageEntitlements(7,1) === 2\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteRoutePermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Route'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.routeService.deleteRoute(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<responsive colGap=\"50px\">\n  <div fxFlex=\"30\">\n    <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button class=\"btn\"\n      matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n      <mat-icon>map</mat-icon> Add New Route\n    </button>\n  </div>\n  <div fxFlex>\n    <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Route'\">\n      <card [header]=\"false\">\n        <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n          <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n          <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n        </form>\n      </card>\n    </card-bottom>\n  </div>\n</responsive>\n\n<responsive>\n  <div>\n    <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" class=\"btn\"\n      mat-raised-button appToolTip=\"'Go back to Route List'\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n      <mat-icon>keyboard_return</mat-icon> Back to Route List\n    </button>\n  </div>\n</responsive>\n<br><br>\n\n<app-new-route *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n  (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-route>\n<app-route-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n  (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-route-list>\n\n<p>\n  <button type=\"button\" *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\"\n    type=\"button\" (click)=\"deleteRoutePermanently()\">\n    <mat-icon>delete_forever</mat-icon> Delete And Save\n  </button>\n</p>","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { StorageService } from '@app/shared/services/storage.service';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\n\r\n@Injectable()\r\nexport class RouteService {\r\n\r\n    apiPrefix = \"api/Route/\"\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _storageService: StorageService,\r\n        private _sharedService: SharedService\r\n    ) {\r\n    }\r\n\r\n    saveRoute(routeData, id = null) {\r\n        return this._http.post(environment.apiUrl + this.apiPrefix + \"saveRoute\", routeData)\r\n    }\r\n\r\n    getRoute(id) {\r\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"getRoute?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n    }\r\n\r\n    getRouteList(searchParams) {\r\n        return this._http.post(environment.apiUrl + this.apiPrefix + \"getRouteList\", searchParams)\r\n    }\r\n\r\n    deleteRoute(id) {\r\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteRoute?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { StorageService } from '@app/shared/services/storage.service';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\n\r\n@Injectable()\r\nexport class TransportService {\r\n\r\n    apiPrefix = \"api/Transport/\"\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _storageService: StorageService,\r\n        private _sharedService: SharedService\r\n    ) {\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { StorageService } from '@app/shared/services/storage.service';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\n\r\n@Injectable()\r\nexport class VehicleService {\r\n\r\n    apiPrefix = \"api/vehicle/\"\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _storageService: StorageService,\r\n        private _sharedService: SharedService\r\n    ) {\r\n    }\r\n\r\n    saveVehicle(vehicleData, id = null) {\r\n        return this._http.post(environment.apiUrl + this.apiPrefix + \"saveVehicle\", vehicleData)\r\n    }\r\n\r\n    getVehicle(id) {\r\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"getVehicle?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n    }\r\n\r\n    getVehicleList (searchParams){\r\n        return this._http.post(environment.apiUrl+ this.apiPrefix + \"getVehicleList\", searchParams)\r\n      }\r\n\r\n    deleteVehicle(id) {\r\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteVehicle?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VehicleManagementComponent } from './vehicle/vehicle-management/vehicle-management.component';\nimport { RouteManagementComponent } from './routes/route-management/route-management.component';\n\nconst routes: Routes = [\n  {\n    path: 'vehiclemgmt',\n    component: VehicleManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'routemgmt',\n    component: RouteManagementComponent,\n    outlet:'postLoginOutlet'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TransportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TransportRoutingModule } from './transport-routing.module';\nimport { VehicleManagementComponent } from './vehicle/vehicle-management/vehicle-management.component';\nimport { NewVehicleComponent } from './vehicle/new-vehicle/new-vehicle.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { TransportService } from './services/transport.service';\nimport { VehicleService } from './services/vehicle.service';\nimport { VehicleListComponent } from './vehicle/vehicle-list/vehicle-list.component';\nimport { VehicleBasicInfoComponent } from './vehicle/new-vehicle/vehicle-basic-info/vehicle-basic-info.component';\nimport { VehicleMaintenanceInfoComponent } from './vehicle/new-vehicle/vehicle-maintenance-info/vehicle-maintenance-info.component';\nimport { NewRouteComponent } from './routes/new-route/new-route.component';\nimport { RouteListComponent } from './routes/route-list/route-list.component';\nimport { RouteManagementComponent } from './routes/route-management/route-management.component';\nimport { RouteBasicInfoComponent } from './routes/new-route/route-basic-info/route-basic-info.component';\nimport { RouteStoppageInfoComponent } from './routes/new-route/route-stoppage-info/route-stoppage-info.component';\nimport { RouteService } from './services/route.service';\nimport { VehicleRouteInfoComponent } from './vehicle/new-vehicle/vehicle-route-info/vehicle-route-info.component';\n\n@NgModule({\n  declarations: [VehicleManagementComponent, NewVehicleComponent, VehicleListComponent, VehicleBasicInfoComponent, \n     VehicleMaintenanceInfoComponent, NewRouteComponent, RouteListComponent, RouteManagementComponent, \n     RouteBasicInfoComponent, RouteStoppageInfoComponent, VehicleRouteInfoComponent],\n  imports: [\n    CommonModule,\n    TransportRoutingModule,\n    SharedModule\n  ],\n  providers:[\n    TransportService,\n    VehicleService,\n    RouteService\n  ]\n})\nexport class TransportModule { }\n","import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { VehicleService } from '../../services/vehicle.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-new-vehicle',\n  templateUrl: './new-vehicle.component.html',\n  styleUrls: ['./new-vehicle.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NewVehicleComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  \n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  \n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New Vehicle\"\n  subTitle = \"Add a new vehicle\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  maintenanceCount: number = 0\n  public userAccessPolicy\n\n  constructor(    \n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public vehicleService: VehicleService,\n    private plService: PostLoginService\n  ) {\n      this.userAccessPolicy = this.plService.getPageEntitlements(7,2)\n  }\n\n  ngOnInit() {  \n\n    this.setTitleMessages()\n    \n    this.mainForm = this.fb.group(\n      {\n        basicInfo: this.fb.group({}),      \n        maintenance: this.fb.array([]),\n      }\n      )\n\n    this.sharedService.setFormCommonFields(this.mainForm)\n   \n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n  \n  setTitleMessages(){\n    if (this.changeModeId) {\n      this.title = \"Update Vehicle.\"      \n      this.subTitle = \"Please update following details of vehicle.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Vehicle.\"\n        this.subTitle = \"View following details of vehicle.\"\n      }\n    }\n  }\n\n  addMaintenanceClicked() {\n\n    this.addMaintenance()\n    this.open = true // keep open the newly added maintenance\n    this.sharedService.pageLevelSave(\"New maintenance form\")\n  }\n  addMaintenance(id = null, status = null) {\n\n    this.maintenanceCount = this.maintenanceCount + 1;\n      (<FormArray>this.mainForm.get('maintenance'))\n      .push(\n          this.sharedService.setFormCommonFields(\n            this.fb.group({}),\n            id, status\n          )\n        )\n  }\n\n  removeMaintenanceClicked(idx) {\n    let dialogRef = this.sharedService.openConfirmDialog()\n\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.removeMaintenance(idx)\n        this.sharedService.pageLevelDelete(\"Maintenance\")\n      }\n    });\n  }\n  removeMaintenance(idx) {\n    (<FormArray>this.mainForm.get('maintenance'))\n      .removeAt(idx)\n    this.maintenanceCount--\n  }\n\n  populateFromDB() {\n    //--- Fill Vehicle information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.vehicleService.getVehicle(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n           \n            //--- Fill maintenance for View/Edit mode\n            for(let idx=0; idx < (<Array<object>>element[\"maintenance\"]).length; idx++){\n              let id = ((<Array<object>>element[\"maintenance\"])[idx])[\"_id\"]\n              let status = ((<Array<object>>element[\"maintenance\"])[idx])[\"status\"]\n              this.addMaintenance(id, status)\n            }\n\n          });\n          \n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(event: Event) {\n\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.vehicleService.saveVehicle(\n        this.mainForm.value,\n        this.changeModeId\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Vehicle's information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()     \n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\">\n            <responsive>\n                    <div fxFlex>\n                            <app-section *ngIf=\"!isPopulatingFormDb\" [icon]=\"'commute'\" [title]=\"'Vehicle Basic Details'\">\n                                <br>\n                                    <vehicle-basic-info [form]=\"mainForm.controls['basicInfo']\" [isViewMode]=\"isViewMode\"\n                                        [initialFormValues]=\"initialFormValues && initialFormValues.basicInfo\">\n                                    </vehicle-basic-info>\n                                 <br><br>\n                                 <app-vehicle-route-info [form]=\"mainForm\" [isViewMode]=\"isViewMode\"\n                                        [initialFormValues]=\"initialFormValues\"></app-vehicle-route-info>                                    \n                                </app-section>\n                    </div>\n                    <div fxFlex *ngIf=\"userAccessPolicy == 2\">\n                            <app-section *ngIf=\"!isPopulatingFormDb\" [icon]=\"'build'\" [title]=\"'Vehicle Maintenance Details'\">\n                                    <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n                                        <mat-expansion-panel  class=\"no-shadow\"\n                                            *ngFor=\"let maintenance of this.mainForm['controls'].maintenance['controls']; let idxMaintenance = index;\">\n                                            <mat-expansion-panel-header>\n                                                <mat-panel-title>\n                                                    <smart-div [form]=\"maintenance\" [badge]=\"idxMaintenance + 1\">\n                                                        {{this.maintenance.controls['maintenanceName']?.value ? this.maintenance.controls['maintenanceName']?.value : '---------'}}\n                                                    </smart-div>\n                                                </mat-panel-title>\n                                            </mat-expansion-panel-header>\n                                            <div class=\"rt\" *ngIf=\"!isViewMode\">\n                                                    <mat-icon class=\"icon-delete\" (click)=\"removeMaintenanceClicked(idxMaintenance)\" matSuffix>delete_forever</mat-icon>\n                                            </div>\n                                            <vehicle-maintenance-info [form]=\"maintenance\" [isViewMode]=\"isViewMode\"\n                                                [initialFormValues]=\"initialFormValues?.maintenance.length > idxMaintenance && initialFormValues.maintenance[idxMaintenance]\">\n                                            </vehicle-maintenance-info>\n                                        </mat-expansion-panel>\n                                    </mat-accordion>\n                                    <no-record-found *ngIf=\"this.mainForm['controls'].maintenance['controls'].length == 0\"></no-record-found>\n                                    <p class=\"rt\" *ngIf=\"!isViewMode && mainForm.controls['maintenance'].valid\">\n                                        <button class=\"addOneMoreButton\" mat-raised-button type=\"button\" value=\"Add Maintenance\"\n                                            (click)=\"addMaintenanceClicked()\">\n                                            <mat-icon matSuffix>add</mat-icon>\n                                            <mat-icon matSuffix>build</mat-icon>\n                                        </button>\n                                    </p>\n                                </app-section>\n                    </div>\n                </responsive>\n\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'vehicle-basic-info',\n  templateUrl: './vehicle-basic-info.component.html',\n  styleUrls: ['./vehicle-basic-info.component.css']\n})\nexport class VehicleBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Company Name\",\n        inputType: \"text\",\n        name: \"companyName\",\n        icon: \"emoji_transportation\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Model Name\",\n        inputType: \"text\",\n        name: \"modelName\",\n        icon: \"airport_shuttle\",\n        validations: [validationType.required()]\n      },      \n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Registration No\",\n        inputType: \"text\",\n        name: \"registrationNo\",\n        icon: \"directions_bus\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"date\",\n        label: \"Registration Date\",\n        name: \"registrationDate\"\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Seat Capacity\",\n        inputType: \"number\",\n        name: \"seatCapacity\",\n        icon: \"airline_seat_recline_normal\",\n        validations: [validationType.required()]        \n      },      \n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Custom Name\",\n        inputType: \"text\",\n        name: \"customName\",\n        icon: \"directions_bus\",\n        validations: [validationType.required()]        \n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"select\",\n        label: \"Vehicle Type\",\n        name: \"vehicleTypeId\",    \n        icon: \"commute\",  \n        options: this.masterData.vehicleTypes,\n        validations:[validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"select\",\n        label: \"Fuel Type\",\n        name: \"fuelTypeId\",      \n        icon: \"local_gas_station\",\n        options: this.masterData.fuelTypes,\n        validations:[validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"togglebutton\",\n        label: \"Is on rent\",\n        name: \"isRental\",      \n        value: false      \n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"togglebutton\",\n        label: \"Is only for office\",\n        name: \"isOnlyForOffice\",      \n        value: false      \n      }\n    ];\n    \n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\"></dynamic-form>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'vehicle-maintenance-info',\n  templateUrl: './vehicle-maintenance-info.component.html',\n  styleUrls: ['./vehicle-maintenance-info.component.css']\n})\nexport class VehicleMaintenanceInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Maintenance Name\",\n        inputType: \"text\",\n        name: \"maintenanceName\",\n        icon: \"local_car_wash\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Cost\",\n        inputType: \"number\",\n        name: \"maintenanceCost\",\n        icon: \"money\",\n        validations: [validationType.required()]\n      },  \n      {\n        isViewMode: this.isViewMode,\n        type: \"date\",\n        label: \"Date\",\n        name: \"maintenanceDate\",\n        validations: [validationType.required()]\n      },      \n      {\n        isViewMode: this.isViewMode,\n        type: \"togglebutton\",\n        label: \"Is Expected\",\n        name: \"isExpected\",      \n        value: true      \n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"textarea\",\n        label: \"Description\",\n        inputType: \"text\",\n        name: \"description\"\n      }\n    ];\n    \n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\"></dynamic-form>","import { Component, OnInit, Input, EventEmitter, OnDestroy } from '@angular/core';\nimport { validationType, FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { FormGroup } from '@angular/forms';\nimport { MasterData, environment } from '@env/environment';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-vehicle-route-info',\n  templateUrl: './vehicle-route-info.component.html',\n  styleUrls: ['./vehicle-route-info.component.css']\n})\nexport class VehicleRouteInfoComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Input() form: FormGroup\n\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() initialFormValues = null\n  @Input() isViewMode = false\n  @Input() isRequired = false\n\n  console = console\n  isLoading = false\n  masterData = MasterData\n\n  routeChanged$ = new EventEmitter<any>()\n  ShowRouteDetails = false\n  stoppageList = null\n\n  constructor(\n    private sharedService: SharedService,\n    private http: HttpClient\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"select\",\n        label: \"Route\",\n        name: \"routeId\",\n        icon: \"map\",\n        value: this.initialFormValues? this.initialFormValues.routeId : null,\n        onValueChange: this.routeChanged$,\n        validations: this.isRequired ? [validationType.required()] : null\n      }\n    ];\n\n    this.registerDropdownChangeEvents() \n    \n    this.fetchRouteDdl()    \n  }\n\n  registerDropdownChangeEvents() {\n    this.routeChanged$\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(val => {\n       // this.routeChanged()\n      })\n  }\n\n  fetchRouteDdl() {\n    this.isLoading = true\n    this.fieldsConfig[0].options = []; // make route list empty\n\n    this.http.get(environment.apiUrl + \"api/Route/\" + \"GetRouteDdl\")\n    .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(val => {\n        this.fieldsConfig[0].options = val; \n        this.isLoading = false\n      },\n      error =>{\n        this.isLoading = false\n      }\n      )\n  }\n\n  ngOnDestroy() {    \n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<responsive [gap]=\"'14%'\">\n<dynamic-form *ngIf=\"!isLoading\" fxFlex [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>\n\n<div fxFlex>\n  <input *ngIf=\"this.form.get('routeId') && this.form.get('routeId').value\" type=\"button\" class=\"pointer\"\n  (click)=\"ShowRouteDetails = true\" value=\"View Route Details\">\n</div>\n\n</responsive>\n\n<card [title]=\"'Vehicle Route Details'\" [subTitle]=\"'View vehicle route details and stoppages list.'\"\n  [refreshButton]=\"false\" [headerBorader]=\"false\" [popUpMode]=\"true\" (deleteCardEvent)=\"ShowRouteDetails=false\"\n  *ngIf=\"!isLoading && ShowRouteDetails\">\n  <app-new-route [changeModeId]=\"this.form.get('routeId').value\" [showHeader]=false [childCard]=\"true\" [isViewMode]=\"true\"></app-new-route>\n</card>","import { Component, OnInit, ChangeDetectorRef, Output, Input, EventEmitter, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { takeUntil } from 'rxjs/operators';\nimport { VehicleService } from '../../services/vehicle.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment, MasterData } from '@env/environment';\nimport { Subject } from 'rxjs';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-vehicle-list',\n  templateUrl: './vehicle-list.component.html',\n  styleUrls: ['./vehicle-list.component.css']\n})\nexport class VehicleListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  vehicles = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions = false\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"basicInfo.firstName\",\n    isAsc : true\n  }\n\n  constructor(\n    private vehicleService: VehicleService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(7,2) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.vehicleService\n    .getVehicleList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.vehicles = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"'Vehicle List'\" [subTitle]=\"'Manage your vehicles'\"\n  (refresh)=\"getList()\">\n  <large-screen>\n    <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n      <thead class=\"thead\">\n        <tr>\n          <th class=\"sr\" colspan=\"2\">#</th>\n          <th matRipple mat-sort-header=\"basicInfo.customName\">\n            Custom Name\n            <mat-icon>directions_bus</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.registrationNo\">\n            Registration No\n            <mat-icon>directions_bus</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.seatCapacity\">\n            Seat Capacity\n            <mat-icon>airline_seat_recline_normal</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.vehicleTypeId\">\n            Type<mat-icon>commute</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.fuelTypeId\">\n            Fuel Type<mat-icon>local_gas_station</mat-icon>\n          </th>\n          <th class=\"action\">\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"tr\" *ngFor=\"let vehicle of vehicles; let idx = index\">\n          <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n          <td> </td>\n          <td>{{vehicle.basicInfo.customName}}</td>\n          <td>{{vehicle.basicInfo.registrationNo}}</td>\n          <td>{{vehicle.basicInfo.seatCapacity}}</td>\n          <td>{{vehicle.basicInfo.vehicleTypeId | masterData : 'vehicleType'}}</td>\n          <td>{{vehicle.basicInfo.fuelTypeId | masterData : 'fuelType'}}</td>\n          <td class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Vehicle'\" class=\"icon-view\" (click)=\"viewClicked(vehicle._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Vehicle'\" class=\"icon-edit\" (click)=\"editClicked(vehicle._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Vehicle'\" class=\"icon-delete\"\n              (click)=\"deleteClicked(vehicle._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </large-screen>\n\n  <small-screen class=\"default-font\">\n    <ng-container *ngFor=\"let vehicle of vehicles; let idx = index; let odd = odd\">\n      <card [childCard]=\"true\" [header]=\"false\">\n        <row gap=\"2px\">\n          <div fxFlex=\"30%\">\n            <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n          </div>\n          <div fxFlex class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Vehicle'\" class=\"big-icon-view\"\n              (click)=\"viewClicked(vehicle._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Vehicle'\" class=\"big-icon-edit\"\n              (click)=\"editClicked(vehicle._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Vehicle'\" class=\"big-icon-delete\"\n              (click)=\"deleteClicked(vehicle._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </div>\n        </row>\n        <br>\n        <row gap=\"20px\">\n          <div fxFlex=\"60%\">\n            <div>\n              <mat-icon>directions_bus</mat-icon>Custom Name\n            </div>\n            <div class=\"small-screen-data\">\n              {{vehicle.basicInfo.customName}}\n            </div>\n            <br>\n            <div>\n              <mat-icon>directions_bus</mat-icon>Vehicle No\n            </div>\n            <div class=\"small-screen-data\">\n              {{vehicle.basicInfo.registrationNo}}\n            </div>\n            <br>\n            <div>\n              <mat-icon>commute</mat-icon>Type\n            </div>\n            <div class=\"small-screen-data\">\n              {{vehicle.basicInfo.vehicleTypeId | masterData : 'vehicleType'}}\n            </div>\n          </div>\n          <div>\n            <div>\n              <mat-icon>local_gas_station</mat-icon>Fuel\n            </div>\n            <div class=\"small-screen-data\">\n              {{vehicle.basicInfo.fuelTypeId | masterData : 'fuelType'}}\n            </div>\n            <br>\n            <div>\n              <mat-icon>airline_seat_recline_normal</mat-icon>Seats\n            </div>\n            <div class=\"small-screen-data\">\n              {{vehicle.basicInfo.seatCapacity}}\n            </div>\n          </div>\n        </row>\n      </card>\n      <br>\n    </ng-container>\n  </small-screen>\n  <no-record-found *ngIf=\"vehicles.length ==0\"></no-record-found>\n  <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n    [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\" (page)=\"pagingClicked($event)\">\n  </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { VehicleService } from '../../services/vehicle.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { VehicleListComponent } from '../vehicle-list/vehicle-list.component';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'vehicle-management',\n  templateUrl: './vehicle-management.component.html',\n  styleUrls: ['./vehicle-management.component.css']\n})\nexport class VehicleManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(VehicleListComponent) private _ListPage: VehicleListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n\n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n  public editPermissions = false\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Registration No\",\n      inputType: \"text\",\n      name: \"registrationNo\",\n      icon: \"directions_bus\"\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Vehicle Type\",\n      name: \"vehicleTypeId\",\n      icon: \"commute\",\n      options: this.masterData.vehicleTypes\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Fuel Type\",\n      name: \"fuelTypeId\",\n      icon: \"local_gas_station\",\n      options: this.masterData.fuelTypes\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Is Rental\",\n      name: \"isRental\",\n      icon: \"local_taxi\",\n      options: this.masterData.booleanFlag\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Is Only For Office\",\n      name: \"isOnlyForOffice\",\n      icon: \"emoji_transportation\",\n      options: this.masterData.booleanFlag\n    }\n  ];\n\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private vehicleService: VehicleService,\n    private plService: PostLoginService\n  ) {\n    this.searchForm = this.fb.group({})    \n    this.editPermissions = this.plService.getPageEntitlements(7,2) === 2\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteVehiclePermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Vehicle'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.vehicleService.deleteVehicle(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<responsive colGap=\"50px\">\r\n    <div fxFlex=\"30\">\r\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\r\n            class=\"btn\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\r\n            <mat-icon>commute</mat-icon> Add New Vehicle\r\n        </button>\r\n    </div>\r\n    <div fxFlex>\r\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Vehicle'\">\r\n            <card [header]=\"false\">\r\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\r\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\r\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\r\n                </form>\r\n            </card>\r\n        </card-bottom>\r\n    </div>\r\n</responsive>\r\n\r\n<responsive>\r\n    <div>\r\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" class=\"btn\"\r\n            mat-raised-button appToolTip=\"'Go back to Vehicle List'\" matTooltipShowDelay=\"100\"\r\n            matTooltipHideDelay=\"100\">\r\n            <mat-icon>keyboard_return</mat-icon> Back to Vehicle List\r\n        </button>\r\n    </div>\r\n</responsive>\r\n<br><br>\r\n\r\n<app-new-vehicle *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\r\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-vehicle>\r\n<app-vehicle-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\r\n    (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-vehicle-list>\r\n\r\n<p>\r\n    <button type=\"button\" *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\"\r\n        type=\"button\" (click)=\"deleteVehiclePermanently()\">\r\n        <mat-icon>delete_forever</mat-icon> Delete And Save\r\n    </button>\r\n</p>"]}