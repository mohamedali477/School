{"version":3,"sources":["webpack:///src/app/post-login/dashboard/dashboard-routing.module.ts","webpack:///src/app/post-login/dashboard/dashboard.module.ts","webpack:///src/app/post-login/dashboard/default-dashboard/default-dashboard.component.ts","webpack:///src/app/post-login/dashboard/default-dashboard/default-dashboard.component.html","webpack:///src/app/post-login/dashboard/notice-board/notice-board.component.ts","webpack:///src/app/post-login/dashboard/notice-board/notice-board.component.html","webpack:///src/app/post-login/dashboard/services/dashboard.service.ts","webpack:///src/app/post-login/dashboard/time-table/time-table.component.ts","webpack:///src/app/post-login/dashboard/time-table/time-table.component.html"],"names":["routes1","path","component","outlet","DashboardRoutingModule","forChild","imports","exports","DashboardModule","declarations","providers","DefaultDashboardComponent","dashboardService","plService","sharedService","router","unsubscribe$","isLoading","guardianCount","studentCount","employeeCount","schoolEvent","schoolExam","editPermissions","masterData","getPageEntitlements","getStuGuardianEmpCount","configureAutoRefresh","pipe","subscribe","val","getCounts","result","attendanceData","segregateStrengthCountResults","studentRatingData","error","forEach","item","calculateGenderWiseCount","source","obj","totalCount","element","type","navigateByUrl","next","complete","selector","templateUrl","styleUrls","NoticeBoardComponent","hide","mainForm","fetchNoticeBoard","data","console","log","fieldsConfig","isViewMode","label","inputType","name","value","validations","required","getNoticeBoard","setupNoticeConfig","openSnackBar","event","markAllAsTouched","preventDefault","stopPropagation","valid","saveNoticeBoard","onSubmit","DashboardService","http","apiPrefix","get","apiUrl","post","TimeTableComponent","sharedApiService","today","Date","getDay","getClasses","getClassSubjectSectionDdl","classes"],"mappings":"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","file":"default~dashboard-dashboard-module~post-login-dashboard-dashboard-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DefaultDashboardComponent } from './default-dashboard/default-dashboard.component';\nimport { NoticeBoardComponent } from './notice-board/notice-board.component';\nimport { TimeTableComponent } from './time-table/time-table.component';\n\nconst routes1: Routes = [\n  {\n    path: \"default\",\n    component: DefaultDashboardComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: \"noticeBoard\",\n    component: NoticeBoardComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: \"timeTable\",\n    component: TimeTableComponent,\n    outlet:'postLoginOutlet'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes1)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DefaultDashboardComponent } from './default-dashboard/default-dashboard.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { NoticeBoardComponent } from './notice-board/notice-board.component';\nimport { DashboardService } from './services/dashboard.service';\nimport { TimeTableComponent } from './time-table/time-table.component';\n\n@NgModule({\n  declarations: [DefaultDashboardComponent, NoticeBoardComponent, TimeTableComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    SharedModule\n  ],\n  providers: [DashboardService]\n})\nexport class DashboardModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardService } from '../services/dashboard.service';\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { MasterData } from '@env/environment';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-default-dashboard',\n  templateUrl: './default-dashboard.component.html',\n  styleUrls: ['./default-dashboard.component.css']\n})\nexport class DefaultDashboardComponent implements OnInit , OnDestroy {\n\n  private unsubscribe$ = new Subject();\n  \n  isLoading = false\n  guardianCount = null\n  studentCount = null\n  employeeCount = null\n  schoolEvent = null\n  schoolExam = null\n\n  public editPermissions = false\n  public masterData = MasterData\n  public attendanceData\n  public studentRatingData\n\n  constructor(\n    private dashboardService: DashboardService,\n    private plService: PostLoginService,\n    public sharedService: SharedService,\n    private router: Router\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(1,1) === 2\n   }\n\n  ngOnInit() {\n\n    this.getStuGuardianEmpCount();\n    this.configureAutoRefresh();    \n  }\n\n  configureAutoRefresh(){\n    interval(3000 * 1000) // calling function after every 3000 seconds\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe((val) => { \n      if(!this.isLoading)\n      {\n       // this.getStuGuardianEmpCount();\n      }\n    });\n  }\n\n  getStuGuardianEmpCount() {\n    this.isLoading = true\n    this.dashboardService.getCounts()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result) => {\n          this.attendanceData = result[\"attendanceCount\"]\n          this.segregateStrengthCountResults(result[\"strengthCount\"])\n          this.studentRatingData = result[\"studentRatingCount\"]\n          this.schoolEvent = result[\"schoolEvent\"]\n          this.schoolExam = result[\"schoolExam\"]\n          this.isLoading = false\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      )\n  }  \n\n  segregateStrengthCountResults(result) {\n    result.forEach(item => {\n      switch (item[\"data\"]) {\n        case \"guardian\":\n          {\n            this.guardianCount = this.calculateGenderWiseCount(item[\"count\"])\n            break;\n          }\n        case \"student\":\n          {\n            this.studentCount = this.calculateGenderWiseCount(item[\"count\"])\n            break;\n          }\n        case \"employee\":\n          {\n            this.employeeCount = this.calculateGenderWiseCount(item[\"count\"])\n            break;\n          }\n      }\n    });\n  }\n\n  calculateGenderWiseCount(source): any{\n    let obj = {}\n    obj[\"femaleCount\"] = 0\n    obj[\"maleCount\"] = 0\n    obj[\"othersCount\"] = 0\n\n    let totalCount = 0\n    source.forEach(element => {\n      switch(element[\"_id\"][\"genderId\"]){\n        case 0:\n          {\n            obj[\"femaleCount\"] = element[\"count\"]\n            totalCount = totalCount + element[\"count\"]\n            break\n        }\n        case 1:\n          {\n            obj[\"maleCount\"] = element[\"count\"]\n            totalCount = totalCount + element[\"count\"]\n            break\n        }\n        case 2:\n          {\n            obj[\"othersCount\"] = element[\"count\"]\n            totalCount = totalCount + element[\"count\"]\n            break\n        }\n      }      \n    });\n\n    obj[\"total\"] = totalCount\n\n    return obj\n\n  }\n\n  countCardViewClicked(type){\n    switch(type)\n    {\n      case \"guardian\":{\n        this.router.navigateByUrl(\"pl/secure/studentguardian/(postLoginOutlet:guardianMgmt)\")\n        break\n      }\n      case \"student\":{\n        this.router.navigateByUrl(\"pl/secure/studentguardian/(postLoginOutlet:studentMgmt)\")\n        break\n      }\n      case \"employee\":{\n        this.router.navigateByUrl(\"pl/secure/employee/(postLoginOutlet:empmgmt)\")\n        break\n      }\n      case \"studentAttendance\" :{\n        this.router.navigateByUrl(\"pl/secure/attendance/(postLoginOutlet:markStuAttendance)\")\n        break\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<div class=\"dashboard-container\">\r\n<ng-container *ngIf=\"!isLoading\">\r\n    <responsive [gap]=\"'20%'\" [colGap]=\"'14%'\">\r\n        <dashboard-box fxFlex [open]=\"true\" [icon]=\"'group_work'\" [title]=\"'Upcoming events in next 10 days'\"\r\n            [bgColor]=\"'orangered'\" [color]=\"'white'\" >\r\n            <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\r\n                <mat-expansion-panel class=\"no-shadow\" *ngFor=\"let event of schoolEvent; let idx = index\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            <span>{{idx+1}}. {{event.eventName}}</span>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div style=\"font-size: 12px; text-align: left;\">\r\n                        From <b>{{event.fromDate | date}}</b> to <b>{{event.toDate | date}}</b>\r\n                        <br>\r\n                        {{event.description}}\r\n                    </div>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n            <no-record-found *ngIf=\"schoolEvent?.length == 0\"></no-record-found>\r\n        </dashboard-box>\r\n        <dashboard-box fxFlex [open]=\"true\" [icon]=\"'local_library'\" [title]=\"'Upcoming Exams in next 10 days'\" [bgColor]=\"'#ff9999'\"\r\n            [color]=\"'#333'\" >\r\n            <exam-accordian [schoolExam]=\"schoolExam\"></exam-accordian>\r\n            <no-record-found *ngIf=\"schoolExam?.length == 0\"></no-record-found>\r\n        </dashboard-box>\r\n    </responsive>\r\n    <div class=\"box-row-gap\"></div>\r\n    <responsive [gap]=\"'20%'\" [colGap]=\"'14%'\" class=\"center-boxes\">\r\n        <overall-attendance-count-chart fxFlex [open]=\"false\" [eyeButton]=\"editPermissions\"\r\n            [title]=\"'Today attendance status'\" [attendanceRawData]=\"attendanceData\">\r\n        </overall-attendance-count-chart>\r\n        <overall-rating-count-chart fxFlex [open]=\"false\" [title]=\"'Current rating status'\"\r\n            [ratingRawData]=\"studentRatingData\">\r\n        </overall-rating-count-chart>\r\n    </responsive>\r\n    <div class=\"box-row-gap\"></div>\r\n    <responsive [gap]=\"'20%'\" [colGap]=\"'14%'\" class=\"center-boxes\">\r\n        <dashboard-box fxFlex [open]=\"false\" [icon]=\"'person'\" [title]=\"'Total number of Employees'\"\r\n            [value]=\"employeeCount.total\" [bgColor]=\"'#319E1C'\" [color]=\"'white'\" \r\n            [bgImage]=\"'bg-call-center'\">\r\n            <div *ngIf=\"editPermissions\">\r\n                <mat-icon class=\"pointer\" mat-icon-button (click)=\"countCardViewClicked('employee')\">\r\n                    visibility\r\n                </mat-icon>\r\n            </div>\r\n            <div class=\"countDetails\" fxLayout=\"row\">\r\n                <div fxFlex>\r\n                    Male\r\n                    <br> {{employeeCount.maleCount}}\r\n                </div>\r\n                <div fxFlex>\r\n                    Female\r\n                    <br> {{employeeCount.femaleCount}}\r\n                </div>\r\n                <div fxFlex>\r\n                    Others\r\n                    <br> {{employeeCount.othersCount}}\r\n                </div>\r\n            </div>\r\n            <br><br>\r\n            <div>\r\n                <app-chart [chartLabels]=\"['Male', 'Female', 'Others']\"\r\n                    [chartData]=\"[employeeCount.maleCount, employeeCount.femaleCount, employeeCount.othersCount]\">\r\n                </app-chart>\r\n            </div>\r\n        </dashboard-box>\r\n        <dashboard-box fxFlex [open]=\"false\" [icon]=\"'child_care'\" [title]=\"'Total number of Students'\"\r\n            [value]=\"studentCount.total\" [bgColor]=\"'#ff00e0'\" [color]=\"'white'\" \r\n            [bgImage]=\"'bg-falling-kids'\">\r\n            <div *ngIf=\"editPermissions\">\r\n                <mat-icon class=\"pointer\" mat-icon-button (click)=\"countCardViewClicked('student')\">\r\n                    visibility\r\n                </mat-icon>\r\n            </div>\r\n            <div class=\"countDetails\" fxLayout=\"row\">\r\n                <div fxFlex>\r\n                    Male\r\n                    <br> {{studentCount.maleCount}}\r\n                </div>\r\n                <div fxFlex>\r\n                    Female\r\n                    <br> {{studentCount.femaleCount}}\r\n                </div>\r\n                <div fxFlex>\r\n                    Others\r\n                    <br> {{studentCount.othersCount}}\r\n                </div>\r\n            </div>\r\n            <br><br>\r\n            <div>\r\n                <app-chart [chartLabels]=\"['Male', 'Female', 'Others']\"\r\n                    [chartData]=\"[studentCount.maleCount, studentCount.femaleCount, studentCount.othersCount]\">\r\n                </app-chart>\r\n            </div>\r\n        </dashboard-box>\r\n    </responsive>\r\n    <div class=\"box-row-gap\"></div>\r\n    <responsive [gap]=\"'20%'\" [colGap]=\"'14%'\" class=\"center-boxes\">\r\n        <dashboard-box fxFlex [open]=\"false\" [icon]=\"'wc'\" [title]=\"'Total number of Guardians'\"\r\n            [value]=\"guardianCount.total\" [bgColor]=\"'#2D4059'\" [color]=\"'white'\"  [bgImage]=\"'bg-yee'\">\r\n            <div *ngIf=\"editPermissions\">\r\n                <mat-icon class=\"pointer\" mat-icon-button (click)=\"countCardViewClicked('guardian')\">\r\n                    visibility\r\n                </mat-icon>\r\n            </div>\r\n            <div class=\"countDetails\" fxLayout=\"row\">\r\n                <div fxFlex>\r\n                    Male\r\n                    <br> {{guardianCount.maleCount}}\r\n                </div>\r\n                <div fxFlex>\r\n                    Female\r\n                    <br> {{guardianCount.femaleCount}}\r\n                </div>\r\n                <div fxFlex>\r\n                    Others\r\n                    <br> {{guardianCount.othersCount}}\r\n                </div>\r\n            </div>\r\n            <br><br>\r\n            <div>\r\n                <app-chart [chartLabels]=\"['Male', 'Female', 'Others']\"\r\n                    [chartData]=\"[guardianCount.maleCount, guardianCount.femaleCount, guardianCount.othersCount]\">\r\n                </app-chart>\r\n            </div>\r\n        </dashboard-box>        \r\n        <div fxFlex></div>\r\n    </responsive>\r\n</ng-container>\r\n</div>\r\n\r\n<div *ngIf=\"isLoading\">\r\n    <br><br>\r\n    <app-loader></app-loader>\r\n    <br>\r\n    <img class=\"loadingImage\"\r\n        src=\"https://cdn.dribbble.com/users/1047147/screenshots/3304587/school-trips-icons-dribbble-trimmed_1.gif\">\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { FormGroup } from '@angular/forms';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { DashboardService } from '../services/dashboard.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-notice-board',\n  templateUrl: './notice-board.component.html',\n  styleUrls: ['./notice-board.component.css']\n})\nexport class NoticeBoardComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  public fieldsConfig: FieldConfig[]\n\n  hide = true;\n  isLoading = false\n\n  public mainForm: FormGroup = new FormGroup({})\n  public editPermissions = false\n  public masterData = MasterData\n\n  constructor(\n    private sharedService: SharedService,\n    private plService: PostLoginService,\n    private dashboardService: DashboardService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(1, 2) === 2\n    this.fetchNoticeBoard()\n  }\n\n  ngOnInit() { }\n\n  setupNoticeConfig(data){    \n    console.log(data)\n    this.fieldsConfig = [\n      {\n        isViewMode: !this.editPermissions,\n        type: \"richTextBox\",\n        label: \"\",\n        inputType: \"richTextBox\",\n        name: \"notice\",\n        value: data,\n        validations: [validationType.required()]\n      }\n    ]\n  }\n\n  fetchNoticeBoard(){\n    this.isLoading = true\n\n    this.dashboardService.getNoticeBoard()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result) => {          \n          console.log(result)\n          this.isLoading = false\n\n          let data = result[0]? result[0][\"notice\"] : null\n          this.setupNoticeConfig(data)\n        },\n        (error) => {          \n          this.isLoading = false\n          this.sharedService.openSnackBar(\"Sorry! Notice Board didn't get fetched.\", \"x\", \"fail\")\n        }\n      )\n  }\n\n\n  onSubmit(event) {\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true;\n      this.dashboardService.saveNoticeBoard(this.mainForm.value)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result) => {          \n          this.isLoading = false\n          this.sharedService.openSnackBar(\"Notice Board get saved successfully.\", \"x\", \"success\")\n        },\n        (error) => {\n          this.isLoading = false\n          this.sharedService.openSnackBar(\"Sorry! Notice Board didn't get saved.\", \"x\", \"fail\")\n        }\n      )\n    }\n    else {\n      this.sharedService.openSnackBar(\"Please enter something in message or notice.\", \"x\", \"fail\")\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [icon]=\"'gradient'\" [title]=\"'Notice Board'\" [subTitle]=\"'Please give any message or notice for whole school.'\" [bgImage]=\"'bg-google-phone'\"\n[loading]=\"isLoading\" [cardButtons]=\"false\" fxFlex>\n  <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\">\n    <br>\n    <dynamic-form *ngIf=\"fieldsConfig\" [onlyColumn]=\"true\" [form]=\"mainForm\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>\n    <form-buttons *ngIf=\"editPermissions\" [form]=\"mainForm\"></form-buttons>\n  </form>\n</card>","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n\r\n    apiPrefix = \"api/dashboard/\"\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) {}\r\n\r\n    getCounts() {\r\n        return this.http.get(environment.apiUrl + this.apiPrefix + \"schoolStrengthAndAttendanceCount\")\r\n    }\r\n\r\n    saveNoticeBoard(data){\r\n        return this.http.post(environment.apiUrl + this.apiPrefix + \"saveNoticeBoard\", data)\r\n    }\r\n\r\n    getNoticeBoard(){\r\n        return this.http.get(environment.apiUrl + this.apiPrefix + \"getNoticeBoard\")\r\n    }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\n\n@Component({\n  selector: 'app-time-table',\n  templateUrl: './time-table.component.html',\n  styleUrls: ['./time-table.component.css']\n})\nexport class TimeTableComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  \n  public isLoading\n  public classes\n  public masterData = MasterData\n  public today = (new Date()).getDay()\n  \n  constructor(\n    private sharedApiService: SharedApiService\n  ) {\n    this.getClasses()\n   }\n\n  ngOnInit(): void {\n  }\n\n  getClasses() {\n    this.isLoading = true\n    this.sharedApiService.getClassSubjectSectionDdl()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result) => {\n          this.classes = result\n          this.isLoading = false\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      )\n  }  \n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<div class=\"custom-page-mainDiv\">\n    <span class=\"custom-page-header\">\n      <mat-icon>watch_later</mat-icon>  Class wise Time Table\n    </span>\n    <br><br>\n    <div>\n        <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n            <ng-container *ngFor=\"let cls of classes;\">\n                <mat-expansion-panel class=\"no-shadow mycustom-panel\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            <span class=\"tt-title\">\n                                <b>{{cls.name}}</b>\n                            </span>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"section-tabs\">\n                        <mat-button-toggle-group #selectedSectionToggleButton=\"matButtonToggleGroup\"\n                            [value]=\"cls.classSection[0]\">\n                            <mat-button-toggle *ngFor=\"let sectionId of cls.classSection;\" [value]=\"sectionId\">\n                                <span class=\"section-name\">Section {{sectionId | masterData : 'classsections'}}</span>\n                            </mat-button-toggle>\n                        </mat-button-toggle-group>\n                    </div>\n\n                    <div class=\"section-details\">\n                        <table class=\"table\">\n                            <thead class=\"thead\">\n                                <tr>\n                                    <th>\n                                        <mat-icon>menu_book</mat-icon>\n                                    </th>\n                                    <th style=\"min-width: 100px;\" *ngFor=\"let day of masterData.days\">\n                                        <span class=\"blink-animate\" *ngIf=\"day.id === today\">\n                                            <mat-icon>wb_sunny</mat-icon>\n                                        </span>\n                                        {{day.fullName}}\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container *ngFor=\"let sub of cls.subject\">\n                                    <tr class=\"tr appear-animate\"\n                                        *ngIf=\"sub.sectionId === selectedSectionToggleButton.value\">\n                                        <td class=\"td bold\">{{sub._id | subject}}</td>\n                                        <ng-container *ngFor=\"let day of masterData.days\">\n                                            <td class=\"td\" [ngClass]=\"{'today-tt': day.id === today}\">\n                                                <ng-container *ngFor=\"let teachingDayId of sub.teachingDays\">\n                                                    <span *ngIf=\"day.id === teachingDayId\">\n                                                        {{sub.fromTime}} - {{sub.toTime}}\n                                                        <user-small-pic [userId]=\"sub.teacherId\"></user-small-pic>\n                                                    </span>\n                                                </ng-container>\n                                            </td>\n                                        </ng-container>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </mat-expansion-panel>\n            </ng-container>\n        </mat-accordion>\n    </div>\n</div>"]}