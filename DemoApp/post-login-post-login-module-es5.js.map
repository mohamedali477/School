{"version":3,"sources":["webpack:///src/app/post-login/components/agenda-calendar/agenda-calendar.component.ts","webpack:///src/app/post-login/components/agenda-calendar/agenda-calendar.component.html","webpack:///src/app/post-login/components/exam-calendar/exam-calendar.component.ts","webpack:///src/app/post-login/components/exam-calendar/exam-calendar.component.html","webpack:///src/app/post-login/components/holiday-calendar/holiday-calendar.component.ts","webpack:///src/app/post-login/components/holiday-calendar/holiday-calendar.component.html","webpack:///src/app/post-login/components/select-school-branch/select-school-branch.component.ts","webpack:///src/app/post-login/components/select-school-branch/select-school-branch.component.html","webpack:///src/app/post-login/components/user-settings/user-settings.component.ts","webpack:///src/app/post-login/components/user-settings/user-settings.component.html","webpack:///src/app/post-login/post-login-footer/post-login-footer.component.ts","webpack:///src/app/post-login/post-login-footer/post-login-footer.component.html","webpack:///src/app/post-login/post-login-header/post-login-header.component.ts","webpack:///src/app/post-login/post-login-header/post-login-header.component.html","webpack:///src/app/post-login/post-login-menu/menu-user-profile/menu-user-profile.component.ts","webpack:///src/app/post-login/post-login-menu/menu-user-profile/menu-user-profile.component.html","webpack:///src/app/post-login/post-login-menu/post-login-menu.component.ts","webpack:///src/app/post-login/post-login-menu/post-login-menu.component.html","webpack:///src/app/post-login/post-login-routing.module.ts","webpack:///src/app/post-login/post-login.module.ts","webpack:///src/app/post-login/post-login/post-login.component.ts","webpack:///src/app/post-login/post-login/post-login.component.html"],"names":["AgendaCalendarComponent","changeDetector","sharedApiService","unsubscribe$","editEventId","showAddEventDetailsPopUp","masterData","isLoading","dateValue","events","event","loadAgendaFromDB","getSchoolEventByDate","pipe","subscribe","result","error","console","log","detectChanges","next","complete","dateClicked","selector","templateUrl","styleUrls","ExamCalendarComponent","sharedService","schoolExam","HolidayCalendarComponent","loadHolidayDataFromDB","holidayYear","Date","getFullYear","sectionTitle","startDate","endDate","setHours","getSchoolHolidayByDateRange","schoolHolidays","SelectSchoolBranchComponent","schools","viewUser","getList","getSchoolBranchDdl","schoolId","schoolBranchId","currentSchoolId","currentSchoolBranchId","UserSettingsComponent","sortObject","bgImages","CurrentUserId","currentUserRoleId","document","documentElement","style","setProperty","websiteMainColor","websiteBgImage","changeWebsiteTheme","PostLoginFooterComponent","PostLoginHeaderComponent","_storage","plService","toggleSideMenu","showCalendar","showNotificationBox","showMessageBox","showSettingsBox","isUserLogin","showSchoolBranchDropdown","settingsForm","hasMultipleRoles","countMessages","countNotifications","logIn$","isLogin","closeAllNotificationBoxes","emit","dialogRef","openConfirmDialog","afterClosed","confirmed","logOut","src","navigateToMyProfile","data","showErrorMessages","outlineFields","expendMultiple","multipleMenuOpen","formAnimation","lineChartBgColor","lineChartPointRadius","saveUserSettings","openSnackBar","userId","serializeMongoObjectId","restoreDefaultSettings","mapUserSettings","switchRole","toggleMenu","MenuUserProfileComponent","loadUserProfilePic","profilePicPath","ftpUrl","getUserProflePicDirectory","now","value","closeSideMenu","onProfilePicChange","myProfile","PostLoginMenuComponent","router","onlyIcons","AllDefaultMenuData","menuList","getUserRoleDdl","currentRoleEntitlements","filter","x","setRoleWiseMenu","closeAllMenus","roleEntitlements","currentUserRoleEntitlements","superAdminRoleId","isSuperAdmin","accessTypeId","forEach","validMenu","filteredMenu","filterMenusAndSubmenu","push","validRoleMenu","menu","defaultMenu","find","pageId","name","icon","modelUrl","subPage","map","element","validSubMenu","subPageId","object","length","url","navigateByUrl","routes","path","component","children","loadChildren","then","m","DashboardModule","canActivate","StudentGuardianModule","SchoolModule","ExamModule","TransportModule","EmployeeModule","AttendanceModule","RatingModule","FinanceModule","PostLoginRoutingModule","forChild","imports","exports","PostLoginModule","declarations","providers","PostLoginComponent","_storageService","showShideNav","isLoadingPage","reloadAllMasterDataFromDB","allMasterDataLoaded","menuClickShowLoading","isSuccess","deactivateRoute","e","snapshot","outlet","deactivate","header","location","reload","width","window","innerWidth","clientWidth","body","message","action"],"mappings":"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","file":"post-login-post-login-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MasterData } from '@env/environment';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\n\n@Component({\n  selector: 'agenda-calendar',\n  templateUrl: './agenda-calendar.component.html',\n  styleUrls: ['./agenda-calendar.component.css']\n})\nexport class AgendaCalendarComponent implements OnInit, OnDestroy, AfterViewChecked {\n  private unsubscribe$ = new Subject();\n  \n  public editEventId = null\n  public showAddEventDetailsPopUp = false\n  public masterData = MasterData\n  public isLoading = false\n  public dateValue = null\n  public events = null\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private sharedApiService : SharedApiService\n  ) {}\n\n  ngOnInit() {\n  }\n\n  dateClicked(event){\n    this.dateValue = event  \n    this.loadAgendaFromDB()  \n  }\n\n  loadAgendaFromDB(){\n    this.isLoading = true\n\n      this.sharedApiService.getSchoolEventByDate(this.dateValue)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.events = result[\"schoolEvent\"]\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [loading]=\"isLoading\" [childCard]=\"true\" [header]=\"false\">\n  <app-calendar (selectedDate)=\"dateClicked($event)\">\n    <div class=\"agenda-box\">\n      <div>\n        <b>Agenda </b><span class=\"agenda-date\">for <b>{{dateValue | date:'fullDate'}}</b></span>\n        <hr>\n      </div>\n      <no-record-found *ngIf=\"events?.length==0\"></no-record-found>\n      <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n        <mat-expansion-panel class=\"no-shadow\" *ngFor=\"let event of events; let idx = index\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <span>{{idx+1}}. {{event.eventName}}</span>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <div>\n            From <b>{{event.fromDate | date}}</b> to <b>{{event.toDate | date}}</b>\n          </div>\n          <br>\n          <div>\n            {{event.description}}\n          </div>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n  </app-calendar>\n</card>\n\n<br><br>\n\n<responsive>\n  <div fxFlex>\n    \n  </div>\n  <div fxFlex>\n    <holiday-calendar></holiday-calendar>\n  </div>\n</responsive>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'exam-calendar',\n  templateUrl: './exam-calendar.component.html',\n  styleUrls: ['./exam-calendar.component.css']\n})\nexport class ExamCalendarComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Input() schoolExam = null\n  \n  public masterData = MasterData\n  public isLoading = false\n\n  constructor(\n    public sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    \n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<exam-accordian [schoolExam]=\"schoolExam\"></exam-accordian>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\n\n@Component({\n  selector: 'holiday-calendar',\n  templateUrl: './holiday-calendar.component.html',\n  styleUrls: ['./holiday-calendar.component.css']\n})\nexport class HolidayCalendarComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  \n  public masterData = MasterData\n  public isLoading = false\n  public schoolHolidays\n\n  public sectionTitle\n  public startDate\n  public endDate\n\n  constructor(\n    private sharedApiService : SharedApiService,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    this.loadHolidayDataFromDB()\n  }\n\n\n  loadHolidayDataFromDB(){\n\n    let holidayYear = new Date().getFullYear()\n    this.sectionTitle = \"Holiday list for year \"+holidayYear\n    \n    this.startDate = new Date(2020,0,1)\n    this.endDate = new Date(2020,11,31)\n\n    this.startDate = this.startDate.setHours(0, 0, 0, 0)\n    this.endDate = this.endDate.setHours(0, 0, 0, 0)\n\n    this.isLoading = true\n\n      this.sharedApiService.getSchoolHolidayByDateRange(this.startDate, this.endDate)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.schoolHolidays = result[\"schoolHoliday\"]\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n        \n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [header]=\"false\" [childCard]=\"true\" [loading]=\"isLoading\" >\n<app-section [title]=\"sectionTitle\" icon=\"deck\">\n        <no-record-found *ngIf=\"schoolHolidays?.length==0\"></no-record-found>\n        <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n            <mat-expansion-panel class=\"no-shadow\" *ngFor=\"let holiday of schoolHolidays; let idx = index\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                       <span>{{holiday.holidayDate | date :  'fullDate'}}</span>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div>\n                    <b>{{holiday.holidayName}}</b>\n                </div>\n                <div class=\"description\">\n                    {{holiday.description}}\n                </div>\n            </mat-expansion-panel>\n        </mat-accordion>\n</app-section>\n</card>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\n\n@Component({\n  selector: 'app-select-school-branch',\n  templateUrl: './select-school-branch.component.html',\n  styleUrls: ['./select-school-branch.component.css']\n})\nexport class SelectSchoolBranchComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  isLoading = false;\n\n  schools = [];\n\n  viewUserId : any\n  viewUser = false\n\n  constructor(\n    private sharedApiService: SharedApiService,\n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    this.sharedApiService.getSchoolBranchDdl()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {       \n        this.isLoading =false\n        this.schools = result      \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n  schoolBranchClicked(schoolId, schoolBranchId){\n    this.sharedService.currentSchoolId(schoolId)\n    this.sharedService.currentSchoolBranchId(schoolBranchId)\n  }\n\n}\n","<mat-form-field fxFlex>\n  <mat-label></mat-label>\n  <mat-select style=\"text-align: center;\">\n    <mat-option *ngFor=\"let school of schools\" [value]=\"school._id\">\n      {{school.name}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>","import { Component, OnInit } from '@angular/core';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.css']\n})\nexport class UserSettingsComponent implements OnInit {\n\n  masterData = MasterData\n  public CurrentUserId\n  public currentUserRoleId\n\n  constructor(    \n    private sharedService: SharedService\n  ) {      \n      this.sharedService.sortObject(this.masterData.bgImages, \"name\")\n      this.CurrentUserId = this.sharedService.CurrentUserId()\n      this.currentUserRoleId = this.sharedService.currentUserRoleId()\n  }\n\n  ngOnInit(): void {\n  }  \n\n  changeWebsiteTheme() {\n    document.documentElement.style.setProperty('--main-color', this.masterData.websiteMainColor);\n  }\n\n  changeBgImage(){\n    document.documentElement.style.setProperty('--main-bg-image', this.masterData.websiteBgImage)\n  }\n\n}\n","<div class=\"info-items\">\r\n  <mat-icon class=\"pointer zoom-buttons\" *ngIf=\"masterData.websiteZoom > 80\"\r\n    (click)=\"masterData.websiteZoom = masterData.websiteZoom - 10\">zoom_out</mat-icon>\r\n  <span class=\"pointer zoom-value\" (click)=\"masterData.websiteZoom = 100\">\r\n    Zoom <b>{{masterData.websiteZoom}}%</b>\r\n  </span>\r\n  <mat-icon class=\"pointer zoom-buttons\" *ngIf=\"masterData.websiteZoom < 150\"\r\n    (click)=\"masterData.websiteZoom = masterData.websiteZoom + 10\">zoom_in</mat-icon>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <row gap=\"10px\">\r\n    <div fxFlex=\"108px\">\r\n      <b>Background:-</b>\r\n    </div>\r\n    <mat-select fxFlex [(ngModel)]=\"this.masterData.websiteBgImage\">\r\n      <ng-container *ngFor=\"let bgImage of masterData.bgImages; let idx = index;\">\r\n        <br>\r\n        <mat-option (click)=\"changeBgImage()\" [value]=\"bgImage.value\">\r\n          <span class=\"bgImagePreview shadow\" [ngStyle]=\"{'background-image' : bgImage.value}\"></span>\r\n          {{bgImage.name}}\r\n        </mat-option>\r\n        <br>\r\n      </ng-container>\r\n    </mat-select>\r\n  </row>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <input type=\"color\" [(ngModel)]=\"masterData.lineChartBgColor\"> Line Chart background color\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <input type=\"color\" [(ngModel)]=\"masterData.websiteMainColor\" (change)=\"changeWebsiteTheme()\"> Website color\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <mat-slide-toggle color=\"primary\" [(ngModel)]=\"masterData.formAnimation\">Form animations</mat-slide-toggle>\r\n</div>\r\n<ng-container *ngIf=\"currentUserRoleId | userRole : 'isSuperAdmin'\">\r\n  <mat-divider></mat-divider>\r\n  <div class=\"info-items\">\r\n    <mat-slide-toggle color=\"primary\" [(ngModel)]=\"masterData.showJson\">Show JSON\r\n    </mat-slide-toggle>\r\n  </div>\r\n</ng-container>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <mat-slide-toggle color=\"primary\" [(ngModel)]=\"masterData.showErrorMessages\">Show error messages\r\n  </mat-slide-toggle>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <mat-slide-toggle color=\"primary\" [(ngModel)]=\"masterData.outlineFields\">Outlined fields</mat-slide-toggle>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <mat-slide-toggle color=\"primary\" [(ngModel)]=\"masterData.expendMultiple\">Expend multiple panel</mat-slide-toggle>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"info-items\">\r\n  <mat-slide-toggle color=\"primary\" [(ngModel)]=\"masterData.multipleMenuOpen\">Kepp multiple menu open\r\n  </mat-slide-toggle>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'post-login-footer',\n  templateUrl: './post-login-footer.component.html',\n  styleUrls: ['./post-login-footer.component.css']\n})\nexport class PostLoginFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<large-screen>\n    <div class=\"appFooter contentBgImage\">\n    </div>\n</large-screen>","import { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { StorageService } from '@app/shared/services/storage.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { MasterData, environment } from '@env/environment';\nimport { PostLoginService } from '../post-login.service';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'post-login-header',\n  templateUrl: './post-login-header.component.html',\n  styleUrls: ['./post-login-header.component.css']\n})\nexport class PostLoginHeaderComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n  @Output() toggleSideMenu: EventEmitter<boolean> = new EventEmitter()\n\n  showCalendar = false\n  showNotificationBox = false\n  showMessageBox = false\n  showSettingsBox = false\n\n  isLoading = false\n  isUserLogin = true\n  masterData = MasterData\n\n  showSchoolBranchDropdown = false\n\n  public settingsForm : FormGroup = new FormGroup({})\n  public profilePicPath: string\n  public hasMultipleRoles = false\n  public CurrentUserId\n  public currentUserRoleId\n\n  constructor(\n    private _storage: StorageService,\n    private sharedService: SharedService,\n    private sharedApiService: SharedApiService,\n    public plService: PostLoginService\n  ) {\n    this.CurrentUserId = this.sharedService.CurrentUserId()\n    this.currentUserRoleId = this.sharedService.currentUserRoleId()\n    this.hasMultipleRoles = plService.hasMultipleRoles()\n  }\n\n  ngOnInit() {\n    this._storage.logIn$\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (isLogin) => {\n          this.isUserLogin = isLogin\n        }\n      )\n  }\n\n\n  countMessages = 0;\n  countNotifications = 10000;\n\n\n  toggleMenu() {\n    this.showCalendar = false\n    this.closeAllNotificationBoxes()\n    this.toggleSideMenu.emit(null)\n  }\n\n  logOut() {\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to Logout.\", \"Yes\", \"No\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((confirmed: boolean) => {\n        if (confirmed) {\n          this._storage.logOut()\n        }\n      });\n  }\n\n  headerInfoBoxClicked(src) {\n\n    this.showCalendar = false\n\n    switch (src) {\n      case 'messages': {\n        this.showMessageBox = !this.showMessageBox;\n        this.showNotificationBox = this.showSettingsBox = false;\n        break;\n      }\n      case 'notifications': {\n        this.showNotificationBox = !this.showNotificationBox;\n        this.showMessageBox = this.showSettingsBox = false;\n        break;\n      }\n      case 'settings': {\n        this.showSettingsBox = !this.showSettingsBox;\n        this.showNotificationBox = this.showMessageBox = false;\n        break;\n      }\n    }\n  }\n\n  calendarClicked() {\n    this.showCalendar = !this.showCalendar\n    this.closeAllNotificationBoxes()\n  }\n\n  myProfile() {\n    this.plService.navigateToMyProfile()\n  }\n\n  closeAllNotificationBoxes() {\n    this.showNotificationBox = this.showMessageBox = this.showSettingsBox = false;\n  }\n\n  saveSettings() {\n    this.isLoading = true\n\n    let data = {\n      \"_id\":  this.CurrentUserId,\n      \"showErrorMessages\" : this.masterData.showErrorMessages,\n      \"outlineFields\" : this.masterData.outlineFields,\n      \"expendMultiple\" : this.masterData.expendMultiple,\n      \"multipleMenuOpen\" : this.masterData.multipleMenuOpen,\n      \"formAnimation\" : this.masterData.formAnimation,\n      \"lineChartBgColor\" : this.masterData.lineChartBgColor,\n      \"lineChartPointRadius\" : this.masterData.lineChartPointRadius,\n      \"websiteMainColor\" : this.masterData.websiteMainColor,\n      \"websiteBgImage\" : this.masterData.websiteBgImage\n    }\n    this.plService.saveUserSettings(data)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          this.sharedService.openSnackBar('Settings get saved successfully.', 'x', 'success', 5000)\n          this.isLoading = false\n          this.showSettingsBox = false\n        },\n        (error) => {\n          this.isLoading = false\n          console.log(error)\n        }\n      );\n  }\n\n  resetSettings(){\n    this.isLoading = true\n    let userId = this.sharedService.serializeMongoObjectId(this.CurrentUserId)\n    this.plService.restoreDefaultSettings(userId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          this.sharedApiService.mapUserSettings(result)\n          this.sharedService.openSnackBar('Settings restored successfully.', 'x', 'success', 5000)\n          this.isLoading = false\n          this.showSettingsBox = false\n        },\n        (error) => {\n          this.isLoading = false\n          console.log(error)\n        }\n      );\n  }\n\n  changeRole() {\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to change the role. Any unsaved data will be removed.\", \"Yes\", \"No\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((confirmed: boolean) => {\n        if (confirmed) {\n          this._storage.switchRole()\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<div class=\"schoolInfo appHeaderTitle\">\n  <span *ngIf=\"!showSchoolBranchDropdown\" class=\"orgName\">\n    <ng-content #schoolBranchName></ng-content>\n  </span>\n  <app-select-school-branch *ngIf=\"showSchoolBranchDropdown\"></app-select-school-branch>\n</div>\n<mat-toolbar class=\"fixedHeader_temp appHeader\">\n  <mat-toolbar-row *ngIf=\"isUserLogin\">\n    <span>\n      <button mat-icon-button appToolTip=\"'Menu'\">\n        <mat-icon (click)=\"toggleMenu()\">menu</mat-icon>\n      </button>\n    </span>\n    <span class=\"fill-space\"></span>\n    <span class=\"bounce-in-animate\">\n      <span fxFlex>\n        <large-screen>\n          <app-button-fullscreen></app-button-fullscreen>\n        </large-screen>\n      </span>\n      <span fxFlex>\n        <button mat-icon-button (click)=\"calendarClicked()\">\n          <mat-icon [ngClass]=\"{'clicked':showCalendar}\">today</mat-icon>\n        </button>\n      </span>\n      <span fxFlex *ngIf=\"false\">\n        <button (click)=\"headerInfoBoxClicked('messages')\" mat-icon-button appToolTip=\"'Messages: '+ countMessages\"\n          matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n          <mat-icon [ngClass]=\"{'clicked':showMessageBox}\" matBadgePosition=\"after\" matBadgeColor=\"warn\"\n            [matBadge]=\"countMessages > 999 ? '1k+' : countMessages\">message</mat-icon>\n        </button>\n      </span>\n      <span fxFlex *ngIf=\"false\">\n        <button (click)=\"headerInfoBoxClicked('notifications')\" mat-icon-button\n          appToolTip=\"'Notifications: '+ countNotifications\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n          <mat-icon [ngClass]=\"{'clicked':showNotificationBox}\" matBadgePosition=\"after\" matBadgeColor=\"warn\"\n            [matBadge]=\"countNotifications > 999 ? '1k+' : countNotifications\">notifications</mat-icon>\n        </button>\n      </span>\n      <span fxFlex>\n        <button (click)=\"myProfile()\" mat-icon-button>\n          <user-small-pic [userId]=\"CurrentUserId\"></user-small-pic>\n        </button>\n      </span>\n      <span fxFlex>\n        <button (click)=\"headerInfoBoxClicked('settings')\" mat-icon-button appToolTip=\"'Settings'\">\n          <mat-icon [ngClass]=\"{'clicked':showSettingsBox}\">settings</mat-icon>\n        </button>\n      </span>\n      <span fxFlex>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </span>\n    </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<app-info-box [title]=\"'Messages'\" *ngIf=\"isUserLogin && showMessageBox\">\n  <div class=\"info-items\">\n    Message list will show here\n  </div>\n  <mat-divider></mat-divider>\n  <div class=\"closeButton\">\n    <button mat-button class=\"btn-cancel padding\" type=\"button\" (click)=\"showMessageBox = false\">\n      <mat-icon>close</mat-icon> Close\n    </button>\n  </div>\n</app-info-box>\n<app-info-box [isNotification]=\"true\" [title]=\"'Notificatios'\" *ngIf=\"isUserLogin && showNotificationBox\">\n  <div class=\"info-items\">\n    Notifications will show here\n  </div>\n  <mat-divider></mat-divider>\n  <div class=\"closeButton\">\n    <button mat-button class=\"btn-cancel padding\" type=\"button\" (click)=\"showNotificationBox = false\">\n      <mat-icon>close</mat-icon> Close\n    </button>\n  </div>\n</app-info-box>\n\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item *ngIf=\"hasMultipleRoles\" (click)=\"changeRole()\">\n    <mat-icon>account_box</mat-icon>Change Role\n  </button>\n  <button mat-menu-item appToolTip=\"'Log out'\" (click)=\"logOut()\">\n    <mat-icon class=\"logout\"></mat-icon>Log out\n  </button>\n</mat-menu>\n\n<card *ngIf=\"isUserLogin && showCalendar\" [popUpMode]=\"true\" [icon]=\"'today'\" [title]=\"'View Calendar and Agenda'\"\n  [refreshButton]=\"false\" (deleteCardEvent)=\"showCalendar = false\">\n  <div>\n    <agenda-calendar></agenda-calendar>\n  </div>\n</card>\n\n<card *ngIf=\"isUserLogin && showSettingsBox\" [popUpMode]=\"true\" [icon]=\"'settings'\" [title]=\"'Settings'\"\n  [refreshButton]=\"false\" (deleteCardEvent)=\"showSettingsBox = false\">\n  <div>\n    <app-user-settings></app-user-settings>\n    <mat-divider></mat-divider>\n    <span *ngIf=\"isLoading\" style=\"margin: 5px;\">\n      <app-loader></app-loader>\n    </span>\n\n    <form [formGroup]=\"settingsForm\" (ngSubmit)=\"saveSettings()\">\n      <form-buttons [form]=\"settingsForm\" (onReset)=\"resetSettings()\" [resetLabel]=\"'Restore'\"\n        [resetMessage]=\"'Dow you want to restore the default settings?'\">\n      </form-buttons>\n    </form>\n  </div>\n</card>\n\n<show-on-scroll position=\"120\">\n    <mat-icon style=\"z-index: 500;\" class=\"jump-animate top-left special-icon pointer\" (click)=\"toggleMenu()\">menu</mat-icon>\n</show-on-scroll>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { StorageService } from '@app/shared/services/storage.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-menu-user-profile',\n  templateUrl: './menu-user-profile.component.html',\n  styleUrls: ['./menu-user-profile.component.css']\n})\nexport class MenuUserProfileComponent implements OnInit {\n\n  private unsubscribe$ = new Subject();\n  @Output() toggleSideMenu: EventEmitter<boolean> = new EventEmitter()\n\n  profilePicPath: string\n\n  constructor(\n    private sharedService: SharedService,\n    private plService: PostLoginService\n  ) {\n    this.loadUserProfilePic()\n  }\n\n  ngOnInit() {\n  }\n\n  loadUserProfilePic() {\n    this.profilePicPath = environment.ftpUrl + this.sharedService.getUserProflePicDirectory() +\n      this.sharedService.serializeMongoObjectId(this.sharedService.CurrentUserId()) + \".png\" + \"?update=\" + Date.now()\n  }\n\n  closeSideMenu(value = null) {\n    this.toggleSideMenu.emit(value)\n  }\n\n  onProfilePicChange(event) {\n    if (event) {\n      this.profilePicPath = this.profilePicPath + \"?update=\" + Date.now()\n      this.closeSideMenu(\"profilePicUpdated\")\n    }\n  }\n\n  myProfile() {\n    this.plService.navigateToMyProfile()\n    this.closeSideMenu('true')\n  }\n\n}","<div class=\"sideNavHeader contentBgImage\">\n\t<row>\n\t\t<span class=\"fill-space\"></span>\n\t<div class=\"userPic\">\n\t\t<form-profile-pic (picChange)=\"onProfilePicChange($event)\"></form-profile-pic>\n\t</div>\n\t<span class=\"fill-space\"></span>\n</row>\n\t<br>\n\t<button color=\"primary\" mat-raised-button type=\"button\" class=\"myProfleLink pointer rt\" (click)=\"myProfile()\">\n\t\t<mat-icon>visibility</mat-icon> My Profile\n\t</button>\n\t<br>\n</div>","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MasterData, defaultMenuListAndEntitlements } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { take } from 'rxjs/operators';\nimport { PostLoginService } from '../post-login.service';\n\n@Component({\n  selector: 'app-post-login-menu',\n  templateUrl: './post-login-menu.component.html',\n  styleUrls: ['./post-login-menu.component.css']\n})\nexport class PostLoginMenuComponent implements OnInit {\n\n  @Output() toggleSideMenu: EventEmitter<boolean> = new EventEmitter()\n  @Input() onlyIcons = false\n\n  masterData = MasterData\n  AllDefaultMenuData = defaultMenuListAndEntitlements\n\n  public menuList = []\n  public isSuperAdmin\n\n\n  constructor(\n    public router: Router,\n    public sharedService: SharedService,\n    private sharedApiService: SharedApiService,\n    private plService: PostLoginService\n  ) { }\n\n  ngOnInit() {\n\n    this.sharedApiService.getUserRoleDdl()\n      .pipe(take(1))\n      .subscribe(\n        (result: any) => {\n          let currentRoleEntitlements = result.filter(x => x[\"_id\"][\"$oid\"] === this.sharedService.currentUserRoleId()['$oid'])\n\n          this.setRoleWiseMenu(currentRoleEntitlements[0][\"entitlements\"])\n        },\n        (error) => {\n          console.log(error)\n        }\n      );\n\n\n    this.closeAllMenus()\n  }\n\n  setRoleWiseMenu(roleEntitlements) {\n\n    this.plService.currentUserRoleEntitlements = roleEntitlements\n\n    if (this.sharedService.currentUserRoleId()['$oid'] === this.masterData.superAdminRoleId['$oid']) {\n      this.isSuperAdmin = true\n      roleEntitlements = this.AllDefaultMenuData\n    }\n    else {\n      roleEntitlements = roleEntitlements.filter(x => x.accessTypeId != 0)\n    }\n\n    roleEntitlements.forEach(validMenu => {\n      let filteredMenu = this.filterMenusAndSubmenu(validMenu)\n      this.menuList.push(filteredMenu)\n    });\n  }\n\n  filterMenusAndSubmenu(validRoleMenu) {\n    let menu = {}\n    let defaultMenu = this.AllDefaultMenuData.find(x => x.pageId === validRoleMenu.pageId)\n    menu['name'] = defaultMenu.menu.name\n    menu['icon'] = defaultMenu.menu.icon\n    menu['modelUrl'] = defaultMenu.menu.modelUrl\n    menu['children'] = []\n\n    if (this.sharedService.currentUserRoleId()['$oid'] === this.masterData.superAdminRoleId['$oid']) {\n      console.log(\"yes i here hhhhhhhhhhhhhhhhhhhhhhhhhhhhhh..........\")\n      menu['children'] = defaultMenu.subPage.map(x => x.menu)\n    }\n    else {\n      validRoleMenu.subPage.filter(x => x.accessTypeId != 0)\n        .forEach(element => {\n          let validSubMenu = defaultMenu.subPage.find(x => x.subPageId === element.subPageId)\n          if (validSubMenu) {\n            menu['children'].push(validSubMenu.menu)\n          }\n        });\n    }\n\n    return menu\n  }\n\n  closeAllMenus(object = this.menuList) {\n\n    if (!this.masterData.multipleMenuOpen) {\n      object.forEach(element => {\n        if (element[\"children\"] && element[\"children\"].length > 0) {\n          this.closeAllMenus(element[\"children\"])\n          element[\"showSubfolders\"] = false\n        }\n      });\n    }\n    return true\n  }\n\n  closeSideMenu() {\n    this.toggleSideMenu.emit(false)\n  }\n\n  superAdminButtonClicked() {\n    let url = \"pl/secure/school/(postLoginOutlet:schoolmgmt)\"\n    this.router.navigateByUrl(url)\n  }\n\n}\n","<ul>\n    <ng-container *ngTemplateOutlet=\"menuTemplate; context:{ _menus: menuList, _modelUrl: null }\"></ng-container>\n  </ul>  \n  <ng-template #menuTemplate let-menus=\"_menus\" let-modelUrl=\"_modelUrl\">\n    <li *ngFor=\"let menu of menus\" [ngClass]=\"{'openedSection': menu.showSubfolders}\">\n      <span class=\"parentLink\" [ngClass]=\"{'openedParentMenu': menu.showSubfolders}\" *ngIf=\"menu.children?.length > 0 ; else elseBlock\" (click)=\"closeAllMenus() && menu.showSubfolders = !menu.showSubfolders\">\n       <mat-icon class=\"icons\">{{menu.icon}}</mat-icon>\n       <ng-container *ngIf=\"!onlyIcons\">\n         {{menu.name}}<mat-icon class=\"arrows\" *ngIf=\"!menu.showSubfolders\">keyboard_arrow_right</mat-icon><mat-icon class=\"arrows\" *ngIf=\"menu.showSubfolders\"></mat-icon>\n       </ng-container>\n      </span>\n      <ng-template #elseBlock>          \n          <a class=\"link submenuName\" [ngClass]=\"{'activeMenu':this.router.url.includes(menu.url) && this.router.url.includes(modelUrl)}\"  *ngIf=\"modelUrl; else noModelUrl\" [routerLink]=\"[modelUrl,{outlets:{postLoginOutlet:[menu.url]}}]\" (click)=\"closeSideMenu()\">\n              <mat-icon class=\"icons\">{{menu.icon}}</mat-icon> \n              <ng-container *ngIf=\"!onlyIcons\">{{menu.name}}</ng-container>              \n          </a>\n          <ng-template #noModelUrl>\n            <a class=\"link\" [ngClass]=\"{'activeMenu':this.router.url.includes(menu.url)}\" [routerLink]=\"menu.url\" (click)=\"closeSideMenu()\">\n              <mat-icon class=\"icons\">{{menu.icon}}</mat-icon>\n              <ng-container *ngIf=\"!onlyIcons\">{{menu.name}}</ng-container>\n            </a>\n          </ng-template>\n      </ng-template>\n      <ul *ngIf=\"menu.children?.length > 0 && menu.showSubfolders\" class=\"appear-animate\">\n        <ng-container *ngTemplateOutlet=\"menuTemplate; context:{ _menus : menu.children, _modelUrl: menu.modelUrl }\"></ng-container>\n      </ul>\n    </li>\n</ng-template>\n\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PostLoginComponent } from './post-login/post-login.component';\r\nimport { PostLoginFooterComponent } from './post-login-footer/post-login-footer.component';\r\nimport { AuthorizationService } from '@app/shared/services/authorization.service';\r\n\r\nconst routes: Routes = [ \r\n  {\r\n    path: 'secure',\r\n    component: PostLoginComponent,\r\n    children:[\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule), //'./dashboard/dashboard.module#DashboardModule',\r\n        canActivate:[AuthorizationService]\r\n      },\r\n      {\r\n        path: 'studentguardian',\r\n        loadChildren: () => import('./student-guardian/student-guardian.module').then(m => m.StudentGuardianModule), //'./student-guardian/student-guardian.module#StudentGuardianModule',\r\n        canActivate:[AuthorizationService]\r\n      },\r\n      {\r\n        path: 'school',\r\n        loadChildren: () => import('./school/school.module').then(m => m.SchoolModule), //'./school/school.module#SchoolModule',\r\n        canActivate:[AuthorizationService]\r\n      },\r\n      {\r\n        path: 'exam',\r\n        loadChildren: () => import('./exam/exam.module').then(m => m.ExamModule), //'./exam/exam.module#ExamModule',\r\n        canActivate:[AuthorizationService]\r\n      },\r\n      {\r\n        path: 'transport',\r\n        loadChildren: () => import('./transport/transport.module').then(m => m.TransportModule), // './transport/transport.module#TransportModule'\r\n      },\r\n      {\r\n        path: 'employee',\r\n        loadChildren: () => import('./employee/employee.module').then(m => m.EmployeeModule), // './employee/employee.module#EmployeeModule'\r\n      },\r\n      {\r\n        path: 'attendance',\r\n        loadChildren: () => import('./attendance/attendance.module').then(m => m.AttendanceModule), // './attendance/attendance.module#AttendanceModule'\r\n      },\r\n      {\r\n        path: 'rating',\r\n        loadChildren: () => import('./rating/rating.module').then(m => m.RatingModule), // './rating/rating.module#RatingModule'\r\n      },\r\n      {\r\n        path: 'finance',\r\n        loadChildren: () => import('./finance/finance.module').then(m => m.FinanceModule),\r\n      }\r\n    ]\r\n  }  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PostLoginRoutingModule { }","import { NgModule } from '@angular/core';\nimport {SharedModule} from '../shared/shared.module';\nimport { PostLoginComponent } from './post-login/post-login.component';\nimport { PostLoginMenuComponent } from './post-login-menu/post-login-menu.component';\nimport { PostLoginHeaderComponent } from './post-login-header/post-login-header.component';\nimport { PostLoginFooterComponent } from './post-login-footer/post-login-footer.component';\nimport { MenuUserProfileComponent } from './post-login-menu/menu-user-profile/menu-user-profile.component';\nimport { PostLoginRoutingModule } from './post-login-routing.module';\nimport { SelectSchoolBranchComponent } from './components/select-school-branch/select-school-branch.component';\nimport { PostLoginService } from './post-login.service';\nimport { AgendaCalendarComponent } from './components/agenda-calendar/agenda-calendar.component';\nimport { HolidayCalendarComponent } from './components/holiday-calendar/holiday-calendar.component';\nimport { ExamCalendarComponent } from './components/exam-calendar/exam-calendar.component';\nimport { UserSettingsComponent } from './components/user-settings/user-settings.component';\n@NgModule({\n  imports: [\n    PostLoginRoutingModule,\n    SharedModule\n  ],\n  declarations: [PostLoginComponent,PostLoginMenuComponent, PostLoginHeaderComponent, PostLoginFooterComponent, \n    MenuUserProfileComponent, SelectSchoolBranchComponent, AgendaCalendarComponent, HolidayCalendarComponent, ExamCalendarComponent, UserSettingsComponent\n    ],\n  exports:[\n   ],\n  providers:[\n    PostLoginService\n  ]\n})\nexport class PostLoginModule { }","import { Component, OnInit, ViewChild, OnDestroy, HostListener } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { StorageService } from '@app/shared/services/storage.service';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { RouterOutlet, ActivationStart, Router, NavigationStart, NavigationEnd, NavigationError, NavigationCancel } from '@angular/router';\nimport { MasterData, environment } from '@env/environment';\nimport { PostLoginHeaderComponent } from '../post-login-header/post-login-header.component';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\n\n@Component({\n  selector: 'app-post-login',\n  templateUrl: './post-login.component.html',\n  styleUrls: ['./post-login.component.css']\n})\nexport class PostLoginComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n  \n  @ViewChild(RouterOutlet) outlet: RouterOutlet;\n  @ViewChild('header') header: PostLoginHeaderComponent\n\n  profilePicPath: string\n  isUserLogin = true\n\n  public showShideNav = false\n  public masterData = MasterData\n  public isLoading = false\n  public isLoadingPage = false\n  public currentSchoolBranchId\n  \n  constructor(\n    public sharedService: SharedService,   \n    private sharedApiService: SharedApiService,  \n    private _storageService: StorageService,\n    private router: Router\n  ) {   \n    this.isLoading = true\n    this.currentSchoolBranchId = this.sharedService.currentSchoolBranchId()\n    \n    this.sharedApiService.reloadAllMasterDataFromDB().pipe(take(1))\n    .subscribe(\n      (result: any) => {   \n        this.allMasterDataLoaded(result)        \n      },\n      (error) => {\n      }\n    );    \n\n    this.menuClickShowLoading()\n  }\n    \n  ngOnInit() {\n    this._storageService.logIn$\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (isLogin) =>{\n          this.isUserLogin = isLogin\n      }\n    )\n  }\n\n  allMasterDataLoaded(isSuccess){\n    this.isLoading = false  \n    this.deactivateRoute()\n  }  \n\n  // When user click on the menu and another module is loading then it will show loading animation,\n  // Other user thing that nothing happen on click on menu\n  menuClickShowLoading(){\n    this.router.events.subscribe(event => {\n      if(event instanceof NavigationStart) {\n        this.isLoadingPage = true;\n      }else if(event instanceof NavigationEnd || event instanceof NavigationError || event instanceof NavigationCancel) {\n        this.isLoadingPage = false;\n      }\n    });\n  }\n\n  deactivateRoute() {    \n    this.router.events.subscribe(e => {\n      if (e instanceof ActivationStart && e.snapshot.outlet === \"postLoginOutlet\")\n        this.outlet.deactivate();\n    });\n  }\n  \n  toggleSideMenu(event){\n    if(event === \"profilePicUpdated\"){\n      // User profile pic uploaded\n      this.header.profilePicPath = environment.ftpUrl+ this.sharedService.getUserProflePicDirectory() +\n      this.sharedService.serializeMongoObjectId(this.sharedService.CurrentUserId()) +\".png?updated=\"+Date.now()\n    }\n    else{\n      this.showShideNav = !this.showShideNav\n    }\n  }\n\n  schoolDdlChange(schoolId){    \n    this.sharedService.currentSchoolId(schoolId)\n    location.reload()\n  }\n\n  \n  isLargeScreen() {\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    if (width > 1280) {\n        return true;\n    } else {\n        return false;\n    }\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.sharedService.openSnackBar(message, action);\n  }\n  \n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<div class=\"sideNavDiv\" *ngIf=\"isUserLogin\" [hidden]=\"!showShideNav\">\n\t<row>\n\t\t<div fxFlex=\"300px\" class=\"sideNav sideMenuColors shadow\">\n\t\t\t<app-menu-user-profile *ngIf=\"!isLoading\" (toggleSideMenu)=\"toggleSideMenu($event)\"></app-menu-user-profile>\n\t\t\t<br><br>\n\t\t\t<app-post-login-menu *ngIf=\"!isLoading\" (toggleSideMenu)=\"toggleSideMenu($event)\"></app-post-login-menu>\n\t\t\t<div class=\"loadingData\" *ngIf=\"isLoading\">\n\t\t\t\t<h4>\n\t\t\t\t\tPlease Wait...\n\t\t\t\t</h4>\n\t\t\t\t<i>We are loading Menu for you.</i>\n\t\t\t\t<br><br>\n\t\t\t\t<app-loader></app-loader>\n\t\t\t</div>\n\t\t\t<br><br><br><br>\n\t\t</div>\n\t\t<div fxFlex (click)=\"showShideNav = false\" class=\"closeSideNavDiv\">\n\t\t</div>\n\t</row>\n</div>\n<div class=\"sideNavContent\" [ngClass]=\"{'disable-pointer' : showShideNav}\">\n\t<post-login-header #header (toggleSideMenu)=\"toggleSideMenu($event)\">\n\t\t<span *ngIf=\"!isLoading\" schoolBranchName>\n\t\t\t{{currentSchoolBranchId | school : 'branch'}}\n\t\t</span>\n\t</post-login-header>\n\t<div class=\"postLoginContent contentBgImage\">\n\t\t<div *ngIf=\"isLoadingPage\" class=\"card-fullscreen loadingPage\">\n\t\t\t<br><br>\n\t\t\t<app-loader></app-loader>\n\t\t\t<br> <br>\n\t\t</div>\n\t\t<large-screen>\n\t\t\t<br><br><br><br><br>\n\t\t</large-screen>\n\t\t<router-outlet [hidden]=\"isLoadingPage\" name=\"postLoginOutlet\">\n\t\t</router-outlet>\n\t</div>\n\t<post-login-footer></post-login-footer>\n</div>"]}