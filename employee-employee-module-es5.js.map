{"version":3,"sources":["webpack:///src/app/post-login/employee/employee-list/employee-list.component.ts","webpack:///src/app/post-login/employee/employee-list/employee-list.component.html","webpack:///src/app/post-login/employee/employee-management/employee-management.component.ts","webpack:///src/app/post-login/employee/employee-management/employee-management.component.html","webpack:///src/app/post-login/employee/employee-routing.module.ts","webpack:///src/app/post-login/employee/employee.module.ts","webpack:///src/app/post-login/employee/my-profile/my-profile.component.ts","webpack:///src/app/post-login/employee/my-profile/my-profile.component.html","webpack:///src/app/post-login/employee/new-employee/new-employee.component.ts","webpack:///src/app/post-login/employee/new-employee/new-employee.component.html","webpack:///src/app/post-login/employee/services/employee.service.ts"],"names":["EmployeeListComponent","employeeService","changeDetector","sharedService","plService","unsubscribe$","viewButtonEvent","editButtonEvent","deleteButtonEvent","pageTitle","isLoading","environment","masterData","employees","viewUser","editPermissions","searchParams","paging","pageIndex","pageSize","length","sortParams","fieldName","isAsc","getPageEntitlements","getList","SearchObject","SearchParameters","sorting","getEmployeeList","pipe","subscribe","result","data","count","error","console","log","id","emit","sort","active","direction","detectChanges","paginator","next","complete","sortClicked","pagingClicked","selector","templateUrl","styleUrls","EmployeeManagementComponent","fb","showViewPage","showAddChangePage","showListPage","showDeleteButton","Id","searchConfig","isViewMode","type","label","inputType","name","icon","options","genders","religions","casts","searchForm","group","_ListPage","value","searchCard","hide","event","backToListClick","dialogRef","openConfirmDialog","afterClosed","confirmed","deleteEmployee","onSearchClick","routes","path","component","outlet","EmployeeRoutingModule","forChild","imports","exports","EmployeeModule","declarations","providers","MyProfileComponent","entity","isStudent","studentRoleId","currentUserRoleId","isGuardian","guardianRoleId","JSON","parse","loggedInData","serializeMongoObjectId","NewEmployeeComponent","userRolePipe","onSaveSuccess","changeModeId","open","stayOnPage","isComingFromMyProfile","mainForm","isPopulatingFormDb","initialFormValues","noOfActiveEmployee","noOfActive","title","subTitle","employeeSubTitle","addressSubTitle","canChangeHisOwnRole","checkCanChangeHisOwnRoles","checkSensitiveInfoPermissions","setTitleMessages","basicInfo","credentialInfo","transportInfo","contactInfo","medicalInfo","governmentIds","addressInfo","setFormCommonFields","populateFromDB","user","isanyadmin","transform","canSeeSensitiveInfo","getEmployee","forEach","element","get","setValue","_id","status","control","pageLevelDelete","markAllAsTouched","preventDefault","stopPropagation","valid","employeeRegistration","isSuccess","openSnackBar","resetFormControls","message","onSubmit","EmployeeService","_http","_storage","_sharedService","apiPrefix","employeedata","isSuperAdmin","superAdminEmployeeId","post","apiUrl","empId"],"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","file":"employee-employee-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { EmployeeService } from '../services/employee.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  employees = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions = false\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"basicInfo.firstName\",\n    isAsc : true\n  }\n\n  constructor(\n    private employeeService: EmployeeService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public plService: PostLoginService\n  ) {\n      this.editPermissions = this.plService.getPageEntitlements(5,1) === 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.employeeService\n    .getEmployeeList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.employees = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"'Employee List'\" [subTitle]=\"'Manage your employee for employees'\"\n  (refresh)=\"getList()\">\n  <large-screen>\n    <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n      <thead class=\"thead\">\n        <tr>\n          <th class=\"sr\" colspan=\"2\">#</th>\n          <th matRipple mat-sort-header=\"basicInfo.firstName\">\n            First Name\n            <mat-icon>face</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.lastName\">\n            Last Name\n            <mat-icon>face</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"contactInfo.contactNo\">\n            Mob No<mat-icon>phone_iphone</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"contactInfo.email\">\n            Email Id<mat-icon>email</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.dob\">\n            DOB<mat-icon>today</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.genderId\">Gender</th>\n          <th class=\"action\">\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"tr\" *ngFor=\"let employee of employees; let idx = index\">\n          <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n          <td>\n            <user-small-pic [userId]=\"employee._id\"></user-small-pic>\n          </td>\n          <td>{{employee.basicInfo.firstName}}</td>\n          <td>{{employee.basicInfo.lastName}}</td>\n          <td>{{employee.contactInfo.contactNo}}</td>\n          <td>{{employee.contactInfo.email}}</td>\n          <td>{{employee.basicInfo.dob | date}}</td>\n          <td>{{employee.basicInfo.genderId | masterData : 'gender'}}</td>\n          <td class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Employee'\" class=\"icon-view\" (click)=\"viewClicked(employee._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Employee'\" class=\"icon-edit\"\n              (click)=\"editClicked(employee._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions && employee._id != masterData.superAdminEmployeeId.$oid\" \n            mat-icon-button appToolTip=\"'Delete Employee'\" class=\"icon-delete\"\n              (click)=\"deleteClicked(employee._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </large-screen>\n\n  <small-screen>\n    <ng-container *ngFor=\"let employee of employees; let idx = index; let odd = odd\">\n      <card [childCard]=\"true\" [header]=\"false\">\n        <row gap=\"2px\">\n          <div fxFlex=\"30%\">\n            <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n          </div>\n          <div fxFlex class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Employee'\" class=\"big-icon-view\"\n              (click)=\"viewClicked(employee._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Employee'\" class=\"big-icon-edit\"\n              (click)=\"editClicked(employee._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions && employee._id != masterData.superAdminEmployeeId.$oid\" mat-icon-button appToolTip=\"'Delete Employee'\" class=\"big-icon-delete\"\n              (click)=\"deleteClicked(employee._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </div>\n        </row>\n        <user-card [userId]=\"employee._id\" [firstName]=\"employee.basicInfo.firstName\"\n          [lastName]=\"employee.basicInfo.lastName\" [contactNo]=\"employee.contactInfo.contactNo\"\n          [email]=\"employee.contactInfo.email\" [dob]=\"employee.basicInfo.dob\" [genderId]=\"employee.basicInfo.genderId\">\n        </user-card>\n      </card>\n      <br>\n    </ng-container>\n  </small-screen>\n  <no-record-found *ngIf=\"employees.length ==0\"></no-record-found>\n  <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n    [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\" (page)=\"pagingClicked($event)\">\n  </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { MasterData } from '@env/environment';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { EmployeeService } from '../services/employee.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-employee-management',\n  templateUrl: './employee-management.component.html',\n  styleUrls: ['./employee-management.component.css']\n})\nexport class EmployeeManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(EmployeeListComponent) private _ListPage: EmployeeListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n  \n  public editPermissions = false\n  public showViewPage = false\n  public showAddChangePage = false\n  public showListPage = true\n  public showDeleteButton = false\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"First Name\",\n      inputType: \"text\",\n      name: \"firstName\",\n      icon: \"accessibility_new\"\n    },\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Last Name\",\n      inputType: \"text\",\n      name: \"lastName\",\n      icon: \"accessibility\"\n    },\n    {\n      isViewMode: false,\n      type: \"date\",\n      label: \"DOB\",\n      name: \"dob\"\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Gender\",\n      name: \"genderId\",      \n      options: this.masterData.genders\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Religion\",\n      name: \"religionId\",\n      options: this.masterData.religions\n    },\n    {\n      isViewMode: false,\n      type: \"select\",\n      label: \"Cast\",\n      name: \"castId\",\n      options: this.masterData.casts\n    }\n  ];\n\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private employeeService: EmployeeService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(5,1) == 2\n    this.searchForm = this.fb.group({})\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteEmployeePermanently() {\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Employee'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n            this.isLoading = true\n            this.employeeService.deleteEmployee(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()\n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n\n","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            class=\"btn\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>person_add</mat-icon> Add New Employee\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Employee'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" class=\"btn\"\n            mat-raised-button appToolTip=\"'Go back to Employee List'\" matTooltipShowDelay=\"100\"\n            matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Employee List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<app-new-employee *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-employee>\n<app-employee-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (deleteButtonEvent)=\"deleteButtonEvent($event)\" (editButtonEvent)=\"editButtonEvent($event)\"></app-employee-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteEmployeePermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeManagementComponent } from './employee-management/employee-management.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\n\nconst routes: Routes = [\n  {\n    path: 'empmgmt',\n    component: EmployeeManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'myProfile',\n    component: MyProfileComponent,\n    outlet:'postLoginOutlet'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { NewEmployeeComponent } from './new-employee/new-employee.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeManagementComponent } from './employee-management/employee-management.component';\nimport { EmployeeService } from './services/employee.service';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\n\n@NgModule({\n  declarations: [NewEmployeeComponent, EmployeeListComponent, EmployeeManagementComponent, MyProfileComponent],\n  imports: [\n    EmployeeRoutingModule,\n    SharedModule\n  ],\n  providers:[\n    EmployeeService\n  ]\n})\nexport class EmployeeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { MasterData } from '@env/environment';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  public Id = null\n  public isViewMode = true\n  public entity = `'Your Profile'`\n\n  constructor(\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    let isStudent = MasterData.studentRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\n    let isGuardian = MasterData.guardianRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\n\n    if(!isGuardian && !isStudent){\n      let data =  JSON.parse(this.sharedService.loggedInData())\n      this.Id = this.sharedService.serializeMongoObjectId(data[\"_id\"])\n    }\n  }\n\n}\n","<app-new-employee [changeModeId]=\"Id\" [isComingFromMyProfile]=\"true\" [entity]=\"entity\"\n    [isViewMode]=\"false\"></app-new-employee>","import { Component, OnInit, AfterViewChecked, OnDestroy, Output, Input, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { EmployeeService } from '../services/employee.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { UserRolePipe } from '@app/shared/pipe/user-role.pipe';\n\n@Component({\n  selector: 'app-new-employee',\n  templateUrl: './new-employee.component.html',\n  styleUrls: ['./new-employee.component.css']\n})\nexport class NewEmployeeComponent implements OnInit, AfterViewChecked, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() public open = true\n  @Input() public stayOnPage = true\n  @Input() roleId: number\n  @Input() isComingFromMyProfile = false\n  @Input() entity = 'Employee'\n\n  mainForm: FormGroup = new FormGroup({})\n  masterData = MasterData\n\n  isPopulatingFormDb = false\n  isLoading = false\n  initialFormValues = null\n\n  noOfActiveEmployee = 0\n  noOfActive = 0\n\n  title = `Add ${this.entity} Details.`\n  subTitle = `Please provide following details of ${this.entity}.`\n\n  employeeSubTitle = `Please add following details of '${this.entity}'.`\n  addressSubTitle = \"Please add following details of 'Address'.\"\n\n  public canSeeSensitiveInfo\n  public canChangeHisOwnRole = false\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public employeeService: EmployeeService,\n    private plService: PostLoginService,\n    private userRolePipe : UserRolePipe\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.checkCanChangeHisOwnRoles()\n    this.checkSensitiveInfoPermissions()\n    this.setTitleMessages()\n\n    this.mainForm = this.fb.group({\n      basicInfo: this.fb.group({}),\n      credentialInfo: this.fb.group({}),\n      transportInfo: this.fb.group({}),\n      contactInfo: this.fb.group({}),\n      medicalInfo: this.fb.group({}),\n      governmentIds: this.fb.group({}),\n      addressInfo: this.fb.group({})\n    });\n\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n\n  }\n\n  \n  checkCanChangeHisOwnRoles(){\n    let user = JSON.parse(this.sharedService.loggedInData())\n    let currentUserRoleId = this.sharedService.currentUserRoleId();\n    let isanyadmin = this.userRolePipe.transform(currentUserRoleId, 'isanyadmin')\n    this.canChangeHisOwnRole = isanyadmin || this.changeModeId != user[\"_id\"][\"$oid\"]\n  }\n\n  checkSensitiveInfoPermissions(){\n    let user = JSON.parse(this.sharedService.loggedInData())\n    this.canSeeSensitiveInfo = this.plService.getPageEntitlements(5, 1) == 2 || this.changeModeId === user[\"_id\"][\"$oid\"]\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = `Update ${this.entity}.`\n      this.subTitle = `Please update following details of ${this.entity}.`\n\n      if (this.isViewMode) {\n        this.title = `View ${this.entity}.`\n        this.subTitle = `View following details of ${this.entity}.`\n\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill employees and  information for View/Edit mode from Database\n\n    this.isPopulatingFormDb = true\n    this.isLoading = true\n\n    this.employeeService.getEmployee(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n\n          this.isPopulatingFormDb = false\n          this.isLoading = false\n\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n        },\n        (error) => {\n          this.isPopulatingFormDb = false\n          this.isLoading = false\n          console.log(error)\n        }\n      );\n  }\n\n  deactivateRecord(control: AbstractControl, fieldName: string) {\n    let dialogRef = this.sharedService.openConfirmDialog()\n\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        control.setValue(0)\n        this.sharedService.pageLevelDelete(fieldName)\n      }\n    });\n  }\n\n  onSubmit(event: Event) {\n\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.employeeService.employeeRegistration(\n        this.mainForm.value\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n\n            if (result.isSuccess) {\n              this.onSaveSuccess.emit(true)\n              this.sharedService.openSnackBar(`${this.entity} information get saved successfully.`, \"x\", \"success\")\n\n              if (!this.isComingFromMyProfile) {\n                this.sharedService.resetFormControls(this.mainForm)\n              }\n            }\n            else {\n              this.sharedService.openSnackBar(result.message, \"x\", \"fail\")\n            }\n\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\">\n  <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\">\n    <responsive *ngIf=\"!isPopulatingFormDb\">\n      <form-profile-pic fxFlex fxLayoutAlign=\"end\" [form]=\"mainForm\" [isViewMode]=\"isViewMode\">\n      </form-profile-pic>\n\n      <div fxFlex=\"2 2 auto\">\n        <app-ddl-status [form]=\"mainForm\" [isViewMode]=\"isViewMode\"\n          [value]=\"initialFormValues && initialFormValues?.status\">\n        </app-ddl-status>\n        <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['basicInfo']\" [icon]=\"'face'\">\n                  Basic Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-basic-info [form]=\"mainForm.controls['basicInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.basicInfo\">\n            </form-user-basic-info>\n            <app-ddl-role [form]=\"mainForm\" [isViewMode]=\"isViewMode || !canChangeHisOwnRole\"\n              [initialFormValues]=\"initialFormValues\"></app-ddl-role>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\" *ngIf=\"canSeeSensitiveInfo\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['credentialInfo']\" [icon]=\"'security'\">\n                  Credential Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-credentials [form]=\"mainForm.controls['credentialInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.credentialInfo\">\n            </form-user-credentials>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['transportInfo']\" [icon]=\"'directions_bus'\">\n                  Transport Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <app-route-ddl [form]=\"mainForm.controls['transportInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.transportInfo\">\n            </app-route-ddl>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['contactInfo']\" [icon]=\"'contact_phone'\">\n                  Contact Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-contact-info [form]=\"mainForm.controls['contactInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.contactInfo\" [Required]=\"true\">\n            </form-contact-info>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['medicalInfo']\" [icon]=\"'local_hospital'\">\n                  Medical Details\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-medical-info [form]=\"mainForm.controls['medicalInfo']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.medicalInfo\">\n            </form-user-medical-info>\n          </mat-expansion-panel>\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['governmentIds']\" [icon]=\"'local_activity'\">\n                  Government Ids\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-user-government-ids [form]=\"mainForm.controls['governmentIds']\" [isViewMode]=\"isViewMode\"\n              [initialFormValues]=\"initialFormValues?.governmentIds\">\n            </form-user-government-ids>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <smart-div [form]=\"mainForm.controls['addressInfo']\" [icon]=\"'room'\">\n                  Address\n                </smart-div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-address-info [form]=\"this.mainForm['controls'].addressInfo\"\n              [initialFormValues]=\"initialFormValues?.addressInfo\" [isViewMode]=\"isViewMode\">\n            </form-address-info>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n    </responsive>\n    <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n  </form>\n  <br>\n</card>","import { Injectable } from '@angular/core';\r\nimport { environment, MasterData } from '@env/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StorageService } from '@app/shared/services/storage.service';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\n\r\n@Injectable()\r\nexport class EmployeeService {\r\n  \r\n  apiPrefix = \"api/Employee/\"\r\n\r\n  constructor(\r\n    private _http: HttpClient,\r\n    private _storage: StorageService,\r\n    private _sharedService: SharedService\r\n  ) {\r\n  }\r\n\r\n  employeeRegistration(employeedata) {\r\n    let isSuperAdmin = false\r\n    \r\n    if (employeedata[\"_id\"]['$oid'] === MasterData.superAdminEmployeeId['$oid']) {\r\n      isSuperAdmin = true\r\n    }\r\n\r\n    if(isSuperAdmin){\r\n      return this._http.post(environment.apiUrl + this.apiPrefix + \"saveDevSuperAdmin\", employeedata)\r\n    }\r\n    else{\r\n      return this._http.post(environment.apiUrl + this.apiPrefix + \"saveEmployee\", employeedata)\r\n    }\r\n  }\r\n\r\n  getEmployeeList(searchParams){\r\n    return this._http.post(environment.apiUrl+ this.apiPrefix + \"getlist\", searchParams)\r\n  }\r\n\r\n  getEmployee(id){\r\n    let empId = this._sharedService.serializeMongoObjectId(id)\r\n\r\n    let isSuperAdmin = false    \r\n    if (empId === MasterData.superAdminEmployeeId['$oid']) {\r\n      isSuperAdmin = true\r\n    }\r\n\r\n    if(isSuperAdmin){\r\n      return this._http.get(environment.apiUrl + this.apiPrefix + \"getdevSuperAdmin?id=\"+ empId)\r\n    }\r\n    else{\r\n      return this._http.get(environment.apiUrl + this.apiPrefix + \"getEmployee?id=\"+ empId)\r\n    }\r\n    \r\n  }\r\n\r\n  deleteEmployee(id){\r\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"DeleteEmployee?id=\"+ this._sharedService.serializeMongoObjectId(id))\r\n  } \r\n}\r\n"]}