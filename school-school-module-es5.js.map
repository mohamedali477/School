{"version":3,"sources":["webpack:///src/app/post-login/school/class/class-basic-info/class-basic-info.component.ts","webpack:///src/app/post-login/school/class/class-basic-info/class-basic-info.component.html","webpack:///src/app/post-login/school/class/class-list/class-list.component.ts","webpack:///src/app/post-login/school/class/class-list/class-list.component.html","webpack:///src/app/post-login/school/class/class-management/class-management.component.ts","webpack:///src/app/post-login/school/class/class-management/class-management.component.html","webpack:///src/app/post-login/school/class/class-subject-info/class-subject-info.component.ts","webpack:///src/app/post-login/school/class/class-subject-info/class-subject-info.component.html","webpack:///src/app/post-login/school/class/copy-subject/copy-subject.component.ts","webpack:///src/app/post-login/school/class/copy-subject/copy-subject.component.html","webpack:///src/app/post-login/school/class/new-class/new-class.component.ts","webpack:///src/app/post-login/school/class/new-class/new-class.component.html","webpack:///src/app/post-login/school/class/section-fee/section-fee.component.ts","webpack:///src/app/post-login/school/class/section-fee/section-fee.component.html","webpack:///src/app/post-login/school/class/subject-timings/subject-timings.component.ts","webpack:///src/app/post-login/school/class/subject-timings/subject-timings.component.html","webpack:///src/app/post-login/school/event-management/event-list/event-list.component.ts","webpack:///src/app/post-login/school/event-management/event-list/event-list.component.html","webpack:///src/app/post-login/school/event-management/event-management.component.ts","webpack:///src/app/post-login/school/event-management/event-management.component.html","webpack:///src/app/post-login/school/event-management/new-event/event-basic-info/event-basic-info.component.ts","webpack:///src/app/post-login/school/event-management/new-event/event-basic-info/event-basic-info.component.html","webpack:///src/app/post-login/school/event-management/new-event/new-event.component.ts","webpack:///src/app/post-login/school/event-management/new-event/new-event.component.html","webpack:///src/app/post-login/school/holiday-management/holiday-list/holiday-list.component.ts","webpack:///src/app/post-login/school/holiday-management/holiday-list/holiday-list.component.html","webpack:///src/app/post-login/school/holiday-management/holiday-management.component.ts","webpack:///src/app/post-login/school/holiday-management/holiday-management.component.html","webpack:///src/app/post-login/school/holiday-management/new-holiday/holiday-basic-info/holiday-basic-info.component.ts","webpack:///src/app/post-login/school/holiday-management/new-holiday/holiday-basic-info/holiday-basic-info.component.html","webpack:///src/app/post-login/school/holiday-management/new-holiday/new-holiday.component.ts","webpack:///src/app/post-login/school/holiday-management/new-holiday/new-holiday.component.html","webpack:///src/app/post-login/school/role-management/new-role/new-role.component.ts","webpack:///src/app/post-login/school/role-management/new-role/new-role.component.html","webpack:///src/app/post-login/school/role-management/new-role/role-basic-info/role-basic-info.component.ts","webpack:///src/app/post-login/school/role-management/new-role/role-basic-info/role-basic-info.component.html","webpack:///src/app/post-login/school/role-management/new-role/role-entitlements/page-info/page-info.component.ts","webpack:///src/app/post-login/school/role-management/new-role/role-entitlements/page-info/page-info.component.html","webpack:///src/app/post-login/school/role-management/new-role/role-entitlements/role-entitlements.component.ts","webpack:///src/app/post-login/school/role-management/new-role/role-entitlements/role-entitlements.component.html","webpack:///src/app/post-login/school/role-management/new-role/role-entitlements/sub-page-entitlement/sub-page-entitlement.component.ts","webpack:///src/app/post-login/school/role-management/new-role/role-entitlements/sub-page-entitlement/sub-page-entitlement.component.html","webpack:///src/app/post-login/school/role-management/role-list/role-list.component.ts","webpack:///src/app/post-login/school/role-management/role-list/role-list.component.html","webpack:///src/app/post-login/school/role-management/role-management.component.ts","webpack:///src/app/post-login/school/role-management/role-management.component.html","webpack:///src/app/post-login/school/school-management/new-school/new-school.component.ts","webpack:///src/app/post-login/school/school-management/new-school/new-school.component.html","webpack:///src/app/post-login/school/school-management/new-school/school-branch-info/school-branch-info.component.ts","webpack:///src/app/post-login/school/school-management/new-school/school-branch-info/school-branch-info.component.html","webpack:///src/app/post-login/school/school-management/school-list/school-list.component.ts","webpack:///src/app/post-login/school/school-management/school-list/school-list.component.html","webpack:///src/app/post-login/school/school-management/school-management.component.ts","webpack:///src/app/post-login/school/school-management/school-management.component.html","webpack:///src/app/post-login/school/school-routing.module.ts","webpack:///src/app/post-login/school/school.module.ts","webpack:///src/app/post-login/school/services/class.service.ts","webpack:///src/app/post-login/school/services/event.service.ts","webpack:///src/app/post-login/school/services/holiday.service.ts","webpack:///src/app/post-login/school/services/role.service.ts","webpack:///src/app/post-login/school/services/school.service.ts","webpack:///src/app/post-login/school/services/subject.service.ts","webpack:///src/app/post-login/school/subject-management/new-subject/new-subject.component.ts","webpack:///src/app/post-login/school/subject-management/new-subject/new-subject.component.html","webpack:///src/app/post-login/school/subject-management/new-subject/subject-basic-info/subject-basic-info.component.ts","webpack:///src/app/post-login/school/subject-management/new-subject/subject-basic-info/subject-basic-info.component.html","webpack:///src/app/post-login/school/subject-management/subject-list/subject-list.component.ts","webpack:///src/app/post-login/school/subject-management/subject-list/subject-list.component.html","webpack:///src/app/post-login/school/subject-management/subject-management.component.ts","webpack:///src/app/post-login/school/subject-management/subject-management.component.html"],"names":["ClassBasicInfoComponent","sharedService","initialFormValues","isViewMode","masterData","fieldsConfig","type","label","inputType","name","icon","validations","required","value","options","classSections","setFormInitialValueForChangeMode","selector","templateUrl","styleUrls","ClassListComponent","classService","changeDetector","plService","unsubscribe$","viewButtonEvent","editButtonEvent","deleteButtonEvent","pageTitle","isLoading","environment","classs","viewUser","searchParams","paging","pageIndex","pageSize","length","sortParams","fieldName","isAsc","editPermissions","getPageEntitlements","getList","SearchObject","SearchParameters","sorting","getClassList","pipe","subscribe","result","data","count","error","console","log","id","emit","sort","active","direction","detectChanges","paginator","next","complete","sortClicked","pagingClicked","ClassManagementComponent","fb","sharedApiService","showViewPage","showAddChangePage","showListPage","showDeleteButton","Id","event","backToListClick","_ListPage","dialogRef","openConfirmDialog","afterClosed","confirmed","deleteClass","ClassSubjectInfoComponent","makeFieldConfig","form","addControl","sectionId","CopySubjectComponent","onSuccess","fromSectionId","mainForm","get","copiedSubject","currentSubject","controls","forEach","subject","control","copyFormControl","setValue","generateMongoObjectId","push","element","dontCopyClicked","NewClassComponent","onSaveSuccess","changeModeId","copyFromAnotherSection","copyToSectionId","title","subTitle","isPopulatingFormDb","open","subjectCount","setTitleMessages","group","basicInfo","array","sectionConfig","setFormCommonFields","populateFromDB","addSubject","pageLevelSave","status","subjectForm","idx","removeSubject","pageLevelDelete","removeAt","destinationSectionId","closePopUp","getClass","filter","x","_id","markAllAsTouched","preventDefault","stopPropagation","valid","saveClass","openSnackBar","reset","onSubmit","encapsulation","None","SectionFeeComponent","formArray","editModeValues","find","SubjectTimingsComponent","days","EventListComponent","eventService","events","getSchoolEventList","EventManagementComponent","searchConfig","searchForm","searchCard","hide","deleteEvent","onSearchClick","EventBasicInfoComponent","NewEventComponent","showHeader","childCard","stoppageCount","getSchoolEvent","saveSchoolEvent","getRawValue","HolidayListComponent","holidayService","holidays","getSchoolHolidayList","HolidayManagementComponent","deleteSchoolHoliday","HolidayBasicInfoComponent","NewHolidayComponent","getSchoolHoliday","holiday","saveSchoolHoliday","NewRoleComponent","roleService","defaultEntitlements","entitlements","menu","addEntitlement","getSchoolRole","role","saveSchoolRole","isSuccess","message","RoleBasicInfoComponent","PageInfoComponent","collectMenuPageData","page","pageId","emptyDataText","subPage","subPageId","pageData","RoleEntitlementsComponent","defaultEntitlement","initialEntitlements","configureMenuItems","accessTypeId","initialEntitlement","pageEntitlements","configureSubMenuItems","defaultSubPages","SubPageEntitlementComponent","configureFields","filteredInitialValues","subPageEntitlements","RoleListComponent","roles","getSchoolRoleList","RoleManagementComponent","deleteSchoolRole","NewSchoolComponent","schoolService","branchCount","schoolBasicInfo","schoolContact","branch","addBranch","removeBranch","getSchool","saveSchool","SchoolBranchInfoComponent","classCount","setupBranchRoles","SchoolListComponent","schools","getSchoolList","guardianId","deleteSchool","SchoolManagementComponent","currentUserRoleId","superAdminRoleId","isSuperAdmin","currentSchoolId","routes","path","component","outlet","SchoolRoutingModule","forChild","imports","exports","SchoolModule","declarations","providers","ClassService","_http","_storageService","_sharedService","apiPrefix","classData","post","apiUrl","serializeMongoObjectId","EventService","eventId","eventData","startDate","endDate","agendaDate","HolidayService","holidayId","holidayData","holidayDate","RoleService","roleId","roleData","SchoolService","schoolData","SubjectService","subjectId","subjectData","NewSubjectComponent","subjectService","getSchoolSubject","saveSchoolSubject","SubjectBasicInfoComponent","SubjectListComponent","subjects","getSchoolSubjectList","SubjectManagementComponent","deleteSchoolSubject"],"mappings":"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","file":"school-school-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'class-basic-info',\n  templateUrl: './class-basic-info.component.html',\n  styleUrls: ['./class-basic-info.component.css']\n})\nexport class ClassBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Class Name\",\n        inputType: \"text\",\n        name: \"className\",\n        icon: \"ballot\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Class Basic Fee\",\n        inputType: \"number\",\n        name: \"classFee\",\n        icon: \"money\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"togglebutton\",\n        label: \"Is Semester System\",\n        name: \"isSemesterSystem\",\n        value: false\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"select\",\n        label: \"Section\",\n        name: \"classSection\",\n        inputType: \"multi\",\n        icon: \"list_alt\",\n        options: this.masterData.classSections,\n        validations: [validationType.required()]\n      }\n    ];\n    \n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\"></dynamic-form>","import { Component, OnInit, ChangeDetectorRef, Output, Input, EventEmitter, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment, MasterData } from '@env/environment';\nimport { Subject } from 'rxjs';\nimport { ClassService } from '../../services/class.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-class-list',\n  templateUrl: './class-list.component.html',\n  styleUrls: ['./class-list.component.css']\n})\nexport class ClassListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  classs = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"basicInfo.firstName\",\n    isAsc : true\n  }\n\n  constructor(\n    private classService: ClassService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(8,4) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.classService\n    .getClassList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.classs = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"'Class List'\"\n  [subTitle]=\"'Manage classes for students and teachers'\" (refresh)=\"getList()\">\n  <large-screen>\n    <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n      <thead class=\"thead\">\n        <tr>\n          <th class=\"sr\" colspan=\"2\">#</th>\n          <th matRipple mat-sort-header=\"basicInfo.className\">\n            Class Name\n            <mat-icon>ballot</mat-icon>\n          </th>\n          <th matRipple mat-sort-header=\"basicInfo.classFee\">\n            Class Basic Fee\n            <mat-icon>money</mat-icon>\n          </th>\n          <th matRipple>\n            Sections\n            <mat-icon>menu_book</mat-icon>\n          </th>\n          <th class=\"action\">\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"tr\" *ngFor=\"let class of classs; let idx = index\">\n          <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n          <td> </td>\n          <td>{{class.basicInfo.className}}</td>\n          <td>{{class.basicInfo.classFee | currency:'INR'}}</td>\n          <td>\n            <span *ngFor=\"let section of class.basicInfo.classSection; let last = last;\">\n                {{section | masterData : 'classsections'}} {{last ? '': ','}}\n            </span>\n          </td>\n          <td class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Class'\" class=\"icon-view\" (click)=\"viewClicked(class._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Class'\" class=\"icon-edit\"\n              (click)=\"editClicked(class._id)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Class'\" class=\"icon-delete\"\n              (click)=\"deleteClicked(class._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </large-screen>\n\n  <small-screen class=\"default-font\">\n    <ng-container *ngFor=\"let class of classs; let idx = index; let odd = odd;\">\n      <card [childCard]=\"true\" [header]=\"false\">\n        <row gap=\"2px\">\n          <div fxFlex=\"30%\">\n            <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n          </div>\n          <div fxFlex class=\"rt\">\n            <button mat-icon-button appToolTip=\"'View Class'\" class=\"big-icon-view\" (click)=\"viewClicked(class._id)\">\n              <mat-icon mat-icon-button>visibility</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Class'\" class=\"big-icon-edit\"\n              (click)=\"editClicked(class._id)\">\n              <mat-icon mat-icon-button>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Class'\" class=\"big-icon-delete\"\n              (click)=\"deleteClicked(class._id)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </div>\n        </row>\n        <br>\n        <row>\n          <div fxFlex=\"60%\">\n            <div class=\"bold\">\n              <mat-icon>ballot</mat-icon>Class Name\n            </div>\n            <div class=\"small-screen-data\">\n              {{class.basicInfo.className}}\n            </div>\n            <br>\n            <div class=\"bold\">\n              <mat-icon>money</mat-icon>Basic fee\n            </div>\n            <div class=\"small-screen-data\">\n              {{class.basicInfo.classFee | currency:'INR'}}\n            </div>\n          </div>\n          <div fxFlex>\n            <div class=\"bold\">\n              Sections\n            </div>\n            <div>\n              <ol style=\"list-style-type: decimal;\">\n                <li *ngFor=\"let section of class.basicInfo.classSection\" class=\"default-font\">\n                  {{section | masterData : 'classsections'}}\n                </li>\n              </ol>\n            </div>\n          </div>\n        </row>\n      </card>\n      <br>\n    </ng-container>\n  </small-screen>\n  <no-record-found *ngIf=\"classs.length ==0\"></no-record-found>\n  <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n    [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\" (page)=\"pagingClicked($event)\">\n  </mat-paginator>\n\n</card>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { MasterData } from '@env/environment';\nimport { ClassListComponent } from '../class-list/class-list.component';\nimport { Subject } from 'rxjs';\nimport { ClassService } from '../../services/class.service';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-class-management',\n  templateUrl: './class-management.component.html',\n  styleUrls: ['./class-management.component.css']\n})\nexport class ClassManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(ClassListComponent) private _ListPage: ClassListComponent\n  \n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n\n  public editPermissions\n  public isLoading = false\n    \n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private sharedApiService: SharedApiService,\n    private classService: ClassService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(8,4) === 2\n  }\n\n  ngOnInit() {}\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteClassPermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Class'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.classService.deleteClass(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<div>\n  <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button matTooltipShowDelay=\"100\"\n    class=\"btn\" matTooltipHideDelay=\"100\">\n    <mat-icon>ballot</mat-icon> Add New Class\n  </button>\n</div>\n\n<div>\n  <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" mat-raised-button class=\"btn\"\n    appToolTip=\"'Go back to Class List'\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n    <mat-icon>keyboard_return</mat-icon> Back to Class List\n  </button>\n</div>\n<br><br>\n\n<div>\n<app-new-class *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n  (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-class>\n</div>\n<app-class-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n  (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-class-list>\n\n\n<p>\n  <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n    (click)=\"deleteClassPermanently()\">\n    <mat-icon>delete_forever</mat-icon> Delete And Save\n  </button>\n</p>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject, Observable } from 'rxjs';\n\n@Component({\n  selector: 'class-subject-info',\n  templateUrl: './class-subject-info.component.html',\n  styleUrls: ['./class-subject-info.component.css']\n})\nexport class ClassSubjectInfoComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n  teacherDataObservable: Observable<any>;\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n  @Input() sectionId\n  masterData = MasterData\n  \n  isLoading = false\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {    \n    this.makeFieldConfig()      \n  } \n\n  makeFieldConfig(){\n\n    this.form.addControl(\"sectionId\", new FormControl(this.sectionId) )\n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Maximum marks\",\n        inputType: \"number\",\n        name: \"maxMarks\",\n        validations: [validationType.required()]\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Passing marks\",\n        inputType: \"number\",\n        name: \"passingMarks\",\n        validations: [validationType.required()]\n      }\n    ];\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<app-subject-teacher-ddl *ngIf=\"!isLoading\" [form]=\"form\" [initialFormValues]=\"initialFormValues\" [isViewMode]=\"isViewMode\"></app-subject-teacher-ddl>\r\n<dynamic-form *ngIf=\"!isLoading\" [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>\r\n<app-subject-timings *ngIf=\"!isLoading\" [form]=\"form\" [initialFormValues]=\"initialFormValues\" [isViewMode]=\"isViewMode\"></app-subject-timings>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'app-copy-subject',\n  templateUrl: './copy-subject.component.html',\n  styleUrls: ['./copy-subject.component.css']\n})\nexport class CopySubjectComponent implements OnInit {\n\n  @Output() public onSuccess = new EventEmitter();\n\n  @Input() mainForm: FormGroup\n  @Input() sectionId\n\n  public classSections\n  public masterData = MasterData\n  public fromSectionId\n\n  constructor(\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    this.fromSectionId = null\n    this.classSections = this.mainForm.get(\"basicInfo\").get(\"classSection\").value\n  }\n\n  copyClicked(fromSectionId) {\n    this.fromSectionId = fromSectionId\n  }\n\n  proceed(){\n    let copiedSubject = new FormArray([])\n\n    let currentSubject = <FormArray>this.mainForm.get(\"subject\")\n\n    currentSubject.controls.forEach(subject => {\n      if (subject.get(\"sectionId\").value === this.fromSectionId) {\n\n        let control = this.sharedService.copyFormControl(subject)\n\n        control.get(\"sectionId\").setValue(this.sectionId)\n        control.get(\"_id\").setValue(this.sharedService.generateMongoObjectId())\n\n        copiedSubject.push(control)\n      }\n    });\n\n    copiedSubject.controls.forEach(element => {\n      currentSubject.push(element)\n    });\n\n    this.onSuccess.emit(true)\n  }\n\n  dontCopyClicked() {\n    this.onSuccess.emit(false)\n  }\n\n}\n","<mat-radio-group fxLayout=\"column\" [(ngModel)]=\"fromSectionId\">\n    <ng-container *ngFor=\"let secId of classSections\">\n        <mat-radio-button *ngIf=\"secId != sectionId\" class=\"radio-buttons pointer\" color=\"primary\" fxFlex [value]=\"secId\"\n            (click)=\"copyClicked(secId)\">\n            From Section {{secId | masterData : 'classsections'}}\n            -->\n            To Section {{sectionId | masterData : 'classsections'}}\n        </mat-radio-button>\n    </ng-container>\n</mat-radio-group>\n<br>\n<mat-divider></mat-divider>\n<br>\n<row>\n    <button color=\"primary\" mat-raised-button *ngIf=\"fromSectionId\" type=\"button\" (click)=\"proceed()\">\n        <mat-icon>file_copy</mat-icon> Proceed\n    </button>\n    <button type=\"button\" mat-raised-button  (click)=\"dontCopyClicked()\">Don't Copy</button>\n</row>","import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, ViewEncapsulation, OnDestroy, AfterViewChecked } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ClassService } from '../../services/class.service';\nimport { SharedApiService } from '@app/shared/services/shared-api.service';\n\n@Component({\n  selector: 'app-new-class',\n  templateUrl: './new-class.component.html',\n  styleUrls: ['./new-class.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NewClassComponent implements OnInit, OnDestroy, AfterViewChecked {\n  private unsubscribe$ = new Subject();\n  \n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  \n  mainForm: FormGroup = new FormGroup({})\n\n  public copyFromAnotherSection = false\n  public copyToSectionId = null\n\n  title = \"New Class\"\n  subTitle = \"Add a new class\"\n  isLoading = false\n  isPopulatingFormDb = false\n  initialFormValues = null\n  masterData = MasterData\n  open = false\n  subjectCount: number = 0\n\n  constructor(    \n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    private sharedApiService: SharedApiService,\n    public sharedService: SharedService,\n    public classService: ClassService\n  ) {}\n\n  ngOnInit() {  \n\n    this.setTitleMessages()\n    \n    this.mainForm = this.fb.group(\n      {\n        basicInfo: this.fb.group({}),      \n        subject: this.fb.array([]),\n        sectionConfig: this.fb.array([])\n      }\n      )\n\n    this.sharedService.setFormCommonFields(this.mainForm)\n   \n    if (this.changeModeId) {\n      this.populateFromDB()\n    }    \n  }\n  \n  setTitleMessages(){\n    if (this.changeModeId) {\n      this.title = \"Update Class.\"      \n      this.subTitle = \"Please update following details of class.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Class.\"\n        this.subTitle = \"View following details of class.\"\n      }\n    }\n  }\n\n  addSubjectClicked(sectionId) {\n\n    this.addSubject(sectionId)\n    this.open = true // keep open the newly added subject\n    this.sharedService.pageLevelSave(\"New subject form\")\n  }\n\n  addSubject(sectionId, id = null, status = null) {\n\n    let subjectForm = this.fb.group({})\n\n    // Add section id to this subject\n    subjectForm.addControl(\"sectionId\",\n        new FormControl(sectionId)\n      )\n\n    this.subjectCount = this.subjectCount + 1;\n      (<FormArray>this.mainForm.get('subject'))\n      .push(\n          this.sharedService.setFormCommonFields(\n            subjectForm,\n            id, status\n          )\n        )\n  }\n\n  removeSubjectClicked(idx) {\n    let dialogRef = this.sharedService.openConfirmDialog()\n\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.removeSubject(idx)\n        this.sharedService.pageLevelDelete(\"Subject\")\n      }\n    });\n  }\n\n  removeSubject(idx) {\n    //this.mainForm['controls'].subject['controls']\n    (<FormArray>this.mainForm.get('subject'))\n      .removeAt(idx)\n    this.subjectCount--\n  }\n\n  copyFromAnotherSectionClicked(destinationSectionId){\n    this.copyToSectionId = destinationSectionId\n    this.copyFromAnotherSection = true\n  }\n  onCopyComplete(event){\n      this.closePopUp()\n  }\n  closePopUp(){\n    this.copyFromAnotherSection = false  \n  }\n\n  populateFromDB() {\n    //--- Fill Class information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.classService.getClass(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n\n            this.initialFormValues.subject = this.initialFormValues.subject.filter(x => x.status === 1) \n\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n           \n            //--- Fill subject for View/Edit mode\n            for(let idx=0; idx < (<Array<object>>element[\"subject\"]).length; idx++){\n              let id = ((<Array<object>>element[\"subject\"])[idx])[\"_id\"]\n              let status = ((<Array<object>>element[\"subject\"])[idx])[\"status\"]\n              let sectionId = ((<Array<object>>element[\"subject\"])[idx])[\"sectionId\"]\n              if(status == 1)\n              {\n                this.addSubject(sectionId, id, status)\n              }\n            }\n          });\n          \n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(event: Event) {\n\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.classService.saveClass(\n        this.mainForm.value,\n        this.changeModeId\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Class's information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()     \n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [loading]=\"isLoading || isPopulatingFormDb\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\">\n        <br>\n        <class-basic-info *ngIf=\"!isPopulatingFormDb\" [form]=\"mainForm.controls['basicInfo']\" [isViewMode]=\"isViewMode\"\n            [initialFormValues]=\"initialFormValues && initialFormValues.basicInfo\">\n        </class-basic-info>\n        <br>\n        <ng-container *ngIf=\"!isPopulatingFormDb && this.mainForm.controls['basicInfo'].get('classSection')\">\n            <div class=\"section-tabs\">\n                <mat-button-toggle-group #selectedSectionToggleButton=\"matButtonToggleGroup\" [value]=\"this.mainForm.controls['basicInfo'].get('classSection').value[0]\">\n                    <mat-button-toggle\n                        *ngFor=\"let sectionId of this.mainForm.controls['basicInfo'].get('classSection').value;\"\n                        [value]=\"sectionId\">\n                        <span class=\"section-name\">Section {{sectionId | masterData : 'classsections'}}</span>\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n            </div>\n\n            <div class=\"section-details\">\n                <ng-container\n                    *ngFor=\"let sectionId of this.mainForm.controls['basicInfo'].get('classSection').value; let idxSection = index;\">\n                    <div [hidden]=\"selectedSectionToggleButton.value != sectionId\" class=\"appear-animate\">\n                        <row *ngIf=\"!isViewMode\">\n                            <button color=\"primary\" mat-raised-button type=\"button\" class=\"pointer rt\"\n                                (click)=\"copyFromAnotherSectionClicked(sectionId)\">\n                                <mat-icon>file_copy</mat-icon> Copy Subjects\n                            </button>\n                            <button class=\"addOneMoreButton\" mat-raised-button type=\"button\" value=\"Add Subject\"\n                                (click)=\"addSubjectClicked(sectionId)\">\n                                <mat-icon matSuffix>add</mat-icon>\n                                <mat-icon matSuffix>menu_book</mat-icon>\n                            </button>\n                        </row>\n\n                        <div>\n                            <br><br>\n                            <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n                                <ng-container *ngFor=\"let subject of this.mainForm['controls'].subject['controls']; let idxSubject = index;\">\n                                    <mat-expansion-panel class=\"no-shadow\"\n                                        *ngIf=\"this.subject.controls['sectionId']?.value == sectionId\">\n                                        <mat-expansion-panel-header>\n                                            <mat-panel-title>\n                                                <smart-div class=\"negative-margin\" [form]=\"subject\">\n                                                    <mat-icon>menu_book</mat-icon>\n                                                    {{this.subject.controls['subjectId']?.value | subject}}\n                                                </smart-div>\n                                            </mat-panel-title>\n                                        </mat-expansion-panel-header>\n                                        <div class=\"rt\" *ngIf=\"!isViewMode\">\n                                            <mat-icon class=\"icon-delete\" (click)=\"removeSubjectClicked(idxSubject)\"\n                                                matSuffix>\n                                                delete_forever</mat-icon>\n                                        </div>\n                                        <class-subject-info [form]=\"subject\" [isViewMode]=\"isViewMode\" [sectionId]=\"sectionId\" \n                                        [initialFormValues]=\"initialFormValues?.subject.length > idxSubject && initialFormValues.subject[idxSubject]\">\n                                        </class-subject-info>\n                                    </mat-expansion-panel>\n                                </ng-container>\n                            </mat-accordion>\n                        </div>\n                        <br><br>\n                        <section-fee [formArray]=\"mainForm.controls['sectionConfig']\" [isViewMode]=\"isViewMode\"\n                            [sectionId]=\"sectionId\"\n                            [initialFormValues]=\"initialFormValues && initialFormValues.sectionConfig\">\n                        </section-fee>\n                    </div>\n                </ng-container>\n            </div>\n        </ng-container>\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>\n\n\n<card *ngIf=\"copyFromAnotherSection\" [refreshButton]=\"false\" [headerBorader]=\"false\"\n    [title]=\"'Copy subjects from another section'\" [popUpMode]=\"true\" (deleteCardEvent)=\"closePopUp()\">\n    <app-copy-subject [sectionId]=\"copyToSectionId\" [mainForm]=\"this.mainForm\" (onSuccess)=\"onCopyComplete($event)\">\n    </app-copy-subject>\n</card>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'section-fee',\n  templateUrl: './section-fee.component.html',\n  styleUrls: ['./section-fee.component.css']\n})\nexport class SectionFeeComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @Input() formArray: FormArray\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n  @Input() sectionId\n\n  masterData = MasterData\n  public form = new FormGroup({})\n\n  constructor(\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    this.formArray.push(this.form)\n    this.makeFieldConfig()\n  }\n\n  makeFieldConfig() {\n\n    this.form.addControl(\"sectionId\", new FormControl(this.sectionId))\n\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"input\",\n        label: \"Any Section Extra Fee\",\n        inputType: \"number\",\n        name: \"fee\",\n        icon: \"money\",\n        value: 0\n      },\n      {\n        isViewMode: this.isViewMode,\n        type: \"textarea\",\n        label: \"Section Description/Comments\",\n        inputType: \"textarea\",\n        name: \"description\"\n      }\n    ];\n\n    let editModeValues = this.initialFormValues ? this.initialFormValues.find(x => x.sectionId === this.sectionId) : null\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, editModeValues)\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'app-subject-timings',\n  templateUrl: './subject-timings.component.html',\n  styleUrls: ['./subject-timings.component.css']\n})\nexport class SubjectTimingsComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n  isLoading = false\n\n  constructor(\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n    this.makeFieldConfig()\n  }\n\n  makeFieldConfig() {\n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"select\",\n        inputType: \"multi\",\n        label: \"Teaching Days\",\n        name: \"teachingDays\",\n        validations: [validationType.required()],\n        options: this.masterData.days,\n      }\n    ];\n\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n}\n","<dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>\n<form-time-range [form]=\"form\" [fromLabel]=\"'Teaching From Time'\" [toLabel]=\"'Teaching To Time'\" \n[Required]=\"true\" [initialFormValues]=\"initialFormValues\"></form-time-range>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { EventService } from '../../services/event.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.css']\n})\nexport class EventListComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n\n  @Input() pageTitle: string = \"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  events = [];\n\n  viewUserId: any\n  viewUser = false\n  public editPermissions\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName: \"toDate\",\n    isAsc: false\n  }\n\n  constructor(\n    private eventService: EventService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(8,2) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList() {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters: this.searchParams,\n      paging: {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting: {\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.eventService\n      .getSchoolEventList(SearchObject)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          this.isLoading = false\n          this.events = result.data\n          this.paging.length = result.count\n        },\n        (error) => {\n          this.isLoading = false\n          console.log(error)\n        }\n      );\n  }\n\n  viewClicked(id) {\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id) {\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser() {\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort) {\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent) {\n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<card [loading]=\"isLoading\" [title]=\"'Event List'\" [subTitle]=\"'Manage your event for School'\"\n    (refresh)=\"getList()\">\n    <large-screen>\n        <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n            <thead class=\"thead\">\n                <tr>\n                    <th class=\"sr\">#</th>\n                    <th matRipple mat-sort-header=\"eventName\">\n                        Event Name\n                        <mat-icon>group_work</mat-icon>\n                    </th>\n                    <th matRipple mat-sort-header=\"fromDate\">\n                        From Date\n                        <mat-icon>today</mat-icon>\n                    </th>\n                    <th matRipple mat-sort-header=\"toDate\">\n                        To Date\n                        <mat-icon>today</mat-icon>\n                    </th>\n\n                    <th class=\"action\">\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"tr\" *ngFor=\"let event of events; let idx = index\">\n                    <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n                    <td>{{event.eventName}}</td>\n                    <td>{{event.fromDate | date}}</td>\n                    <td>{{event.toDate | date}}</td>\n                    <td class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Event'\" class=\"icon-view\"\n                            (click)=\"viewClicked(event._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Event'\" class=\"icon-edit\"\n                            (click)=\"editClicked(event._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button><button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Event'\"\n                            class=\"icon-delete\" (click)=\"deleteClicked(event._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </large-screen>\n\n    <small-screen class=\"default-font\">\n        <ng-container *ngFor=\"let event of events; let idx = index; let odd = odd;\">\n            <card [childCard]=\"true\" [header]=\"false\">\n                <row gap=\"2px\">\n                    <div fxFlex=\"30%\">\n                        <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n                    </div>\n                    <div fxFlex class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Event'\" class=\"big-icon-view\"\n                            (click)=\"viewClicked(event._id)\">\n                            <mat-icon mat-icon-button class=\"big-icon\">visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Event'\" class=\"big-icon-edit\"\n                            (click)=\"editClicked(event._id)\">\n                            <mat-icon class=\"big-icon\">edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Event'\"\n                            class=\"big-icon-delete\" (click)=\"deleteClicked(event._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </div>\n                </row>\n                <br>\n                <row>\n                    <div>\n                        <div class=\"bold\">\n                            <mat-icon>today</mat-icon> From Date\n                        </div>\n                        <div class=\"small-screen-data\">\n                            {{event.fromDate | date}}\n                        </div>\n                    </div>\n                    <div fxFlex>\n                        <div class=\"bold\">\n                            <mat-icon>today</mat-icon> To Date\n                        </div>\n                        <div class=\"small-screen-data\">\n                            {{event.toDate | date}}\n                        </div>\n                    </div>\n                </row>\n                <br>\n                <div class=\"bold\">\n                    <mat-icon>group_work</mat-icon>Event Name\n                </div>\n                <div class=\"small-screen-data\">\n                    {{event.eventName}}\n                </div>\n            </card>\n            <br>\n        </ng-container>\n    </small-screen>\n\n    <no-record-found *ngIf=\"events.length ==0\"></no-record-found>\n\n    <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n        [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\"\n        (page)=\"pagingClicked($event)\">\n    </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { EventListComponent } from './event-list/event-list.component';\nimport { MasterData } from '@env/environment';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { EventService } from '../services/event.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-event-management',\n  templateUrl: './event-management.component.html',\n  styleUrls: ['./event-management.component.css']\n})\nexport class EventManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(EventListComponent) private _ListPage: EventListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n  \n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n  public editPermissions\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Event Name\",\n      inputType: \"text\",\n      name: \"eventName\",\n      icon: \"group_work\"\n    }\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private eventService: EventService,\n    private plService: PostLoginService\n  ) {\n      this.searchForm = this.fb.group({})\n      this.editPermissions = this.plService.getPageEntitlements(8,2) === 2\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteEventPermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Event'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.eventService.deleteEvent(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            matTooltipShowDelay=\"100\" class=\"btn\" matTooltipHideDelay=\"100\">\n            <mat-icon>group_work</mat-icon> Add New Event\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Event'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <form-date-range [form]=\"searchForm\"></form-date-range>\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" mat-raised-button\n            class=\"btn\" appToolTip=\"'Go back to Event List'\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Event List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<app-new-event *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-event>\n<app-event-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-event-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteEventPermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'event-basic-info',\n  templateUrl: './event-basic-info.component.html',\n  styleUrls: ['./event-basic-info.component.css']\n})\nexport class EventBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n  }\n\n}\n","<form-date-range [Required]=\"true\" [form]=\"form\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\">\n</form-date-range>\n<form-code-name [Required]=\"true\" [codeField]=\"false\" [labelPrefix]=\"'Event'\" [fieldPrefix]=\"'event'\" [nameIcon]=\"'group_work'\"\n    [form]=\"form\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\"></form-code-name>","import { Component, OnInit, OnDestroy, EventEmitter, Output, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { EventService } from '../../services/event.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-event',\n  templateUrl: './new-event.component.html',\n  styleUrls: ['./new-event.component.css']\n})\nexport class NewEventComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() showHeader = true\n  @Input() childCard = false;\n\n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New Event\"\n  subTitle = \"Add a new event\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  stoppageCount: number = 0\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public eventService: EventService\n  ) { }\n\n  ngOnInit() {\n\n    this.setTitleMessages()\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = \"Update Event.\"\n      this.subTitle = \"Please update following details of event.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Event.\"\n        this.subTitle = \"View following details of event.\"\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill Event information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.eventService.getSchoolEvent(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(event: Event) {\n\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.eventService.saveSchoolEvent(\n        this.mainForm.getRawValue()\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Event's information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\" [header]=\"showHeader\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\" *ngIf=\"mainForm && !isPopulatingFormDb\">\n        <event-basic-info [form]=\"mainForm\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\">\n        </event-basic-info>\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { Component, OnInit, ChangeDetectorRef, Output, EventEmitter, Input, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { takeUntil } from 'rxjs/operators';\nimport { HolidayService } from '../../services/holiday.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment, MasterData } from '@env/environment';\nimport { Subject } from 'rxjs';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-holiday-list',\n  templateUrl: './holiday-list.component.html',\n  styleUrls: ['./holiday-list.component.css']\n})\nexport class HolidayListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  holidays = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"holidayDate\",\n    isAsc : false\n  }\n\n  constructor(\n    private holidayService: HolidayService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(8,1) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.holidayService\n    .getSchoolHolidayList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.holidays = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<card [loading]=\"isLoading\" [title]=\"'Holiday List'\" [subTitle]=\"'Manage your holiday for School'\"\n    (refresh)=\"getList()\">\n    <large-screen>\n        <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n            <thead class=\"thead\">\n                <tr>\n                    <th class=\"sr\">#</th>\n                    <th matRipple mat-sort-header=\"holidayName\">\n                        Holiday Name\n                        <mat-icon>deck</mat-icon>\n                    </th>\n                    <th matRipple mat-sort-header=\"holidayDate\">\n                        Holiday Date\n                        <mat-icon>today</mat-icon>\n                    </th>\n                    <th class=\"action\">\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"tr\" *ngFor=\"let holiday of holidays; let idx = index\">\n                    <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n                    <td>{{holiday.holidayName}}</td>\n                    <td>{{holiday.holidayDate | date : 'fullDate'}}</td>\n                    <td class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Holiday'\" class=\"icon-view\"\n                            (click)=\"viewClicked(holiday._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Holiday'\" class=\"icon-edit\"\n                            (click)=\"editClicked(holiday._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Holiday'\" class=\"icon-delete\"\n                            (click)=\"deleteClicked(holiday._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </large-screen>\n\n    <small-screen class=\"default-font\">\n        <ng-container *ngFor=\"let holiday of holidays; let idx = index; let odd = odd\">\n            <card [childCard]=\"true\" [header]=\"false\">\n                <row gap=\"2px\">\n                    <div fxFlex=\"30%\">\n                        <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n                    </div>\n                    <div fxFlex class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Holiday'\" class=\"big-icon-view\"\n                            (click)=\"viewClicked(holiday._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Holiday'\" class=\"big-icon-edit\"\n                            (click)=\"editClicked(holiday._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Holiday'\" class=\"big-icon-delete\"\n                            (click)=\"deleteClicked(holiday._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </div>\n                </row>\n                <div class=\"bold\">\n                    <mat-icon>today</mat-icon> {{holiday.holidayDate | date : 'fullDate'}}\n                </div>\n                <br>\n                <div class=\"small-screen-data\">\n                    {{holiday.holidayName}}\n                </div>\n            </card>\n            <br>\n        </ng-container>\n\n    </small-screen>\n\n    <no-record-found *ngIf=\"holidays.length ==0\"></no-record-found>\n\n    <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n        [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\"\n        (page)=\"pagingClicked($event)\">\n    </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HolidayListComponent } from './holiday-list/holiday-list.component';\nimport { MasterData } from '@env/environment';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { HolidayService } from '../services/holiday.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-holiday-management',\n  templateUrl: './holiday-management.component.html',\n  styleUrls: ['./holiday-management.component.css']\n})\nexport class HolidayManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(HolidayListComponent) private _ListPage: HolidayListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n\n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n  public editPermissions\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Holiday Name\",\n      inputType: \"text\",\n      name: \"holidayName\",\n      icon: \"deck\"\n    } \n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private holidayService: HolidayService,\n    private plService: PostLoginService\n  ) {\n    this.searchForm = this.fb.group({})\n    this.editPermissions = this.plService.getPageEntitlements(8,1) === 2\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteHolidayPermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Holiday'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.holidayService.deleteSchoolHoliday(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            matTooltipShowDelay=\"100\" class=\"btn\" matTooltipHideDelay=\"100\">\n            <mat-icon>deck</mat-icon> Add New Holiday\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Holiday'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <form-date-range [form]=\"searchForm\"></form-date-range>\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" mat-raised-button\n            class=\"btn\" appToolTip=\"'Go back to Holiday List'\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Holiday List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<app-new-holiday *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-holiday>\n<app-holiday-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-holiday-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteHolidayPermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'holiday-basic-info',\n  templateUrl: './holiday-basic-info.component.html',\n  styleUrls: ['./holiday-basic-info.component.css']\n})\nexport class HolidayBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {  \n    this.fieldsConfig = [\n      {\n        isViewMode: this.isViewMode,\n        type: \"date\",\n        label: \"Holiday Date\",\n        name: \"holidayDate\",\n        validations: [validationType.required()]\n      }\n    ]\n\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","\n<form-code-name [Required]=\"true\" [codeField]=\"false\" [labelPrefix]=\"'Holiday'\" [fieldPrefix]=\"'holiday'\" [fieldsConfig]=\"fieldsConfig\"\n    [nameIcon]=\"'deck'\" [form]=\"form\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\"></form-code-name>\n","import { Component, OnInit, OnDestroy, Output, Input, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { HolidayService } from '../../services/holiday.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-holiday',\n  templateUrl: './new-holiday.component.html',\n  styleUrls: ['./new-holiday.component.css']\n})\nexport class NewHolidayComponent implements OnInit , OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() showHeader = true\n  @Input() childCard = false;\n\n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New Holiday\"\n  subTitle = \"Add a new holiday\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  stoppageCount: number = 0\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public holidayService: HolidayService\n  ) { }\n\n  ngOnInit() {\n    this.setTitleMessages()\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = \"Update Holiday.\"\n      this.subTitle = \"Please update following details of holiday.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Holiday.\"\n        this.subTitle = \"View following details of holiday.\"\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill Holiday information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.holidayService.getSchoolHoliday(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(holiday: Event) {\n    this.mainForm.markAllAsTouched()\n    holiday.preventDefault();\n    holiday.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.holidayService.saveSchoolHoliday(\n        this.mainForm.getRawValue()\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Holiday's information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\" [header]=\"showHeader\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\" *ngIf=\"mainForm && !isPopulatingFormDb\">\n        <holiday-basic-info [form]=\"mainForm\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\">\n        </holiday-basic-info>\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { MasterData, defaultMenuListAndEntitlements } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { RoleService } from '../../services/role.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-role',\n  templateUrl: './new-role.component.html',\n  styleUrls: ['./new-role.component.css']\n})\nexport class NewRoleComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() showHeader = true\n  @Input() childCard = false;\n\n  mainForm: FormGroup\n\n  title = \"New Role\"\n  subTitle = \"Add a new role\"\n  isLoading = false\n  isPopulatingFormDb = false\n  initialFormValues = null\n  masterData = MasterData\n  public defaultEntitlements = defaultMenuListAndEntitlements\n  open = false\n\n  stoppageCount: number = 0\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public roleService: RoleService\n  ) {\n      this.mainForm = new FormGroup({\n        entitlements: this.fb.array([])\n      })\n\n      this.defaultEntitlements.forEach(menu => {\n        this.addEntitlement()\n      });\n   }\n\n   addEntitlement() {\n      (<FormArray>this.mainForm.get('entitlements'))\n      .push(this.fb.group({}))      \n  }\n\n  ngOnInit() {\n    this.setTitleMessages()\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = \"Update Role.\"\n      this.subTitle = \"Please update following details of role.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Role.\"\n        this.subTitle = \"View following details of role.\"\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill Role information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.roleService.getSchoolRole(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(role: Event) {\n    this.mainForm.markAllAsTouched()\n    role.preventDefault();\n    role.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.roleService.saveSchoolRole(\n        this.mainForm.getRawValue()\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n\n\n            if (result.isSuccess) {\n              this.onSaveSuccess.emit(true)\n              this.sharedService.openSnackBar(result.message, \"x\", \"success\")\n              this.mainForm.reset()\n            }\n            else {\n              this.sharedService.openSnackBar(result.message, \"x\", \"fail\")\n            }\n\n            this.isLoading = false\n            \n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\" [header]=\"showHeader\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\" *ngIf=\"mainForm && !isPopulatingFormDb\">\n        <role-basic-info [form]=\"mainForm\" [isViewMode]=\"isViewMode || (changeModeId | userRole : 'isPredefined')\" [initialFormValues]=\"initialFormValues\"></role-basic-info>\n        <br>\n\n        <ng-container *ngFor=\"let entitlement of this.mainForm['controls'].entitlements['controls']; let idx = index;\">\n            <span class=\"bold menu-number\"># {{idx +1}}</span>\n            <app-role-entitlements [form]=\"entitlement\" [isViewMode]=\"isViewMode\" [defaultEntitlement]=\"defaultEntitlements[idx]\" [initialFormValues]=\"initialFormValues\"></app-role-entitlements>\n            <br><br><br><br>\n        </ng-container>\n\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\" [resetButtonNeeded]=\"false\"></form-buttons>\n    </form>\n</card>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'role-basic-info',\n  templateUrl: './role-basic-info.component.html',\n  styleUrls: ['./role-basic-info.component.css']\n})\nexport class RoleBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","<form-code-name [Required]=\"true\" [labelPrefix]=\"'Role'\" [codeField]=\"false\" [nameIcon]=\"'android'\"\n    [form]=\"form\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\"></form-code-name>","import { Component, OnInit, Input } from '@angular/core';\nimport { defaultMenuListAndEntitlements, MasterData } from '@env/environment';\n\n@Component({\n  selector: 'page-info',\n  templateUrl: './page-info.component.html',\n  styleUrls: ['./page-info.component.css']\n})\nexport class PageInfoComponent implements OnInit {\n\n  @Input() pageId\n  @Input() subPageId\n\n  public pageData\n\n  constructor() { }\n\n  ngOnInit() {\n    this.collectMenuPageData()\n  }\n\n  collectMenuPageData(){\n    let page = defaultMenuListAndEntitlements.find(x => x.pageId === this.pageId)\n\n    if(!page){\n      return MasterData.emptyDataText\n    }\n\n    let subPage = null\n    \n    if(this.subPageId){\n      subPage = page.subPage.find(x => x.subPageId === this.subPageId)\n    }    \n\n    if(subPage){\n      this.pageData = {\n        \"name\" : subPage.menu.name,\n        \"icon\" : subPage.menu.icon\n      }\n    }\n    else{\n      this.pageData =  {\n        \"name\" : page.menu.name,\n        \"icon\" : page.menu.icon\n      }\n    }\n  \n  }\n\n}\n","<mat-icon>{{pageData.icon}}</mat-icon> {{pageData.name}}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\n\n@Component({\n  selector: 'app-role-entitlements',\n  templateUrl: './role-entitlements.component.html',\n  styleUrls: ['./role-entitlements.component.css']\n})\nexport class RoleEntitlementsComponent implements OnInit {\n\n  @Input() form: FormGroup  \n  @Input() defaultEntitlement = null\n  @Input() initialFormValues = null\n  @Input() isViewMode = false\n  \n  \n  public fieldsConfig: FieldConfig[] = []\n  public initialEntitlements = null\n  public isLoading = false\n\n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.isLoading = true\n    this.configureMenuItems()\n    this.isLoading = false\n  }\n\n  configureMenuItems(){\n\n    let pageId = this.defaultEntitlement.pageId\n    \n    let accessTypeId = this.defaultEntitlement.accessTypeId\n\n    this.initialEntitlements = this.initialFormValues ? this.initialFormValues.entitlements : null\n\n    if(this.initialEntitlements){\n      let initialEntitlement = this.initialEntitlements.find(x => x.pageId === pageId)\n      accessTypeId = initialEntitlement ? initialEntitlement.accessTypeId : accessTypeId\n    }\n\n    this.form.addControl(\"pageId\", this.fb.control(pageId, Validators.required))\n    this.form.addControl(\"subPage\", this.fb.array([]))\n    this.fieldsConfig.push(\n      {\n        isViewMode: this.isViewMode,\n        type: \"radiobutton\",\n        label: \"\",\n        name: \"accessTypeId\",\n        value: accessTypeId,\n        options: MasterData.pageEntitlements,\n        validations: [validationType.required()]\n      }\n    )\n\n    this.configureSubMenuItems(<FormArray> this.form.get('subPage'))\n\n  }\n\n  configureSubMenuItems(formArray: FormArray){\n\n    let defaultSubPages = this.defaultEntitlement.subPage\n\n    defaultSubPages.forEach(subPage => {\n\n      formArray.push(\n        this.fb.group({})\n      )\n    });    \n  }\n\n}\n","<table width=\"100%\" border=\"1px\" cellspacing=\"0\" class=\"appear-animate menuTable box-shadow\">\n    <tr>\n        <td class=\"mainMenuEntitlement\">\n            <row [gap]=\"'2%'\">\n                <div class=\"mainMenuName\">\n                    <page-info [pageId]=\"form.get('pageId').value\"></page-info>\n                </div>\n                <div fxFlex>\n                    <dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>\n                </div>\n            </row>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <br>\n            <ng-container *ngIf=\"form.get('accessTypeId').value == 2; else noAccess\">\n                <ng-container *ngFor=\"let subPage of this.form['controls'].subPage['controls']; let idx = index; let last = last;\">\n                    <sub-page-entitlement *ngIf=\"!isLoading\" [form]=\"subPage\" [isViewMode]=\"isViewMode\"\n                        [pageId]=\"defaultEntitlement.pageId\" [defaultEntitlement]=\"defaultEntitlement.subPage[idx]\"\n                        [initialFormValues]=\"initialFormValues?.entitlements\"></sub-page-entitlement>                    \n                        <div *ngIf=\"!last\" class=\"separator\"></div>\n                </ng-container>\n                <br>\n            </ng-container>\n            <ng-template #noAccess>\n                <p class=\"default-font jump-animate\" style=\"padding: 0px 5px 0px 5px;\">\n                    <i>\n                       <mat-icon>report</mat-icon> User having above mentioned role can't see this menu anymore.\n                    </i>\n                </p>\n            </ng-template>\n        </td>\n    </tr>\n</table>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\n\n@Component({\n  selector: 'sub-page-entitlement',\n  templateUrl: './sub-page-entitlement.component.html',\n  styleUrls: ['./sub-page-entitlement.component.css']\n})\nexport class SubPageEntitlementComponent implements OnInit {\n\n  @Input() form: FormGroup  \n  @Input() pageId = null\n  @Input() defaultEntitlement = null\n  @Input() initialFormValues = null\n  @Input() isViewMode = false\n\n  public fieldsConfig: FieldConfig[] = []\n  public subPageId\n  public isLoading = false\n  \n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.isLoading = true\n    this.configureFields()\n    this.isLoading = false\n  }\n\n  configureFields(){\n    this.subPageId = this.defaultEntitlement.subPageId\n    let accessTypeId = this.defaultEntitlement.accessTypeId\n\n    if(this.initialFormValues){\n\n      let filteredInitialValues = this.initialFormValues.find(x => x.pageId === this.pageId)\n      \n      if(filteredInitialValues){\n        let initialEntitlement = filteredInitialValues.subPage.find(x => x.subPageId === this.subPageId)\n        accessTypeId = initialEntitlement ? initialEntitlement.accessTypeId : accessTypeId\n      }\n    }\n\n    this.form.addControl(\"subPageId\", this.fb.control(this.subPageId, Validators.required))\n    this.fieldsConfig.push(\n      {\n        isViewMode: this.isViewMode,\n        type: \"radiobutton\",\n        label: \"\",\n        name: \"accessTypeId\",\n        value: accessTypeId,\n        options: MasterData.subPageEntitlements,\n        validations: [validationType.required()]\n      }\n    )\n  }\n\n}\n","<table class=\"appear-animate subMenuTable\" width=\"98%\" border=\"0px\" cellspacing=\"0\">\n    <tr>\n        <td style=\"width: 280px;\" class=\"default-font\">\n            <page-info [pageId]=\"pageId\" [subPageId]=\"subPageId\"></page-info>\n        </td>\n        <td>\n            <dynamic-form [form]=\"form\" [fields]=\"fieldsConfig\" [addEmptyDiv]=\"false\"></dynamic-form>\n        </td>\n    </tr>\n</table>\n\n\n","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { RoleService } from '../../services/role.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-role-list',\n  templateUrl: './role-list.component.html',\n  styleUrls: ['./role-list.component.css']\n})\nexport class RoleListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  roles = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"name\",\n    isAsc : true\n  }\n\n  constructor(\n    private roleService: RoleService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(8,5) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.roleService\n    .getSchoolRoleList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.roles = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<card [loading]=\"isLoading\" [title]=\"'Role List'\" [subTitle]=\"'Manage your role for School'\"\n    (refresh)=\"getList()\">\n    <large-screen>\n        <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n            <thead class=\"thead\">\n                <tr>\n                    <th class=\"sr\">#</th>\n                    <th matRipple mat-sort-header=\"name\">\n                        Role Name &nbsp; <mat-icon>android</mat-icon>\n                    </th>\n                    <th class=\"action\">\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"tr\" *ngFor=\"let role of roles; let idx = index\">\n                    <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n                    <td>{{role.name}}</td>\n                    <td class=\"rt\">\n                        <ng-container *ngIf=\"role._id != this.masterData.superAdminRoleId['$oid']; else superAdmin;\">\n                            <button mat-icon-button appToolTip=\"'View Role'\" class=\"icon-view\"\n                                (click)=\"viewClicked(role._id)\">\n                                <mat-icon mat-icon-button>visibility</mat-icon>\n                            </button>\n                            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Role'\" class=\"icon-edit\"\n                                (click)=\"editClicked(role._id)\">\n                                <mat-icon>edit</mat-icon>\n                            </button>\n                            <span *ngIf=\"! (role._id | userRole : 'isPredefined')\">\n                                <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Role'\"\n                                    class=\"icon-delete\" (click)=\"deleteClicked(role._id)\">\n                                    <mat-icon>delete_forever</mat-icon>\n                                </button>\n                            </span>\n                        </ng-container>\n                        <ng-template #superAdmin>\n                            <p>\n                            <mat-icon>android</mat-icon>\n                        </p>\n                        </ng-template>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </large-screen>\n\n    <small-screen class=\"default-font\">\n        <ng-container *ngFor=\"let role of roles; let idx = index; let odd = odd\">\n            <card [childCard]=\"true\" [header]=\"false\">\n                <row gap=\"2px\">\n                    <div fxFlex=\"30%\">\n                        <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n                    </div>\n                    <div fxFlex class=\"rt\">\n                        <ng-container *ngIf=\"role._id != this.masterData.superAdminRoleId['$oid']; else superAdmin;\">\n                            <button mat-icon-button appToolTip=\"'View Role'\" class=\"big-icon-view\"\n                                (click)=\"viewClicked(role._id)\">\n                                <mat-icon mat-icon-button>visibility</mat-icon>\n                            </button>\n                            <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Role'\"\n                                class=\"big-icon-edit\" (click)=\"editClicked(role._id)\">\n                                <mat-icon>edit</mat-icon>\n                            </button>\n                            <span *ngIf=\"! (role._id | userRole : 'isPredefined')\">\n                                <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Role'\"\n                                    class=\"big-icon-delete\" (click)=\"deleteClicked(role._id)\">\n                                    <mat-icon>delete_forever</mat-icon>\n                                </button>\n                            </span>\n                        </ng-container>\n                        <ng-template #superAdmin>\n                                <p>\n                                <mat-icon>android</mat-icon>\n                            </p>\n                            </ng-template>\n                    </div>\n                </row>\n                <div class=\"small-screen-data\">\n                    {{role.name}}\n                </div>\n            </card>\n            <br>\n        </ng-container>\n\n    </small-screen>\n\n    <no-record-found *ngIf=\"roles.length ==0\"></no-record-found>\n\n    <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n        [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\"\n        (page)=\"pagingClicked($event)\">\n    </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { RoleService } from '../services/role.service';\nimport { RoleListComponent } from './role-list/role-list.component';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-role-management',\n  templateUrl: './role-management.component.html',\n  styleUrls: ['./role-management.component.css']\n})\nexport class RoleManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(RoleListComponent) private _ListPage: RoleListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n\n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n  public editPermissions\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Role Name\",\n      inputType: \"text\",\n      name: \"name\",\n      icon: \"android\"\n    } \n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private roleService: RoleService,\n    private plService: PostLoginService\n  ) {\n    this.searchForm = this.fb.group({})\n    this.editPermissions = this.plService.getPageEntitlements(8,5) === 2\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteRolePermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Role'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.roleService.deleteSchoolRole(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            matTooltipShowDelay=\"100\" class=\"btn\" matTooltipHideDelay=\"100\">\n            <mat-icon>android</mat-icon> Add New Role\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Role'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" mat-raised-button\n            class=\"btn\" appToolTip=\"'Go back to Role List'\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Role List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<app-new-role *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-role>\n<app-role-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-role-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteRolePermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { SchoolService } from '../../services/school.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-school',\n  templateUrl: './new-school.component.html',\n  styleUrls: ['./new-school.component.css']\n})\nexport class NewSchoolComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  \n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() isSuperAdmin\n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New School\"\n  subTitle = \"Add a new school\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  branchCount: number = 0\n\n  constructor(    \n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public schoolService: SchoolService\n  ) {}\n\n  ngOnInit() {\n    this.setTitleMessages()\n    \n    this.mainForm = this.fb.group(\n      {\n        schoolBasicInfo: this.fb.group({}),\n        schoolContact: this.fb.group({}),\n        branch: this.fb.array([])\n      }\n      )\n\n    this.sharedService.setFormCommonFields(this.mainForm, null, null)\n    \n    if(!this.changeModeId && !this.isViewMode){\n      // Add new School Model only\n      this.addBranch()\n    }\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n  \n  setTitleMessages(){\n    if (this.changeModeId) {\n      this.title = \"Update School.\"      \n      this.subTitle = \"Please update following details of school.\"\n\n      if (this.isViewMode) {\n        this.title = \"View School.\"\n        this.subTitle = \"View following details of school.\"\n      }\n    }\n  }\n\n  addBranchClicked() {\n\n    this.addBranch()\n    this.open = true // keep open the newly added branch\n    this.sharedService.pageLevelSave(\"New branch form\")\n  }\n  addBranch(id = null, status = null) {\n\n    this.branchCount = this.branchCount + 1;\n      (<FormArray>this.mainForm.get('branch'))\n      .push(\n          this.sharedService.setFormCommonFields(\n            this.fb.group({}),\n            id, status\n          )\n        )\n  }\n\n  removeBranchClicked(idx) {\n    let dialogRef = this.sharedService.openConfirmDialog()\n\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.removeBranch(idx)\n        this.sharedService.pageLevelDelete(\"Branch\")\n      }\n    });\n  }\n  removeBranch(idx) {\n    (<FormArray>this.mainForm.get('branch'))\n      .removeAt(idx)\n    this.branchCount--\n  }\n\n  populateFromDB() {\n    //--- Fill School information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.schoolService.getSchool(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n           \n            //--- Fill branch for View/Edit mode\n            for(let idx=0; idx < (<Array<object>>element[\"branch\"]).length; idx++){\n              let id = ((<Array<object>>element[\"branch\"])[idx])[\"_id\"]\n              let status = ((<Array<object>>element[\"branch\"])[idx])[\"status\"]\n              this.addBranch(id, status)\n            }\n\n          });\n          \n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(event: Event) {\n\n    this.mainForm.markAllAsTouched()\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.schoolService.saveSchool(\n        this.mainForm.value,\n        this.changeModeId\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"School's information saved Successfully.\", \"x\", \"success\")  \n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [refreshButton]=\"false\" *ngIf=\"!isPopulatingFormDb\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\">\n        <mat-tab-group [backgroundColor]=\"'primary'\" [@.disabled]=\"true\">\n            <mat-tab *ngIf=\"this.mainForm\">\n                <ng-template mat-tab-label>\n                    <smart-div highlighPass=\"true\" [form]=\"this.mainForm\">\n                        <mat-icon class=\"example-tab-icon\">business</mat-icon>\n                    </smart-div>\n                    <large-screen>Basic</large-screen>\n                </ng-template>\n                <br><br>\n\n                <app-section [icon]=\"'business'\" [title]=\"'School Basic Information'\">\n                    <br>\n                    <form-code-name [form]=\"mainForm.controls['schoolBasicInfo']\" [isViewMode]=\"isViewMode\"\n                        [codeField]=\"false\" [Required]=\"true\"\n                        [initialFormValues]=\"initialFormValues && initialFormValues?.schoolBasicInfo\">\n                    </form-code-name>\n                </app-section>\n                <br><br>\n                <app-section [icon]=\"'local_phone'\" [title]=\"'School Contact Information'\">\n                    <br>\n                    <form-contact-info [Required]=\"true\" [form]=\"mainForm.controls['schoolContact']\"\n                        [isViewMode]=\"isViewMode\"\n                        [initialFormValues]=\"initialFormValues && initialFormValues?.schoolContact\">\n                    </form-contact-info>\n                </app-section>\n            </mat-tab>\n            <mat-tab>\n                <ng-template mat-tab-label>\n                    <smart-div highlighPass=\"true\" [form]=\"this.mainForm['controls'].branch\">\n                        <mat-icon class=\"example-tab-icon\">account_tree</mat-icon>\n                    </smart-div>\n                    <large-screen>Branches</large-screen>\n                </ng-template>\n                <br>\n                <div *ngFor=\"let branch of this.mainForm['controls'].branch['controls']; let idxBranch = index;\">\n                    <card [childCard]=\"true\" [icon]=\"'location_city'\"\n                        [title]=\"this.branch.controls['branchBasicInfo']?.controls['name']?.value ? this.branch.controls['branchBasicInfo']?.controls['name']?.value : '---------'\"\n                        [refreshButton]=\"false\">\n                        <div class=\"rt\" *ngIf=\"isSuperAdmin && !isViewMode\">\n                            <button type=\"button\" class=\"delete-button\" mat-raised-button\n                                (click)=\"removeBranchClicked(idxBranch)\">\n                                <mat-icon matSuffix>delete_forever</mat-icon>\n                            </button>\n                        </div>\n                        <app-school-branch-info [form]=\"branch\" [isViewMode]=\"isViewMode\" [changeModeId]=\"changeModeId\" [isSuperAdmin]=\"isSuperAdmin\"\n                            [initialFormValues]=\"initialFormValues?.branch.length > idxBranch && initialFormValues.branch[idxBranch]\">\n                        </app-school-branch-info>\n                    </card>\n                    <br>\n                </div>\n\n                <p class=\"rt\" *ngIf=\"isSuperAdmin && !isViewMode && mainForm.controls['branch'].valid\">\n                    <button class=\"addOneMoreButton\" mat-raised-button type=\"button\" value=\"Add Branch\"\n                        (click)=\"addBranchClicked()\">\n                        <mat-icon matSuffix>add</mat-icon>\n                        <mat-icon matSuffix>account_tree</mat-icon>\n                    </button>\n                </p>\n            </mat-tab>\n        </mat-tab-group>\n\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { SchoolService } from '@app/post-login/school/services/school.service';\n\n@Component({\n  selector: 'app-school-branch-info',\n  templateUrl: './school-branch-info.component.html',\n  styleUrls: ['./school-branch-info.component.css']\n})\nexport class SchoolBranchInfoComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Input() isSuperAdmin\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n  @Input() changeModeId = null\n\n  masterData = MasterData\n\n  classCount = 0\n  public isLoading\n\n  constructor(\n    private fb: FormBuilder,\n    private schoolService: SchoolService,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit() {\n\n    this.form.addControl(\n      \"branchBasicInfo\", this.fb.group({})\n    )\n    this.form.addControl(\n      \"branchContact\", this.fb.group({})\n    )\n    this.form.addControl(\n      \"branchAddress\", this.fb.group({})\n    )\n   \n  }\n\n  setUpBranchRoles(){\n    this.isLoading = true\n\n    this.schoolService.setupBranchRoles(this.initialFormValues._id)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading = false\n        if (result.isSuccess) {\n          this.sharedService.openSnackBar(result.message, \"x\", \"success\")\n        }\n        else {\n          this.sharedService.openSnackBar(result.message, \"x\", \"fail\")\n        } \n      },\n      (error: any) => {\n        this.isLoading= false\n        console.log(error)\n      }\n    );\n  }\n\n  createBranchDefaultUser(){\n\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<div>\n    <mat-accordion hideToggle=\"true\" [multi]=\"masterData.expendMultiple\">\n        <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <smart-div [form]=\"form.controls['branchBasicInfo']\">\n                        <mat-icon>location_city</mat-icon> Branch Basic Details\n                    </smart-div>\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-code-name [form]=\"form.controls['branchBasicInfo']\" [isViewMode]=\"isViewMode\" [codeField]=\"false\"\n               [Required]=\"true\" [initialFormValues]=\"initialFormValues && initialFormValues?.branchBasicInfo\">\n            </form-code-name>\n        </mat-expansion-panel>\n        <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <smart-div [form]=\"form.controls['branchContact']\">\n                        <mat-icon>phone</mat-icon> Branch Contact Details\n                    </smart-div>\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-contact-info [form]=\"form.controls['branchContact']\" [Required]=\"true\" [isViewMode]=\"isViewMode\"\n                [initialFormValues]=\"initialFormValues && initialFormValues?.branchContact\">\n            </form-contact-info>\n        </mat-expansion-panel>\n        <mat-expansion-panel class=\"no-shadow\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <smart-div [form]=\"form.controls['branchAddress']\">\n                        <mat-icon>room</mat-icon> Branch Address Details\n                    </smart-div>\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <form-address-info [form]=\"form.controls['branchAddress']\" [isViewMode]=\"isViewMode\"\n                [initialFormValues]=\"initialFormValues && initialFormValues?.branchAddress\">\n            </form-address-info>\n        </mat-expansion-panel>\n        <mat-expansion-panel class=\"no-shadow\" *ngIf=\"isSuperAdmin && !isViewMode && changeModeId\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <mat-icon>settings</mat-icon> DB configurations\n                    </mat-panel-title>\n                </mat-expansion-panel-header>  \n                <app-loader *ngIf=\"isLoading\"></app-loader>\n                <responsive *ngIf=\"!isLoading\">\n                    <div>\n                        <button type=\"button\" class=\"btn\" (click)=\"setUpBranchRoles()\">Setup Roles</button>\n                    </div>\n                </responsive>            \n            </mat-expansion-panel>\n    </mat-accordion>\n</div>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { SchoolService } from '../../services/school.service';\n\n@Component({\n  selector: 'app-school-list',\n  templateUrl: './school-list.component.html',\n  styleUrls: ['./school-list.component.css']\n})\nexport class SchoolListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  schools = [];\n\n  viewUserId : any\n  viewUser = false\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"schoolName\",\n    isAsc : true\n  }\n\n  constructor(\n    private schoolService: SchoolService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n  ) {}\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.schoolService\n    .getSchoolList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.schools = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(guardianId){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this Guardian?\")\n\n    dialogRef.afterClosed()\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (confirmed: boolean) => {\n      if (confirmed) {        \n        \n        this.isLoading = true\n\n        this.schoolService.deleteSchool(guardianId)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result) => {\n            this.getList()\n            this.isLoading = false\n          },\n          (error) => {\n            this.isLoading = false\n          }\n        )\n      }\n    },\n    (error) => {\n      this.isLoading = false\n    }\n    );\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","<card [loading]=\"isLoading\" [title]=\"'School List'\" [subTitle]=\"'Manage your school for students'\"\n  (refresh)=\"getList()\">\n<large-screen>\n  <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n    <thead class=\"thead\">\n      <tr>\n        <th class=\"sr\">#</th>  \n        <th matRipple mat-sort-header=\"schoolFullName\">\n          School Name\n          <mat-icon>business</mat-icon>\n        </th>        \n        <th class=\"action\">\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"tr\" *ngFor=\"let school of schools; let idx = index\">\n        <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n        <td>{{school.schoolBasicInfo.name}}</td>\n        <td class=\"rt\">\n          <button mat-icon-button appToolTip=\"'View School'\" class=\"icon-view\" (click)=\"viewClicked(school._id)\">\n            <mat-icon mat-icon-button>visibility</mat-icon>\n          </button>\n          <button mat-icon-button appToolTip=\"'Edit School'\" class=\"icon-edit\" (click)=\"editClicked(school._id)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</large-screen>\n\n<small-screen>\n  <div fxLayout=\"column\" fxLayoutGap=\"5px\">\n    <div fxFlex=\"center\" *ngFor=\"let school of schools; let idx = index; let odd = odd\" class=\"list-box\" [ngClass]=\"{'alt-row': odd}\">\n      <table>\n        <tr>\n          <td class=\"bold\">#</td>\n          <td>{{ (paging.pageIndex * paging.pageSize) + idx+1}}</td>\n        </tr>\n        <tr>\n          <td class=\"bold\">School Name</td>\n          <td>{{school.schoolBasicInfo.name}}</td>\n        </tr>\n      </table>\n      <div class=\"rt\">\n          <button mat-icon-button appToolTip=\"'View School'\" class=\"icon-view\" (click)=\"viewClicked(school._id)\">\n            <mat-icon mat-icon-button>visibility</mat-icon>\n          </button>\n          <button mat-icon-button appToolTip=\"'Edit School'\" class=\"icon-edit\" (click)=\"editClicked(school._id)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n        </div>\n    </div>\n  </div>\n</small-screen>\n  <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n              [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\"\n              (page)=\"pagingClicked($event)\">\n  </mat-paginator>\n\n</card>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { SchoolListComponent } from './school-list/school-list.component';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { SchoolService } from '../services/school.service';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-school-management',\n  templateUrl: './school-management.component.html',\n  styleUrls: ['./school-management.component.css']\n})\nexport class SchoolManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(SchoolListComponent) private _ListPage: SchoolListComponent\n\n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n  public isSuperAdmin\n  public editPermissions\n\n  constructor(\n    private sharedService: SharedService,\n    private schoolService: SchoolService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(8,6) === 2\n  }\n\n  ngOnInit() {\n    if (this.sharedService.currentUserRoleId()['$oid'] === this.masterData.superAdminRoleId['$oid']) {\n      this.isSuperAdmin = true\n    }\n    else{\n      this.Id = this.sharedService.currentSchoolId()\n    }\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showViewPage = this.showListPage = false\n  }\n\n  deleteClicked(id) {\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'School'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.schoolService.deleteSchool(id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()\n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n\n","<div *ngIf=\"isSuperAdmin\">\n      <button type=\"button\" *ngIf=\"showListPage\" (click)=\"addNewClick()\" mat-raised-button class=\"btn\"\n          matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n          <mat-icon>business</mat-icon> Add New School\n      </button>\n\n\n      <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" class=\"btn\"\n          mat-raised-button appToolTip=\"'Go back to School List'\" matTooltipShowDelay=\"100\"\n          matTooltipHideDelay=\"100\">\n          <mat-icon>keyboard_return</mat-icon> Back to School List\n      </button>\n  </div>\n<br><br>\n\n<app-school-list *ngIf=\"isSuperAdmin\" [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n  (editButtonEvent)=\"editButtonEvent($event)\"></app-school-list>\n\n  \n<app-new-school *ngIf=\"showAddChangePage || showViewPage || !isSuperAdmin\" [changeModeId]=\"Id\"\n[isViewMode]=\"showViewPage || !editPermissions\" (onSaveSuccess)=\"onSaveSuccess($event)\" \n[isSuperAdmin]=\"isSuperAdmin\"></app-new-school>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SchoolManagementComponent } from './school-management/school-management.component';\nimport { ClassManagementComponent } from './class/class-management/class-management.component';\nimport { EventManagementComponent } from './event-management/event-management.component';\nimport { HolidayManagementComponent } from './holiday-management/holiday-management.component';\nimport { SubjectManagementComponent } from './subject-management/subject-management.component';\nimport { RoleManagementComponent } from './role-management/role-management.component';\n\nconst routes: Routes = [\n  {\n    path: 'schoolmgmt',\n    component: SchoolManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'classmgmt',\n    component: ClassManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'eventmgmt',\n    component: EventManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'holidaymgmt',\n    component: HolidayManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'subjectmgmt',\n    component: SubjectManagementComponent,\n    outlet:'postLoginOutlet'\n  },\n  {\n    path: 'rolemgmt',\n    component: RoleManagementComponent,\n    outlet:'postLoginOutlet'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SchoolRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SchoolRoutingModule } from './school-routing.module';\nimport { NewSchoolComponent } from './school-management/new-school/new-school.component';\nimport { SchoolListComponent } from './school-management/school-list/school-list.component';\nimport { SchoolManagementComponent } from './school-management/school-management.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SchoolService } from './services/school.service';\nimport { SchoolBranchInfoComponent } from './school-management/new-school/school-branch-info/school-branch-info.component';\nimport { NewClassComponent } from './class/new-class/new-class.component';\nimport { ClassListComponent } from './class/class-list/class-list.component';\nimport { ClassManagementComponent } from './class/class-management/class-management.component';\nimport { ClassSubjectInfoComponent } from './class/class-subject-info/class-subject-info.component';\nimport { ClassBasicInfoComponent } from './class/class-basic-info/class-basic-info.component';\nimport { ClassService } from './services/class.service';\nimport { SubjectTimingsComponent } from './class/subject-timings/subject-timings.component';\nimport { SectionFeeComponent } from './class/section-fee/section-fee.component';\nimport { CopySubjectComponent } from './class/copy-subject/copy-subject.component';\nimport { EventManagementComponent } from './event-management/event-management.component';\nimport { EventListComponent } from './event-management/event-list/event-list.component';\nimport { NewEventComponent } from './event-management/new-event/new-event.component';\nimport { HolidayManagementComponent } from './holiday-management/holiday-management.component';\nimport { HolidayListComponent } from './holiday-management/holiday-list/holiday-list.component';\nimport { NewHolidayComponent } from './holiday-management/new-holiday/new-holiday.component';\nimport { EventService } from './services/event.service';\nimport { HolidayService } from './services/holiday.service';\nimport { EventBasicInfoComponent } from './event-management/new-event/event-basic-info/event-basic-info.component';\nimport { HolidayBasicInfoComponent } from './holiday-management/new-holiday/holiday-basic-info/holiday-basic-info.component';\nimport { SubjectManagementComponent } from './subject-management/subject-management.component';\nimport { NewSubjectComponent } from './subject-management/new-subject/new-subject.component';\nimport { SubjectListComponent } from './subject-management/subject-list/subject-list.component';\nimport { SubjectBasicInfoComponent } from './subject-management/new-subject/subject-basic-info/subject-basic-info.component';\nimport { SubjectService } from './services/subject.service';\nimport { RoleManagementComponent } from './role-management/role-management.component';\nimport { NewRoleComponent } from './role-management/new-role/new-role.component';\nimport { RoleListComponent } from './role-management/role-list/role-list.component';\nimport { RoleBasicInfoComponent } from './role-management/new-role/role-basic-info/role-basic-info.component';\nimport { RoleService } from './services/role.service';\nimport { RoleEntitlementsComponent } from './role-management/new-role/role-entitlements/role-entitlements.component';\nimport { SubPageEntitlementComponent } from './role-management/new-role/role-entitlements/sub-page-entitlement/sub-page-entitlement.component';\nimport { PageInfoComponent } from './role-management/new-role/role-entitlements/page-info/page-info.component';\n\n\n@NgModule({\n  declarations: [NewSchoolComponent, SchoolListComponent, SchoolManagementComponent, \n    SchoolBranchInfoComponent, NewClassComponent, ClassSubjectInfoComponent,\n    ClassListComponent, ClassManagementComponent, ClassBasicInfoComponent, SubjectTimingsComponent, SectionFeeComponent, \n    CopySubjectComponent, EventManagementComponent, EventListComponent, NewEventComponent, HolidayManagementComponent, \n    HolidayListComponent, NewHolidayComponent, EventBasicInfoComponent, HolidayBasicInfoComponent, SubjectManagementComponent, NewSubjectComponent, SubjectListComponent, SubjectBasicInfoComponent, RoleManagementComponent, NewRoleComponent, RoleListComponent, RoleBasicInfoComponent, RoleEntitlementsComponent, SubPageEntitlementComponent, PageInfoComponent],\n  imports: [\n    CommonModule,\n    SchoolRoutingModule,\n    SharedModule\n  ],\n  providers:[\n    SchoolService, ClassService, EventService, HolidayService, SubjectService, RoleService\n  ]\n})\nexport class SchoolModule { }\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { StorageService } from '@app/shared/services/storage.service';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\n\r\n@Injectable()\r\nexport class ClassService {\r\n\r\n  apiPrefix = \"api/class/\"\r\n\r\n  constructor(\r\n    private _http: HttpClient,\r\n    private _storageService: StorageService,\r\n    private _sharedService: SharedService\r\n  ) {\r\n  }\r\n\r\n  saveClass(classData, id = null) {\r\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveClass\", classData)\r\n  }\r\n\r\n  getClass(id) {\r\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getClass?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n  }\r\n\r\n  getClassList(searchParams) {\r\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"getClassList\", searchParams)\r\n  }\r\n\r\n  deleteClass(id) {\r\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteClass?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment } from '@env/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class EventService {\n\n  apiPrefix = \"api/event/\"\n\n  constructor(\n    private _http: HttpClient,\n    private _sharedService: SharedService\n  ) {\n  }\n\n  getSchoolEventList(searchParams) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"getSchoolEventList\", searchParams)\n  }\n\n  getSchoolEvent(eventId) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolEvent?id=\" + eventId)\n  }\n  saveSchoolEvent(eventData) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSchoolEvent\", eventData)\n  }\n\n  getSchoolEventByDateRange(startDate, endDate) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolEventByDateRange?startDate =\" + startDate + \"&endDate =\" + endDate)\n  }\n  getSchoolEventByDate(agendaDate) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolEventByDate?agendaDate=\" + agendaDate)\n  }\n\n  deleteEvent(id) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteSchoolEvent?id=\" + this._sharedService.serializeMongoObjectId(id))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class HolidayService {\n\n  apiPrefix = \"api/holiday/\"\n\n  constructor(\n    private _http: HttpClient,\n    private _sharedService: SharedService\n  ) {\n  }\n\n  getSchoolHolidayList(searchParams) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"getSchoolHolidayList\", searchParams)\n  }\n\n  getSchoolHoliday(holidayId) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolHoliday?id=\" + holidayId)\n  }\n  saveSchoolHoliday(holidayData) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSchoolHoliday\", holidayData)\n  }\n\n  getSchoolHolidayByDateRange(startDate, endDate) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolHolidayByDateRange?startDate =\" + startDate + \"&endDate =\" + endDate)\n  }\n  getSchoolHolidayByDate(holidayDate) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolHolidayByDate?holidayDate=\" + holidayDate)\n  }\n\n  deleteSchoolHoliday(id) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteSchoolHoliday?id=\" + this._sharedService.serializeMongoObjectId(id))\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class RoleService {\n\n  apiPrefix = \"api/role/\"\n\n  constructor(\n    private _http: HttpClient,\n    private _sharedService: SharedService\n  ) {\n  }\n\n  getSchoolRoleList(searchParams) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"getSchoolRoleList\", searchParams)\n  }\n\n  getSchoolRole(roleId) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolRole?id=\" + roleId)\n  }\n  saveSchoolRole(roleData) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSchoolRole\", roleData)\n  }\n\n  deleteSchoolRole(id) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteSchoolRole?id=\" + this._sharedService.serializeMongoObjectId(id))\n  }\n\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { StorageService } from '@app/shared/services/storage.service';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\n\r\n@Injectable()\r\nexport class SchoolService {\r\n\r\n    apiPrefix = \"api/school/\"\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _storageService: StorageService,\r\n        private _sharedService: SharedService\r\n    ) {\r\n    }\r\n\r\n    saveSchool(schoolData, id = null) {\r\n        return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSchool\", schoolData)\r\n    }\r\n\r\n    getSchool(id) {\r\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchool?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n    }\r\n\r\n    getSchoolList (searchParams){\r\n        return this._http.post(environment.apiUrl+ this.apiPrefix + \"getSchoolList\", searchParams)\r\n      }\r\n\r\n    deleteSchool(id) {\r\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"Deactivate?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n    }  \r\n    \r\n    setupBranchRoles(id) {\r\n        return this._http.get(environment.apiUrl + this.apiPrefix + \"setupBranchRoles?id=\" + this._sharedService.serializeMongoObjectId(id))\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class SubjectService {\n\n  apiPrefix = \"api/subject/\"\n\n  constructor(\n    private _http: HttpClient,\n    private _sharedService: SharedService\n  ) {\n  }\n\n  getSchoolSubjectList(searchParams) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"getSchoolSubjectList\", searchParams)\n  }\n\n  getSchoolSubject(subjectId) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"getSchoolSubject?id=\" + subjectId)\n  }\n  saveSchoolSubject(subjectData) {\n    return this._http.post(environment.apiUrl + this.apiPrefix + \"saveSchoolSubject\", subjectData)\n  }\n\n  deleteSchoolSubject(id) {\n    return this._http.get(environment.apiUrl + this.apiPrefix + \"deleteSchoolSubject?id=\" + this._sharedService.serializeMongoObjectId(id))\n  }\n\n}\n","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { SubjectService } from '../../services/subject.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-subject',\n  templateUrl: './new-subject.component.html',\n  styleUrls: ['./new-subject.component.css']\n})\nexport class NewSubjectComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  @Output() public onSaveSuccess = new EventEmitter();\n  @Input() initialFormValues = null\n  @Input() changeModeId = null\n  @Input() isViewMode = false\n  @Input() showHeader = true\n  @Input() childCard = false;\n\n  mainForm: FormGroup = new FormGroup({})\n\n  title = \"New Subject\"\n  subTitle = \"Add a new subject\"\n  isLoading = false\n  isPopulatingFormDb = false\n  masterData = MasterData\n  open = false\n\n  stoppageCount: number = 0\n\n  constructor(\n    public fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    public subjectService: SubjectService\n  ) { }\n\n  ngOnInit() {\n    this.setTitleMessages()\n    this.sharedService.setFormCommonFields(this.mainForm)\n\n    if (this.changeModeId) {\n      this.populateFromDB()\n    }\n  }\n\n  setTitleMessages() {\n    if (this.changeModeId) {\n      this.title = \"Update Subject.\"\n      this.subTitle = \"Please update following details of subject.\"\n\n      if (this.isViewMode) {\n        this.title = \"View Subject.\"\n        this.subTitle = \"View following details of subject.\"\n      }\n    }\n  }\n\n  populateFromDB() {\n    //--- Fill Subject information for View/Edit mode from Database\n\n    this.isLoading = true\n    this.isPopulatingFormDb = true\n\n    this.subjectService.getSchoolSubject(this.changeModeId)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (result: any) => {\n          result.forEach(element => {\n            this.initialFormValues = element\n            this.mainForm.get('_id').setValue(this.initialFormValues._id)\n            this.mainForm.get('status').setValue(this.initialFormValues.status)\n          });\n\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n        },\n        (error) => {\n          this.isLoading = false\n          this.isPopulatingFormDb = false\n          console.log(error)\n        }\n      );\n  }\n\n  onSubmit(subject: Event) {\n    this.mainForm.markAllAsTouched()\n    subject.preventDefault();\n    subject.stopPropagation();\n\n    if (this.mainForm.valid) {\n      this.isLoading = true\n\n      this.subjectService.saveSchoolSubject(\n        this.mainForm.getRawValue()\n      )\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (result: any) => {\n            this.isLoading = false\n            this.onSaveSuccess.emit(true)\n            this.sharedService.openSnackBar(\"Subject's information saved Successfully.\", \"x\", \"success\")\n            this.mainForm.reset()\n          },\n          (error) => {\n            this.isLoading = false\n            console.log(error)\n          }\n        );\n    } else {\n      this.sharedService.openSnackBar(\"Some fields are invalid. Please fill them properly.\", \"x\", \"fail\")\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n}\n","<card [loading]=\"isLoading\" [title]=\"title\" [subTitle]=\"subTitle\" [cardButtons]=\"false\" [header]=\"showHeader\">\n    <form [formGroup]=\"mainForm\" (ngSubmit)=\"onSubmit($event)\" *ngIf=\"mainForm && !isPopulatingFormDb\">\n        <subject-basic-info [form]=\"mainForm\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\">\n        </subject-basic-info>\n        <form-buttons *ngIf=\"!isViewMode\" [form]=\"mainForm\" [isChangeMode]=\"changeModeId\"></form-buttons>\n    </form>\n</card>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldConfig, validationType } from '@app/shared/component/dynamic-form/field.interface';\nimport { MasterData } from '@env/environment';\nimport { SharedService } from '@app/shared/services/shared.service';\n\n@Component({\n  selector: 'subject-basic-info',\n  templateUrl: './subject-basic-info.component.html',\n  styleUrls: ['./subject-basic-info.component.css']\n})\nexport class SubjectBasicInfoComponent implements OnInit {\n\n  @Input() form: FormGroup\n  @Input() initialFormValues = null\n  @Input() fieldsConfig: FieldConfig[]\n  @Input() isViewMode = false\n\n  masterData = MasterData\n\n  constructor(    \n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {\n    this.sharedService.setFormInitialValueForChangeMode(this.fieldsConfig, this.initialFormValues)\n  }\n\n}\n","<form-code-name [Required]=\"true\" [labelPrefix]=\"'Subject'\" [codeIcon]=\"'menu_book'\" [nameIcon]=\"'menu_book'\"\n    [form]=\"form\" [isViewMode]=\"isViewMode\" [initialFormValues]=\"initialFormValues\"></form-code-name>","import { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment, MasterData } from '@env/environment';\nimport { SubjectService } from '../../services/subject.service';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Sort } from '@angular/material/sort';\nimport { PostLoginService } from '@app/post-login/post-login.service';\n\n@Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject-list.component.css']\n})\nexport class SubjectListComponent implements OnInit, OnDestroy {\n \n  private unsubscribe$ = new Subject();\n  \n  @Output() viewButtonEvent = new EventEmitter()\n  @Output() editButtonEvent = new EventEmitter()\n  @Output() deleteButtonEvent = new EventEmitter()\n  \n  @Input() pageTitle: string =\"\"\n  @Input() roleId: number\n\n  isLoading = false;\n\n  environment = environment\n  masterData = MasterData;\n  subjects = [];\n\n  viewUserId : any\n  viewUser = false\n  public editPermissions\n\n  searchParams = null\n  paging = {\n    pageIndex: this.masterData.paging.pageIndex,\n    pageSize: this.masterData.paging.pageSize,\n    length: 1\n  }\n  sortParams = {\n    fieldName : \"name\",\n    isAsc : true\n  }\n\n  constructor(\n    private subjectService: SubjectService,\n    private changeDetector: ChangeDetectorRef,\n    public sharedService: SharedService,\n    private plService: PostLoginService\n  ) {\n    this.editPermissions = this.plService.getPageEntitlements(8,3) == 2\n  }\n\n  ngOnInit() {\n    this.getList()\n  }\n\n  getList()\n  {\n    this.isLoading = true;\n\n    let SearchObject = {\n      SearchParameters : this.searchParams,\n      paging : {\n        \"pageIndex\": this.paging.pageIndex,\n        \"pageSize\": this.paging.pageSize\n      },\n      sorting:{\n        \"fieldName\": this.sortParams.fieldName,\n        \"isAsc\": this.sortParams.isAsc\n      }\n    }\n\n    this.subjectService\n    .getSchoolSubjectList(SearchObject)\n    .pipe(takeUntil(this.unsubscribe$))\n    .subscribe(\n      (result: any) => {\n        this.isLoading =false\n        this.subjects = result.data   \n        this.paging.length = result.count    \n      }, \n      (error) => {\n        this.isLoading =false\n        console.log(error)\n      }\n      );    \n  }\n  \n  viewClicked(id){\n    this.viewButtonEvent.emit(id)\n  }\n\n  editClicked(id){\n    this.editButtonEvent.emit(id)\n  }\n\n  deleteClicked(id){\n    this.deleteButtonEvent.emit(id)\n  }\n\n  CardCrossEvent_ViewUser(){\n    this.viewUser = false\n  }\n\n  sortClicked(sort: Sort){\n    this.paging.pageIndex = 0\n    this.sortParams.fieldName = sort.active\n    this.sortParams.isAsc = sort.direction === 'asc'\n    this.getList()\n    this.changeDetector.detectChanges();\n  }\n\n  pagingClicked(paginator: PageEvent){  \n    this.paging.pageIndex = paginator.pageIndex\n    this.paging.pageSize = paginator.pageSize\n    this.getList();\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<card [loading]=\"isLoading\" [title]=\"'Subject List'\" [subTitle]=\"'Manage your subject for School'\"\n    (refresh)=\"getList()\">\n    <large-screen>\n        <table class=\"table\" matSort (matSortChange)=\"sortClicked($event)\">\n            <thead class=\"thead\">\n                <tr>\n                    <th class=\"sr\">#</th>\n                    <th matRipple mat-sort-header=\"code\">\n                            Subject Code\n                            <mat-icon>menu_book</mat-icon>\n                        </th>\n                    <th matRipple mat-sort-header=\"name\">\n                        Subject Name\n                        <mat-icon>menu_book</mat-icon>\n                    </th>\n                    <th class=\"action\">\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"tr\" *ngFor=\"let subject of subjects; let idx = index\">\n                    <td class=\"sr-col\">{{ (paging.pageIndex *  paging.pageSize) + idx+1}}</td>\n                    <td>{{subject.code}}</td>\n                    <td>{{subject.name}}</td>\n                    <td class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Subject'\" class=\"icon-view\"\n                            (click)=\"viewClicked(subject._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Subject'\" class=\"icon-edit\"\n                            (click)=\"editClicked(subject._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Subject'\" class=\"icon-delete\"\n                            (click)=\"deleteClicked(subject._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </large-screen>\n\n    <small-screen class=\"default-font\">\n        <ng-container *ngFor=\"let subject of subjects; let idx = index; let odd = odd\">\n            <card [childCard]=\"true\" [header]=\"false\">\n                <row gap=\"2px\">\n                    <div fxFlex=\"30%\">\n                        <b># {{ (paging.pageIndex * paging.pageSize) + idx+1}}</b>\n                    </div>\n                    <div fxFlex class=\"rt\">\n                        <button mat-icon-button appToolTip=\"'View Subject'\" class=\"big-icon-view\"\n                            (click)=\"viewClicked(subject._id)\">\n                            <mat-icon mat-icon-button>visibility</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Edit Subject'\" class=\"big-icon-edit\"\n                            (click)=\"editClicked(subject._id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"editPermissions\" mat-icon-button appToolTip=\"'Delete Subject'\" class=\"big-icon-delete\"\n                            (click)=\"deleteClicked(subject._id)\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </div>\n                </row>\n                <div class=\"bold\">\n                    <mat-icon>menu_book</mat-icon> {{subject.code}}\n                </div>\n                <br>\n                <div class=\"small-screen-data\">\n                    {{subject.name}}\n                </div>\n            </card>\n            <br>\n        </ng-container>\n\n    </small-screen>\n\n    <no-record-found *ngIf=\"subjects.length ==0\"></no-record-found>\n\n    <mat-paginator [length]=\"paging.length\" [showFirstLastButtons]=\"masterData.paging.showFirstLastButtons\"\n        [pageSize]=\"paging.pageSize\" [pageSizeOptions]=\"masterData.paging.pageSizeOptions\"\n        (page)=\"pagingClicked($event)\">\n    </mat-paginator>\n\n</card>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MasterData } from '@env/environment';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '@app/shared/component/dynamic-form/field.interface';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedService } from '@app/shared/services/shared.service';\nimport { SubjectService } from '../services/subject.service';\nimport { SubjectListComponent } from './subject-list/subject-list.component';\nimport { PostLoginService } from '@app/post-login/post-login.service';\nimport { CardBottomComponent } from '@app/shared/component/boxes/card-bottom/card-bottom.component';\n\n@Component({\n  selector: 'app-subject-management',\n  templateUrl: './subject-management.component.html',\n  styleUrls: ['./subject-management.component.css']\n})\nexport class SubjectManagementComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject();\n\n  @ViewChild(SubjectListComponent) private _ListPage: SubjectListComponent\n  @ViewChild('searchCard') searchCard : CardBottomComponent\n\n  showViewPage = false\n  showAddChangePage = false\n  showListPage = true\n  showDeleteButton = false\n  public editPermissions\n\n  isLoading = false\n  Id = null\n  masterData = MasterData\n\n  searchForm: FormGroup\n  searchConfig: FieldConfig[] = [\n    {\n      isViewMode: false,\n      type: \"input\",\n      label: \"Subject Name\",\n      inputType: \"text\",\n      name: \"name\",\n      icon: \"menu_book\"\n    } \n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private sharedService: SharedService,\n    private subjectService: SubjectService,\n    private plService: PostLoginService\n  ) {\n    this.searchForm = this.fb.group({})\n    this.editPermissions = this.plService.getPageEntitlements(8,3) === 2\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchClick() {\n    this._ListPage.searchParams = this.searchForm.value\n    this._ListPage.paging.pageIndex = 0\n    this._ListPage.getList()\n    this.searchCard.hide()\n  }\n\n  addNewClick() {\n    this.Id = null\n    this.showAddChangePage = true;\n    this.showViewPage = this.showListPage = false\n  }\n  backToListClick() {\n    this.showListPage = true;\n    this.showViewPage = this.showAddChangePage = false\n  }\n\n  onSaveSuccess(event) {\n    this.backToListClick()\n    if (this._ListPage) {\n      this._ListPage.getList()\n    }\n  }\n\n  viewButtonEvent(event) {\n    this.Id = event;\n    this.showViewPage = true;\n    this.showDeleteButton = this.showListPage = this.showAddChangePage = false\n  }\n\n  editButtonEvent(event) {\n    this.showAddChangePage = true;\n    this.Id = event\n    this.showDeleteButton = this.showViewPage = this.showListPage = false\n  }\n\n  deleteButtonEvent(event) {\n    this.viewButtonEvent(event)\n    this.showDeleteButton = true\n  }\n\n  deleteSubjectPermanently(){\n    let dialogRef = this.sharedService.openConfirmDialog(\"You want to delete this 'Subject'?\")\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (confirmed: boolean) => {\n          if (confirmed) {\n\n            this.isLoading = true\n\n            this.subjectService.deleteSchoolSubject(this.Id)\n              .pipe(takeUntil(this.unsubscribe$))\n              .subscribe(\n                (result) => {\n                  this.backToListClick()\n                  this._ListPage.getList()                  \n                  this.isLoading = false\n                },\n                (error) => {\n                  this.isLoading = false\n                }\n              )\n          }\n        },\n        (error) => {\n          this.isLoading = false\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}","<responsive colGap=\"50px\">\n    <div fxFlex=\"30\">\n        <button type=\"button\" *ngIf=\"showListPage && editPermissions\" (click)=\"addNewClick()\" mat-raised-button\n            matTooltipShowDelay=\"100\" class=\"btn\" matTooltipHideDelay=\"100\">\n            <mat-icon>menu_book</mat-icon> Add New Subject\n        </button>\n    </div>\n    <div fxFlex>\n        <card-bottom [form]=\"searchForm\" #searchCard [hidden]=\"!showListPage\" [title]=\"'Search Subject'\">\n            <card [header]=\"false\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchClick()\">\n                    <dynamic-form [form]=\"searchForm\" [fields]=\"searchConfig\"></dynamic-form>\n                    <form-buttons [form]=\"searchForm\" [isSearchForm]=\"true\" (onReset)=\"onSearchClick()\"></form-buttons>\n                </form>\n            </card>\n        </card-bottom>\n    </div>\n</responsive>\n\n<responsive>\n    <div>\n        <button type=\"button\" *ngIf=\"showAddChangePage || showViewPage\" (click)=\"backToListClick()\" mat-raised-button\n            class=\"btn\" appToolTip=\"'Go back to Subject List'\" matTooltipShowDelay=\"100\" matTooltipHideDelay=\"100\">\n            <mat-icon>keyboard_return</mat-icon> Back to Subject List\n        </button>\n    </div>\n</responsive>\n<br><br>\n\n<app-new-subject *ngIf=\"showAddChangePage || showViewPage\" [changeModeId]=\"Id\" [isViewMode]=\"showViewPage\"\n    (onSaveSuccess)=\"onSaveSuccess($event)\"></app-new-subject>\n<app-subject-list [hidden]=\"!showListPage\" (viewButtonEvent)=\"viewButtonEvent($event)\"\n    (editButtonEvent)=\"editButtonEvent($event)\" (deleteButtonEvent)=\"deleteButtonEvent($event)\"></app-subject-list>\n\n<p>\n    <button *ngIf=\"showDeleteButton && showViewPage\" mat-raised-button class=\"delete-button padding\" type=\"button\"\n        (click)=\"deleteSubjectPermanently()\">\n        <mat-icon>delete_forever</mat-icon> Delete And Save\n    </button>\n</p>"]}