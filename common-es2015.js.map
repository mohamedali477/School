{"version":3,"sources":["./src/app/post-login/post-login.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgB;;;;;AAMpD,MAAM,gBAAgB;IAMzB,YACY,MAAc,EACd,IAAgB,EAChB,aAA4B;QAF5B,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAe;QALxC,gBAAW,GAAG,4DAAW;IAMtB,CAAC;IAEJ,gBAAgB;QACZ,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAC7D,OAAQ,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;IACtE,CAAC;IAED,yCAAyC;IACzC,mBAAmB;QAEf,IAAI,SAAS,GAAG,2DAAU,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC;QACnG,IAAI,UAAU,GAAG,2DAAU,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC;QAErG,IAAI,SAAS,IAAI,UAAU,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,uDAAuD,CAAC;YAClF,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC;SACjD;aACI;YACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gDAAgD,CAAC;YAC3E,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC;SACtD;IACL,CAAC;IAED,mBAAmB,CAAC,MAAM,EAAE,SAAS;QACjC,IAAI,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;QAE9D,IAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,2DAAU,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAC;YACjE,OAAO,CAAC;SACX;aACG;YACA,IAAI,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC;YAC1E,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC;YAE/D,IAAG,IAAI,CAAC,YAAY,KAAK,CAAC,IAAI,OAAO,CAAC,YAAY,KAAK,CAAC,EAAC;gBACrD,QAAQ;aACX;iBACG;gBACA,OAAO,OAAO,CAAC,YAAY;aAC9B;SACJ;IACL,CAAC;IAED;;yEAEqE;IACrE,gBAAgB,CAAC,IAAI;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,mBAAmB,GAAG,kBAAkB,EAAE,IAAI,CAAC;IAClG,CAAC;IAED,sBAAsB,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,6CAA6C,GAAG,EAAE,CAAC;IACrG,CAAC;;gFA7DO,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MasterData, environment } from '@env/environment';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from '@app/shared/services/shared.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class PostLoginService {\r\n\r\n    public currentUserRoleEntitlements\r\n\r\n    environment = environment\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient,\r\n        private sharedService: SharedService\r\n    ) {}\r\n\r\n    hasMultipleRoles(){\r\n        let userRoles = JSON.parse(this.sharedService.loggedInData())\r\n        return  userRoles && userRoles.roles && userRoles.roles.length > 1\r\n    }\r\n\r\n    //************* Navigate to my Profile */\r\n    navigateToMyProfile() {\r\n\r\n        let isStudent = MasterData.studentRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\r\n        let isGuardian = MasterData.guardianRoleId['$oid'] === this.sharedService.currentUserRoleId()['$oid']\r\n\r\n        if (isStudent || isGuardian) {\r\n            this.router.navigateByUrl(\"pl/secure/studentguardian/(postLoginOutlet:myProfile)\")\r\n            console.log(\"yes i here isGuardian..........\")\r\n        }\r\n        else {\r\n            this.router.navigateByUrl(\"pl/secure/employee/(postLoginOutlet:myProfile)\")\r\n            console.log(\"yes i here isGuardian else .........\")\r\n        }\r\n    }\r\n\r\n    getPageEntitlements(pageId, subPageId){\r\n        let currentUserRoleId = this.sharedService.currentUserRoleId()\r\n\r\n        if(currentUserRoleId['$oid'] === MasterData.superAdminRoleId['$oid']){\r\n            return 2\r\n        }\r\n        else{\r\n            let page = this.currentUserRoleEntitlements.find(x => x.pageId === pageId)\r\n            let subPage = page.subPage.find(x => x.subPageId === subPageId)\r\n\r\n            if(page.accessTypeId === 0 || subPage.accessTypeId === 0){\r\n                //logOut\r\n            }\r\n            else{\r\n                return subPage.accessTypeId\r\n            }\r\n        }\r\n    }\r\n\r\n    /*******************************************************************\r\n     * Save User settings\r\n     *******************************************************************/\r\n    saveUserSettings(data){\r\n       return this.http.post(this.environment.apiUrl + \"api/userSettings/\" + \"saveUserSettings\", data)\r\n    }\r\n\r\n    restoreDefaultSettings(id){\r\n        return this.http.get(this.environment.apiUrl + \"api/userSettings/restoreDefaultSettings?id=\" + id)\r\n     }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}